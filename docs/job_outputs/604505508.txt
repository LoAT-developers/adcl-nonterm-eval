WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f626_0_main_GE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg1P0 > 0 /\ -arg2P0 == 0 /\ -arg1+arg1P0 <= 0 /\ arg2-arg3P0 == 0), cost: 1
   1: f626_0_main_GE -> f675_0_main_InvokeMethod : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -arg4P1+arg3 == 0 /\ arg1 > 0 /\ -arg2P1+arg2 == 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ 1+x80 > 0), cost: 1
   2: f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg2P2 > 0 /\ -arg1P2+arg3 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
   3: f626_0_main_GE -> f675_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-arg4P3+arg3 == 0 /\ arg1P3-arg1 <= 0 /\ 1-arg3P3 == 0 /\ arg1P3 > 0 /\ arg1 > 0 /\ arg2-arg2P3 == 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
   4: f626_0_main_GE -> f675_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-arg1+arg1P4 <= 0 /\ -arg3P4+arg3 == 0 /\ arg1 > 0 /\ 1+x210 > 0 /\ -arg4P4+arg3 == 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg2-arg2P4 == 0 /\ arg1P4 > 0), cost: 1
   5: f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg4 > 0 /\ arg1P5 > 0 /\ arg1 > 0 /\ arg4-arg3P5 == 0 /\ arg2-arg2P5 == 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
  14: f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg4 > 0 /\ -arg1P14+arg3 == 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  12: f60_0_power_GT -> f60_0_power_GT\' : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (x690 > 0 /\ arg1-arg1P12 == 0 /\ arg2-arg2P12 == 0 /\ -1+arg1^2 >= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ -x690+arg2 > 0), cost: 1
   6: f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg3-arg1P6 == 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg3 > 0), cost: 1
   7: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+x360 > 0 /\ arg3-arg4P7 == 0 /\ arg2-arg2P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg1P7 > 0 /\ arg3 > 0), cost: 1
   8: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-arg4P8+arg3 == 0 /\ arg1P8 > 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ 1-arg3P8 == 0 /\ arg2-arg2P8 == 0), cost: 1
   9: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ -arg3P9+arg3 == 0 /\ -arg4P9+arg3 == 0 /\ 1+x450 > 0 /\ arg1P9-arg1 <= 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg3 > 0 /\ arg2-arg2P9 == 0), cost: 1
  10: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg2-arg2P10 == 0 /\ 1-arg3 == 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ arg4-arg3P10 == 0), cost: 1
  11: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ -arg3P11+arg4 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ 1+arg2-arg2P11 == 0), cost: 1
  15: f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (arg4 > 0 /\ -arg1P15+arg3 == 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  13: f60_0_power_GT\' -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-arg1P13+arg1^2 == 0 /\ arg2-2*arg2P13 >= 0 /\ -2+arg2-2*arg2P13 < 0 /\ -1+arg1^2 >= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg2-arg2P13 > 0 /\ arg2P13 > 0), cost: 1
  16: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg1-arg1P16 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
  17: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-1-arg1P17+arg1 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
  18: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f626_0_main_GE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg1P0 > 0 /\ -arg2P0 == 0 /\ -arg1+arg1P0 <= 0 /\ arg2-arg3P0 == 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ arg1P0 > 0 /\ -arg1+arg1P0 <= 0), cost: 1

Applied preprocessing
Original rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -arg4P1+arg3 == 0 /\ arg1 > 0 /\ -arg2P1+arg2 == 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ 1+x80 > 0), cost: 1
New rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg2P2 > 0 /\ -arg1P2+arg3 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg3, arg3'=arg3P2, (1+arg2P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-arg4P3+arg3 == 0 /\ arg1P3-arg1 <= 0 /\ 1-arg3P3 == 0 /\ arg1P3 > 0 /\ arg1 > 0 /\ arg2-arg2P3 == 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-arg1+arg1P4 <= 0 /\ -arg3P4+arg3 == 0 /\ arg1 > 0 /\ 1+x210 > 0 /\ -arg4P4+arg3 == 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg2-arg2P4 == 0 /\ arg1P4 > 0), cost: 1
New rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1

Applied preprocessing
Original rule:
f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg4 > 0 /\ arg1P5 > 0 /\ arg1 > 0 /\ arg4-arg3P5 == 0 /\ arg2-arg2P5 == 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
New rule:
f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg3-arg1P6 == 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg3 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg3, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+x360 > 0 /\ arg3-arg4P7 == 0 /\ arg2-arg2P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg1P7 > 0 /\ arg3 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-arg4P8+arg3 == 0 /\ arg1P8 > 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ 1-arg3P8 == 0 /\ arg2-arg2P8 == 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ -arg3P9+arg3 == 0 /\ -arg4P9+arg3 == 0 /\ 1+x450 > 0 /\ arg1P9-arg1 <= 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ arg3 > 0 /\ arg2-arg2P9 == 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg2-arg2P10 == 0 /\ 1-arg3 == 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ arg4-arg3P10 == 0), cost: 1
New rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1

Applied preprocessing
Original rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ -arg3P11+arg4 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ 1+arg2-arg2P11 == 0), cost: 1
New rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1

Applied preprocessing
Original rule:
f60_0_power_GT -> f60_0_power_GT\' : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (x690 > 0 /\ arg1-arg1P12 == 0 /\ arg2-arg2P12 == 0 /\ -1+arg1^2 >= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ -x690+arg2 > 0), cost: 1
New rule:
f60_0_power_GT -> f60_0_power_GT\' : arg4'=arg4P12, arg3'=arg3P12, (-2+arg2 >= 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f60_0_power_GT\' -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-arg1P13+arg1^2 == 0 /\ arg2-2*arg2P13 >= 0 /\ -2+arg2-2*arg2P13 < 0 /\ -1+arg1^2 >= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg2-arg2P13 > 0 /\ arg2P13 > 0), cost: 1
New rule:
f60_0_power_GT\' -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 1

Applied preprocessing
Original rule:
f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg4 > 0 /\ -arg1P14+arg3 == 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (arg4 > 0 /\ -arg1P15+arg3 == 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg1-arg1P16 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
New rule:
f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-1-arg1P17+arg1 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
New rule:
f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1

Simplified rules
Start location: __init
  19: f1_0_main_ConstantStackPush -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ arg1P0 > 0 /\ -arg1+arg1P0 <= 0), cost: 1
  20: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  21: f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg3, arg3'=arg3P2, (1+arg2P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  22: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  23: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1
  24: f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
  33: f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  31: f60_0_power_GT -> f60_0_power_GT\' : arg4'=arg4P12, arg3'=arg3P12, (-2+arg2 >= 0 /\ arg1 > 0), cost: 1
  25: f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg3, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  26: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  27: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  28: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  29: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
  30: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
  34: f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  32: f60_0_power_GT\' -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 1
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  18: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ arg1P0 > 0 /\ -arg1+arg1P0 <= 0), cost: 1
New rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2

Applied deletion
Removed the following rules: 18 19

Eliminating location f60_0_power_GT\' by chaining:

Applied chaining
First rule:
f60_0_power_GT -> f60_0_power_GT\' : arg4'=arg4P12, arg3'=arg3P12, (-2+arg2 >= 0 /\ arg1 > 0), cost: 1
Second rule:
f60_0_power_GT\' -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 1
New rule:
f60_0_power_GT -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ -2+arg2 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 2

Applied simplification
Original rule:
f60_0_power_GT -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ -2+arg2 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 2
New rule:
f60_0_power_GT -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 2

Applied deletion
Removed the following rules: 31 32

Eliminated locations on linear paths
Start location: __init
  20: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  21: f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg3, arg3'=arg3P2, (1+arg2P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  22: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  23: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1
  24: f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
  33: f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  38: f60_0_power_GT -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 2
  25: f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg3, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  26: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  27: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  28: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  29: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
  30: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
  34: f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Accelerated simple loops
Start location: __init
  20: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  21: f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg3, arg3'=arg3P2, (1+arg2P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  22: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  23: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1
  24: f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
  33: f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  38: f60_0_power_GT -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 2
  25: f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg3, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  26: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  27: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  28: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  29: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
  30: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
  34: f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Applied chaining
First rule:
f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg3, arg3'=arg3P2, (1+arg2P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f60_0_power_GT -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 2
New rule:
f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg3^2, arg3'=arg3P13, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg2P13 > 0), cost: 3

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg3, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f60_0_power_GT -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1^2, arg3'=arg3P13, (arg2-2*arg2P13 >= 0 /\ arg1 > 0 /\ 2-arg2+2*arg2P13 > 0 /\ arg2P13 > 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg3^2, arg3'=arg3P13, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg2P13 > 0), cost: 3

Applied deletion
Removed the following rules: 38

Chained accelerated rules with incoming rules
Start location: __init
  20: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  21: f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg3, arg3'=arg3P2, (1+arg2P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  22: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  23: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1
  39: f626_0_main_GE -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg3^2, arg3'=arg3P13, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg2P13 > 0), cost: 3
  24: f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
  33: f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  25: f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg3, arg3'=arg3P6, (1+arg2P6 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  26: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  27: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  28: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  40: f712_0_main_ArrayAccess -> f60_0_power_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg3^2, arg3'=arg3P13, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg2P13 > 0), cost: 3
  29: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
  30: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
  34: f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Removed unreachable locations and irrelevant leafs
Start location: __init
  20: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  22: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  23: f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1
  24: f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
  33: f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  26: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  27: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  28: f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  29: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
  30: f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
  34: f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Eliminating location f675_0_main_InvokeMethod by chaining:

Applied chaining
First rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ 1 > 0 /\ arg1P3 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ 1 > 0 /\ arg1P3 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P3, arg3'=1, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ 1 > 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ 1 > 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1
Second rule:
f675_0_main_InvokeMethod -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg4, (arg4 > 0 /\ arg1P5 > 0 /\ arg1P5-arg1 <= 0 /\ arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2

Applied simplification
Original rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
New rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f626_0_main_GE -> f675_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 1
Second rule:
f675_0_main_InvokeMethod -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2

Applied deletion
Removed the following rules: 20 22 23 24 33

Eliminating location f753_0_main_InvokeMethod by chaining:

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (0 == 0 /\ arg1P8 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (0 == 0 /\ arg1P8 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (1 > 0 /\ arg1P8 > 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (1 > 0 /\ arg1P8 > 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P8, arg3'=1, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (1 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (1 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg4, (-1+arg3 == 0 /\ arg4 > 0 /\ arg1P10 > 0 /\ -arg1+arg1P10 <= 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P9 > 0 /\ -1+arg3 == 0 /\ arg1P9-arg1 <= 0 /\ arg1P10 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ -arg1P9+arg1P10 <= 0), cost: 2

Applied simplification
Original rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P9 > 0 /\ -1+arg3 == 0 /\ arg1P9-arg1 <= 0 /\ arg1P10 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ -arg1P9+arg1P10 <= 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3 == 0 /\ arg1P9-arg1 <= 0 /\ arg1P10 > 0 /\ -arg2+arg3 > 0 /\ -arg1P9+arg1P10 <= 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg4, (-arg1+arg1P11 <= 0 /\ arg4 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P9 > 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied simplification
Original rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P9 > 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f712_0_main_ArrayAccess -> f753_0_main_InvokeMethod : arg4'=arg3, arg1'=arg1P9, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f753_0_main_InvokeMethod -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg4 > 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied deletion
Removed the following rules: 26 27 28 29 30 34

Eliminated locations on tree-shaped paths
Start location: __init
  41: f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  42: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  43: f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  44: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  45: f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  46: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
  47: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  48: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
  49: f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  50: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  51: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
  52: f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  53: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3 == 0 /\ arg1P9-arg1 <= 0 /\ arg1P10 > 0 /\ -arg2+arg3 > 0 /\ -arg1P9+arg1P10 <= 0), cost: 2
  54: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
  55: f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Applied pruning (of leafs and parallel rules):
Start location: __init
  41: f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  42: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  43: f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  44: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  45: f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  46: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
  47: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  48: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
  49: f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  50: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  51: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
  52: f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  54: f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
  55: f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Eliminating location f712_0_main_ArrayAccess by chaining:

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -1+arg3P7 == 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -1+arg3P7 == 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -1+arg3P7 == 0 /\ arg1P1-arg1 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -1+arg3P7 == 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -1+arg3P7 == 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -1+arg3P7 == 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-1+arg3P7 == 0 /\ -arg1+arg1P7 <= 0 /\ arg1P10 > 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -1+arg3P7 == 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -1+arg3P7 == 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -1+arg3P7 == 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg3P7 > 0 /\ -arg1+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P10 > 0 /\ arg1P8-arg1 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P8+arg1P11 <= 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P8 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P8 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P8 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P9+arg1P11 <= 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied chaining
First rule:
f626_0_main_GE -> f712_0_main_ArrayAccess : arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
Second rule:
f712_0_main_ArrayAccess -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P9-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P9 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P9 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P5 > 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P9 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied deletion
Removed the following rules: 41 43 45 47 48 49 50 51 52 54 55

Eliminated locations on tree-shaped paths
Start location: __init
  42: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  44: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  46: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
  56: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -1+arg3P7 == 0 /\ arg1P1-arg1 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  57: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  58: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  59: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  60: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  61: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  62: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  63: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  64: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -1+arg3P7 == 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  65: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  66: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  67: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  68: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  69: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  70: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  71: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (arg1P9 > 0 /\ arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  72: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -1+arg3P7 == 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  73: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  74: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  75: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  76: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  77: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P8 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  78: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1+arg1P4 <= 0 /\ -arg1P9+arg1P11 <= 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  79: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg1P9 > 0 /\ arg1P5-arg1P4 <= 0 /\ arg1P9-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Applied pruning (of leafs and parallel rules):
Start location: __init
  42: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  44: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  46: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
  56: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -1+arg3P7 == 0 /\ arg1P1-arg1 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  57: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  58: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  60: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  61: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  66: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  67: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  68: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  69: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  74: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -1+arg3P7 == 0 /\ arg1P1-arg1 <= 0 /\ arg1P10 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, (arg1P10 > 0 /\ arg3 > 0 /\ -arg1+arg1P10 <= 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-arg1+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (-arg1P1+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-arg1+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P10 > 0 /\ arg1P8-arg1P5 <= 0 /\ -arg1P8+arg1P10 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, (arg1P10 > 0 /\ arg3 > 0 /\ -arg1+arg1P10 <= 0 /\ -arg2+arg3 > 0), cost: 4

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P8+arg1P11 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-arg1+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4

Simplified simple loops
Start location: __init
  42: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  44: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  46: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
  58: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  61: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  66: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  69: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  74: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  80: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, (arg1P10 > 0 /\ arg3 > 0 /\ -arg1+arg1P10 <= 0 /\ -arg2+arg3 > 0), cost: 4
  81: f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-arg1+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Applied acceleration
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P10, arg1'=arg1P10, (arg1P10 > 0 /\ arg3 > 0 /\ -arg1+arg1P10 <= 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg2+n0, arg4'=arg4P10, arg1'=arg1P10, (1-arg2-n0+arg3 > 0 /\ arg1P10 > 0 /\ -1+n0 >= 0 /\ arg1-arg1P10 >= 0 /\ arg3 > 0), cost: 4*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lBMIan.txt

Applied instantiation
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg2+n0, arg4'=arg4P10, arg1'=arg1P10, (1-arg2-n0+arg3 > 0 /\ arg1P10 > 0 /\ -1+n0 >= 0 /\ arg1-arg1P10 >= 0 /\ arg3 > 0), cost: 4*n0
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P10, arg1'=arg1P10, (1 > 0 /\ -1-arg2+arg3 >= 0 /\ arg1P10 > 0 /\ arg1-arg1P10 >= 0 /\ arg3 > 0), cost: -4*arg2+4*arg3

Applied acceleration
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-arg1+arg1P11 <= 0 /\ arg3 > 0 /\ arg1P11 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg2+n1, arg4'=arg4P11, arg1'=arg1P11, (arg1-arg1P11 >= 0 /\ -1+n1 >= 0 /\ 1-arg2-n1+arg3 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 4*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PgoAPD.txt

Applied instantiation
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg2+n1, arg4'=arg4P11, arg1'=arg1P11, (arg1-arg1P11 >= 0 /\ -1+n1 >= 0 /\ 1-arg2-n1+arg3 > 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: 4*n1
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P11, arg1'=arg1P11, (1 > 0 /\ arg1-arg1P11 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: -4*arg2+4*arg3

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P10, arg1'=arg1P10, (1 > 0 /\ -1-arg2+arg3 >= 0 /\ arg1P10 > 0 /\ arg1-arg1P10 >= 0 /\ arg3 > 0), cost: -4*arg2+4*arg3
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P10, arg1'=arg1P10, (-1-arg2+arg3 >= 0 /\ arg1P10 > 0 /\ arg1-arg1P10 >= 0 /\ arg3 > 0), cost: -4*arg2+4*arg3

Applied simplification
Original rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P11, arg1'=arg1P11, (1 > 0 /\ arg1-arg1P11 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: -4*arg2+4*arg3
New rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P11, arg1'=arg1P11, (arg1-arg1P11 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: -4*arg2+4*arg3

Applied deletion
Removed the following rules: 80 81

Accelerated simple loops
Start location: __init
  42: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  44: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  46: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
  58: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  61: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  66: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  69: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  74: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  84: f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P10, arg1'=arg1P10, (-1-arg2+arg3 >= 0 /\ arg1P10 > 0 /\ arg1-arg1P10 >= 0 /\ arg3 > 0), cost: -4*arg2+4*arg3
  85: f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P11, arg1'=arg1P11, (arg1-arg1P11 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: -4*arg2+4*arg3
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2


Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P10, arg1'=arg1P10, (-1-arg2+arg3 >= 0 /\ arg1P10 > 0 /\ arg1-arg1P10 >= 0 /\ arg3 > 0), cost: -4*arg2+4*arg3
New rule:
__init -> f626_0_main_GE : arg2'=arg2P18, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg2P18, (arg1P10 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f626_0_main_GE : arg2'=arg3, arg4'=arg4P11, arg1'=arg1P11, (arg1-arg1P11 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg3 > 0 /\ arg1P11 > 0), cost: -4*arg2+4*arg3
New rule:
__init -> f626_0_main_GE : arg2'=arg2P18, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg2P18, (arg1P11 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18

Applied deletion
Removed the following rules: 84 85

Chained accelerated rules with incoming rules
Start location: __init
  42: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  44: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
  46: f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
  58: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  61: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  66: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  69: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  74: f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  37: __init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
  86: __init -> f626_0_main_GE : arg2'=arg2P18, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg2P18, (arg1P10 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18
  87: __init -> f626_0_main_GE : arg2'=arg2P18, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg2P18, (arg1P11 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18


Eliminating location f626_0_main_GE by chaining:

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg2P18 > 0 /\ 1+arg2P18 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P1 > 0 /\ arg1P0 > 0 /\ arg3P1 > 0), cost: 4

Applied simplification
Original rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg2P18 > 0 /\ 1+arg2P18 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P1 > 0 /\ arg1P0 > 0 /\ arg3P1 > 0), cost: 4
New rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P1 > 0 /\ arg3P1 > 0), cost: 4

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg1P3-arg1 <= 0 /\ arg1P3 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1P0 <= 0 /\ 1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 4

Applied simplification
Original rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1P0 <= 0 /\ 1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 4
New rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0), cost: 4

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3, arg3'=arg3P14, (-arg1+arg1P4 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0 /\ arg1P4 > 0), cost: 2
New rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg2P18, arg3'=arg3P14, (arg2P18 > 0 /\ 1+arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0 /\ arg1P4 > 0), cost: 4

Applied simplification
Original rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg2P18, arg3'=arg3P14, (arg2P18 > 0 /\ 1+arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0 /\ arg1P4 > 0), cost: 4
New rule:
__init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg2P18, arg3'=arg3P14, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P4 > 0), cost: 4

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ 1+arg2P18 > 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P0 > 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6

Applied simplification
Original rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ 1+arg2P18 > 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P0 > 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ 1+arg2P18 > 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6

Applied simplification
Original rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ 1+arg2P18 > 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ 1+arg2P18 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P0 > 0 /\ arg1P7 > 0), cost: 6

Applied simplification
Original rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ 1+arg2P18 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P0 > 0 /\ arg1P7 > 0), cost: 6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1P3-arg1 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ 1+arg2P18 > 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0 /\ arg1P8-arg1P5 <= 0), cost: 6

Applied simplification
Original rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ 1+arg2P18 > 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0 /\ arg1P8-arg1P5 <= 0), cost: 6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0), cost: 6

Applied chaining
First rule:
__init -> f626_0_main_GE : arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2P18, (1+arg2P18 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P0 > 0), cost: 2
Second rule:
f626_0_main_GE -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (-arg1+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 4
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ 1+arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P0 > 0 /\ arg1P7 > 0), cost: 6

Applied simplification
Original rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ 1+arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P0 > 0 /\ arg1P7 > 0), cost: 6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6

Applied partial deletion
Original rule:
__init -> f626_0_main_GE : arg2'=arg2P18, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg2P18, (arg1P10 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18
New rule:
__init -> [12] : (arg1P10 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18

Applied partial deletion
Original rule:
__init -> f626_0_main_GE : arg2'=arg2P18, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg2P18, (arg1P11 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18
New rule:
__init -> [12] : (arg1P11 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18

Applied deletion
Removed the following rules: 37 42 44 46 58 61 66 69 74 86 87

Eliminated locations on tree-shaped paths
Start location: __init
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  88: __init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P1 > 0 /\ arg3P1 > 0), cost: 4
  89: __init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0), cost: 4
  90: __init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg2P18, arg3'=arg3P14, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P4 > 0), cost: 4
  91: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
  92: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6
  93: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  94: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0), cost: 6
  95: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  96: __init -> [12] : (arg1P10 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18
  97: __init -> [12] : (arg1P11 > 0 /\ -1+arg2P18 >= 0), cost: 2+4*arg2P18


Applied pruning (of leafs and parallel rules):
Start location: __init
  35: f116_0_even_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg1, arg3'=arg3P16, -1+arg1 > 0, cost: 1
  36: f168_0_odd_NE -> f116_0_even_NE : arg2'=arg2P17, arg4'=arg4P17, arg1'=-1+arg1, arg3'=arg3P17, -1+arg1 > 0, cost: 1
  88: __init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg3P1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P1 > 0 /\ arg3P1 > 0), cost: 4
  89: __init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=1, arg3'=arg3P14, (arg2P18 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0), cost: 4
  90: __init -> f116_0_even_NE : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg2P18, arg3'=arg3P14, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P4 > 0), cost: 4
  91: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
  92: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6
  93: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  94: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0), cost: 6
  95: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6


Eliminated location f116_0_even_NE
Start location: __init
  98: f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2+arg1, arg3'=arg3P16, -2+arg1 > 0, cost: 2
  91: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
  92: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6
  93: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  94: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0), cost: 6
  95: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  99: __init -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg3P1, arg3'=arg3P16, (arg2P18 > 0 /\ arg1P1-arg1P0 <= 0 /\ -1+arg3P1 > 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P1 > 0), cost: 5
 100: __init -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-1+arg2P18, arg3'=arg3P16, (-arg1P0+arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -1+arg2P18 > 0 /\ arg1P4 > 0), cost: 5


Applied pruning (of leafs and parallel rules):
Start location: __init
  98: f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2+arg1, arg3'=arg3P16, -2+arg1 > 0, cost: 2
  91: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
  92: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6
  93: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  94: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0), cost: 6
  95: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6


Applied acceleration
Original rule:
f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2+arg1, arg3'=arg3P16, -2+arg1 > 0, cost: 2
New rule:
f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg1, arg3'=arg3P16, (-2*n6+arg1 > 0 /\ -1+n6 >= 0), cost: 2*n6
Sub-proof via acceration calculus written to file:///tmp/tmpnam_bHldgj.txt

Applied deletion
Removed the following rules: 98

Accelerated simple loops
Start location: __init
 101: f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg1, arg3'=arg3P16, (-2*n6+arg1 > 0 /\ -1+n6 >= 0), cost: 2*n6
  91: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
  92: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6
  93: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  94: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0), cost: 6
  95: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6


Applied chaining
First rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
Second rule:
f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg1, arg3'=arg3P16, (-2*n6+arg1 > 0 /\ -1+n6 >= 0), cost: 2*n6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg3P7, arg3'=arg3P16, (-1+n6 >= 0 /\ -2*n6+arg3P7 > 0), cost: 6+2*n6

Applied chaining
First rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
Second rule:
f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg1, arg3'=arg3P16, (-2*n6+arg1 > 0 /\ -1+n6 >= 0), cost: 2*n6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg3P7, arg3'=arg3P16, (-1+n6 >= 0 /\ -2*n6+arg3P7 > 0), cost: 6+2*n6

Applied chaining
First rule:
__init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
Second rule:
f168_0_odd_NE -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg1, arg3'=arg3P16, (-2*n6+arg1 > 0 /\ -1+n6 >= 0), cost: 2*n6
New rule:
__init -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg3P7, arg3'=arg3P16, (-1+n6 >= 0 /\ -2*n6+arg3P7 > 0), cost: 6+2*n6

Applied deletion
Removed the following rules: 101

Chained accelerated rules with incoming rules
Start location: __init
  91: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg3P7 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0 /\ arg3P1 > 0), cost: 6
  92: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P1+arg1P5 <= 0 /\ arg1P8 > 0 /\ arg1P1-arg1P0 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0 /\ arg3P1 > 0), cost: 6
  93: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ -arg1P3+arg1P5 <= 0 /\ arg3P7 > 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
  94: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2P18 > 0 /\ arg1P3-arg1P0 <= 0 /\ arg1P8 > 0 /\ -arg1P3+arg1P5 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ arg1P8-arg1P5 <= 0), cost: 6
  95: __init -> f168_0_odd_NE : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg3P7, arg3'=arg3P15, (arg2P18 > 0 /\ -arg1P0+arg1P4 <= 0 /\ arg3P7 > 0 /\ arg1P5-arg1P4 <= 0 /\ -arg1P18+arg1P0 <= 0 /\ -arg1P5+arg1P7 <= 0 /\ arg1P7 > 0), cost: 6
 102: __init -> f168_0_odd_NE : arg2'=arg2P16, arg4'=arg4P16, arg1'=-2*n6+arg3P7, arg3'=arg3P16, (-1+n6 >= 0 /\ -2*n6+arg3P7 > 0), cost: 6+2*n6


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

