NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_k -> Â¿functionCall(__VERIFIER_nondet_int), main_i -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, (main_k >= 0)>
<l1, l3, not((main_k >= 0))>
<l2, l5, true>
<l3, l4, true, seq{main_i -> ~(1)}>
<l4, l5, true>
<l5, l6, true>
<l6, l9, not((main_i >= 0))>
<l6, l7, (main_i >= 0)>
<l7, l8, true, seq{main_i -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l8, l6, true>
<l9, l10, true, seq{main_i -> 2, main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l11, true, seq{main__func_return_ -> 0}>
<l11, l12, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l12, l13, true, seq{main_k -> varCall_1}>
<l13, l14, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l14, l1, true, seq{main_i -> varCall_2}>
<l1, l2, (main_k >= 0)>
<l1, l3, not((main_k >= 0))>
<l2, l5, true>
<l3, l4, true, seq{main_i -> ~(1)}>
<l4, l5, true>
<l5, l6, true>
<l6, l7, (main_i >= 0)>
<l6, l9, not((main_i >= 0))>
<l7, l15, true, seq{varCall_3 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l15, l8, true, seq{main_i -> varCall_3}>
<l8, l6, true>
<l9, l10, true, seq{main_i -> 2, main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 12, col: 1> | <line: 16, col: 6> <line: 17, col: 6> <line: 24, col: 7>
main | function | [integer, ()] | <line: 14, col: 1>
k | local variable | integer | <line: 15, col: 5> | <line: 16, col: 2> <line: 18, col: 6>
i | local variable | integer | <line: 15, col: 5> | <line: 17, col: 2> <line: 21, col: 3> <line: 23, col: 9> <line: 24, col: 3> <line: 26, col: 2>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l6, (undef4 >= 0), par{main_i -> undef5}>
<l0, l6, not((undef4 >= 0)), par{main_i -> ~(1)}>
<l6, l6, (main_i >= 0), par{main_i -> undef6}>
<l6, l10, not((main_i >= 0)), par{main_i -> 2}>

Fresh variables:
undef4, undef5, undef6, 

Undef variables:
undef4, undef5, undef6, 

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l6, l6, 0 <= main_i, {main_i -> undef6, rest remain the same}>
Variables:
main_i

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l6, 0 <= undef4, {main_i -> undef5, rest remain the same}>
<l0, l6, 1 + undef4 <= 0, {main_i -> -1, rest remain the same}>

Graph 2
<l6, l10, 1 + main_i <= 0, {main_i -> 2, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 6 , 1 )
( 10 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001316

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000684s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001259s
[8215 : 8217]
[8215 : 8218]
Successful child: 8217
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 0 <= main_i, {main_i -> undef6, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l6, l6, 0 <= main_i, {main_i -> undef6, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:1 + main_i <= 0 - Process 1
* Exit transition: <l0, l6, 0 <= undef4, {main_i -> undef5, rest remain the same}>
* Postcondition  : 1 + main_i <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000232s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000281s
INVARIANTS: 
6: 
Quasi-INVARIANTS to narrow Graph: 
6: 1 + main_i <= 0 , 
Narrowing transition: 
<l6, l6, 0 <= main_i, {main_i -> undef6, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l6, l6, 0 <= main_i, {main_i -> undef6, rest remain the same}>
Variables:
main_i
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000555s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001072s
[8215 : 8222]
[8215 : 8223]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007275s
Time used: 0.006921

[8215 : 8228]
[8215 : 8232]
Successful child: 8228

[32mProgram does NOT terminate[0m
