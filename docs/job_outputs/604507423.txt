unknown

Initial ITS

Start location: l4
Program variables: result_4^0 x_5^0 y_6^0 z_7^0
   0: l0 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, z_7^0'=z_7^post1, (1-z_7^0+z_7^post1 == 0 /\ -1+x_5^post1-x_5^0 == 0 /\ -1+y_6^post1-y_6^0 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
   1: l1 -> l0 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, z_7^0'=z_7^post2, (-y_6^post2+y_6^0 == 0 /\ -x_5^post2+x_5^0 == 0 /\ z_7^0-z_7^post2 == 0 /\ result_4^0-result_4^post2 == 0), cost: 1
   2: l2 -> l3 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, z_7^0'=z_7^post3, (0 == 0 /\ y_6^0-y_6^post3 == 0 /\ z_7^0-z_7^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
   3: l2 -> l3 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, z_7^0'=z_7^post4, (0 == 0 /\ -x_5^post4+x_5^0 == 0 /\ -z_7^post4+z_7^0 == 0 /\ z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ y_6^0-y_6^post4 == 0), cost: 1
   4: l2 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, z_7^0'=z_7^post5, (0 == 0 /\ 1-z_7^0+x_5^0 <= 0 /\ z_7^0-z_7^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
   5: l2 -> l0 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, z_7^0'=z_7^post6, (-x_5^post6+x_5^0 == 0 /\ -y_6^post6+y_6^0 == 0 /\ result_4^0-result_4^post6 == 0 /\ z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ z_7^0-z_7^post6 == 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
   6: l4 -> l2 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, z_7^0'=z_7^post7, (z_7^0-z_7^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: result_4^0 x_5^0 y_6^0 z_7^0
   7: l0 -> l0 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, z_7^0'=z_7^post2, (1-z_7^0+z_7^post1 == 0 /\ result_4^post1-result_4^post2 == 0 /\ -1+x_5^post1-x_5^0 == 0 /\ z_7^post1-z_7^post2 == 0 /\ -1+y_6^post1-y_6^0 == 0 /\ -x_5^post2+x_5^post1 == 0 /\ -result_4^post1+result_4^0 == 0 /\ y_6^post1-y_6^post2 == 0), cost: 1
   2: l2 -> l3 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, z_7^0'=z_7^post3, (0 == 0 /\ y_6^0-y_6^post3 == 0 /\ z_7^0-z_7^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
   3: l2 -> l3 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, z_7^0'=z_7^post4, (0 == 0 /\ -x_5^post4+x_5^0 == 0 /\ -z_7^post4+z_7^0 == 0 /\ z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ y_6^0-y_6^post4 == 0), cost: 1
   4: l2 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, z_7^0'=z_7^post5, (0 == 0 /\ 1-z_7^0+x_5^0 <= 0 /\ z_7^0-z_7^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
   5: l2 -> l0 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, z_7^0'=z_7^post6, (-x_5^post6+x_5^0 == 0 /\ -y_6^post6+y_6^0 == 0 /\ result_4^0-result_4^post6 == 0 /\ z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ z_7^0-z_7^post6 == 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
   6: l4 -> l2 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, z_7^0'=z_7^post7, (z_7^0-z_7^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0), cost: 1

	Eliminating location l1 by chaining:

	Applied chaining

	First rule:
	l0 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, z_7^0'=z_7^post1, (1-z_7^0+z_7^post1 == 0 /\ -1+x_5^post1-x_5^0 == 0 /\ -1+y_6^post1-y_6^0 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
	Second rule:
	l1 -> l0 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, z_7^0'=z_7^post2, (-y_6^post2+y_6^0 == 0 /\ -x_5^post2+x_5^0 == 0 /\ z_7^0-z_7^post2 == 0 /\ result_4^0-result_4^post2 == 0), cost: 1
	New rule:
	l0 -> l0 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, z_7^0'=z_7^post2, (1-z_7^0+z_7^post1 == 0 /\ result_4^post1-result_4^post2 == 0 /\ -1+x_5^post1-x_5^0 == 0 /\ z_7^post1-z_7^post2 == 0 /\ -1+y_6^post1-y_6^0 == 0 /\ -x_5^post2+x_5^post1 == 0 /\ -result_4^post1+result_4^0 == 0 /\ y_6^post1-y_6^post2 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 1

Simplified Transitions

Start location: l4
Program variables: result_4^0 x_5^0 y_6^0 z_7^0
  13: l0 -> l0 : x_5^0'=1+x_5^0, y_6^0'=1+y_6^0, z_7^0'=-1+z_7^0, T, cost: 1
   8: l2 -> l3 : result_4^0'=result_4^post3, y_6^0-x_5^0 <= 0, cost: 1
   9: l2 -> l3 : result_4^0'=result_4^post4, (z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
  10: l2 -> l3 : result_4^0'=result_4^post5, (1-z_7^0+x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
  11: l2 -> l0 : (z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
  12: l4 -> l2 : T, cost: 1

	Propagated Equalities

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, z_7^0'=z_7^post3, (0 == 0 /\ y_6^0-y_6^post3 == 0 /\ z_7^0-z_7^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post3, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
		propagated equality y_6^post3 = y_6^0
		
		propagated equality z_7^post3 = z_7^0
		
		propagated equality x_5^post3 = x_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post3, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post3, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, y_6^0-x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post3, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, y_6^0-x_5^0 <= 0, cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post3, y_6^0-x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, z_7^0'=z_7^post4, (0 == 0 /\ -x_5^post4+x_5^0 == 0 /\ -z_7^post4+z_7^0 == 0 /\ z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ y_6^0-y_6^post4 == 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post4 = x_5^0
		
		propagated equality z_7^post4 = z_7^0
		
		propagated equality y_6^post4 = y_6^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post4, (z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, z_7^0'=z_7^post5, (0 == 0 /\ 1-z_7^0+x_5^0 <= 0 /\ z_7^0-z_7^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ 1-z_7^0+x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	
		propagated equality z_7^post5 = z_7^0
		
		propagated equality y_6^post5 = y_6^0
		
		propagated equality x_5^post5 = x_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ 1-z_7^0+x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (1-z_7^0+x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (1-z_7^0+x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : result_4^0'=result_4^post5, (1-z_7^0+x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, z_7^0'=z_7^post6, (-x_5^post6+x_5^0 == 0 /\ -y_6^post6+y_6^0 == 0 /\ result_4^0-result_4^post6 == 0 /\ z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ z_7^0-z_7^post6 == 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	New rule:
	l2 -> l0 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	
		propagated equality x_5^post6 = x_5^0
		
		propagated equality y_6^post6 = y_6^0
		
		propagated equality result_4^post6 = result_4^0
		
		propagated equality z_7^post6 = z_7^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (0 == 0 /\ z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	New rule:
	l2 -> l0 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, (z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	New rule:
	l2 -> l0 : (z_7^0-x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l2 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, z_7^0'=z_7^post7, (z_7^0-z_7^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0), cost: 1
	New rule:
	l4 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, 0 == 0, cost: 1
	
		propagated equality z_7^post7 = z_7^0
		
		propagated equality x_5^post7 = x_5^0
		
		propagated equality result_4^post7 = result_4^0
		
		propagated equality y_6^post7 = y_6^0
		
	Simplified Guard

	Original rule:
	l4 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, 0 == 0, cost: 1
	New rule:
	l4 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, z_7^0'=z_7^0, T, cost: 1
	New rule:
	l4 -> l2 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, z_7^0'=z_7^post2, (1-z_7^0+z_7^post1 == 0 /\ result_4^post1-result_4^post2 == 0 /\ -1+x_5^post1-x_5^0 == 0 /\ z_7^post1-z_7^post2 == 0 /\ -1+y_6^post1-y_6^0 == 0 /\ -x_5^post2+x_5^post1 == 0 /\ -result_4^post1+result_4^0 == 0 /\ y_6^post1-y_6^post2 == 0), cost: 1
	New rule:
	l0 -> l0 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, z_7^0'=z_7^post1, (0 == 0 /\ 1-z_7^0+z_7^post1 == 0 /\ -1+x_5^post1-x_5^0 == 0 /\ -1+y_6^post1-y_6^0 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
	
		propagated equality result_4^post2 = result_4^post1
		
		propagated equality z_7^post2 = z_7^post1
		
		propagated equality x_5^post2 = x_5^post1
		
		propagated equality y_6^post2 = y_6^post1
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, z_7^0'=z_7^post1, (0 == 0 /\ 1-z_7^0+z_7^post1 == 0 /\ -1+x_5^post1-x_5^0 == 0 /\ -1+y_6^post1-y_6^0 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
	New rule:
	l0 -> l0 : result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=1+y_6^0, z_7^0'=-1+z_7^0, 0 == 0, cost: 1
	
		propagated equality z_7^post1 = -1+z_7^0
		
		propagated equality x_5^post1 = 1+x_5^0
		
		propagated equality y_6^post1 = 1+y_6^0
		
		propagated equality result_4^post1 = result_4^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=1+y_6^0, z_7^0'=-1+z_7^0, 0 == 0, cost: 1
	New rule:
	l0 -> l0 : result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=1+y_6^0, z_7^0'=-1+z_7^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=1+y_6^0, z_7^0'=-1+z_7^0, T, cost: 1
	New rule:
	l0 -> l0 : x_5^0'=1+x_5^0, y_6^0'=1+y_6^0, z_7^0'=-1+z_7^0, T, cost: 1

Step with 12

	Trace

	12[T]
	
	Blocked

	[{}, {}]

Step with 8

	Trace

	12[T], 8[(y_6^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {8[T]}]

Step with 9

	Trace

	12[T], 9[(z_7^0-y_6^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0)]
	
	Blocked

	[{}, {8[T]}, {}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {8[T], 9[T]}]

Step with 10

	Trace

	12[T], 10[(1-z_7^0+x_5^0 <= 0 /\ 1-y_6^0+x_5^0 <= 0 /\ 1-z_7^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {8[T], 9[T]}, {}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {8[T], 9[T], 10[T]}]

Backtrack

	Trace

	Blocked

	[{12[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
