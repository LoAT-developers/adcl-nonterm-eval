NO

Initial ITS
Start location: l4
   0: l0 -> l1 : p^0'=p^post0, p^0-p^post0 == 0, cost: 1
   1: l1 -> l0 : p^0'=p^post1, -p^post1+p^0 == 0, cost: 1
   2: l2 -> l0 : p^0'=p^post2, -1+p^post2 == 0, cost: 1
   3: l2 -> l0 : p^0'=p^post3, p^post3 == 0, cost: 1
   4: l3 -> l2 : p^0'=p^post4, (-1+p^post4 == 0 /\ p^10 == 0), cost: 1
   5: l4 -> l3 : p^0'=p^post5, -p^post5+p^0 == 0, cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : p^0'=p^post0, p^0-p^post0 == 0, cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : p^0'=p^post1, -p^post1+p^0 == 0, cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : p^0'=p^post2, -1+p^post2 == 0, cost: 1
New rule:
l2 -> l0 : p^0'=1, TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : p^0'=p^post3, p^post3 == 0, cost: 1
New rule:
l2 -> l0 : p^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : p^0'=p^post4, (-1+p^post4 == 0 /\ p^10 == 0), cost: 1
New rule:
l3 -> l2 : p^0'=1, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : p^0'=p^post5, -p^post5+p^0 == 0, cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l4
   6: l0 -> l1 : TRUE, cost: 1
   7: l1 -> l0 : TRUE, cost: 1
   8: l2 -> l0 : p^0'=1, TRUE, cost: 1
   9: l2 -> l0 : p^0'=0, TRUE, cost: 1
  10: l3 -> l2 : p^0'=1, TRUE, cost: 1
  11: l4 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l2 : p^0'=1, TRUE, cost: 1
New rule:
l4 -> l2 : p^0'=1, TRUE, cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : TRUE, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminated locations on linear paths
Start location: l4
  13: l0 -> l0 : TRUE, cost: 2
   8: l2 -> l0 : p^0'=1, TRUE, cost: 1
   9: l2 -> l0 : p^0'=0, TRUE, cost: 1
  12: l4 -> l2 : p^0'=1, TRUE, cost: 2


Applied nonterm
Original rule:
l0 -> l0 : TRUE, cost: 2
New rule:
l0 -> [5] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cgdlpB.txt

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: l4
  14: l0 -> [5] : n >= 0, cost: NONTERM
   8: l2 -> l0 : p^0'=1, TRUE, cost: 1
   9: l2 -> l0 : p^0'=0, TRUE, cost: 1
  12: l4 -> l2 : p^0'=1, TRUE, cost: 2


Applied chaining
First rule:
l2 -> l0 : p^0'=1, TRUE, cost: 1
Second rule:
l0 -> [5] : n >= 0, cost: NONTERM
New rule:
l2 -> [5] : TRUE, cost: NONTERM

Applied chaining
First rule:
l2 -> l0 : p^0'=0, TRUE, cost: 1
Second rule:
l0 -> [5] : n >= 0, cost: NONTERM
New rule:
l2 -> [5] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 14

Chained accelerated rules with incoming rules
Start location: l4
   8: l2 -> l0 : p^0'=1, TRUE, cost: 1
   9: l2 -> l0 : p^0'=0, TRUE, cost: 1
  15: l2 -> [5] : TRUE, cost: NONTERM
  12: l4 -> l2 : p^0'=1, TRUE, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l4
  15: l2 -> [5] : TRUE, cost: NONTERM
  12: l4 -> l2 : p^0'=1, TRUE, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l4 -> l2 : p^0'=1, TRUE, cost: 2
Second rule:
l2 -> [5] : TRUE, cost: NONTERM
New rule:
l4 -> [5] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 12 15

Eliminated locations on linear paths
Start location: l4
  16: l4 -> [5] : TRUE, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 16 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
