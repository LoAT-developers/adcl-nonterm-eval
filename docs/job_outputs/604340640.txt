NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l7, not((main_x <= 10))>
<l2, l3, (main_x <= 10)>
<l3, l4, (main_x > 6)>
<l3, l6, not((main_x > 6))>
<l4, l5, true, seq{main_x -> (main_x + 2)}>
<l5, l6, true>
<l6, l2, true>
<l7, l8, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l9, true, seq{main__func_return_ -> 0}>
<l9, l10, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l10, l1, true, seq{main_x -> varCall_1}>
<l1, l2, true>
<l2, l3, (main_x <= 10)>
<l2, l7, not((main_x <= 10))>
<l3, l4, (main_x > 6)>
<l3, l6, not((main_x > 6))>
<l4, l5, true, seq{main_x -> (main_x + 2)}>
<l5, l6, true>
<l6, l2, true>
<l7, l8, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
8, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [3 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 12, col: 1> | <line: 16, col: 9>
main | function | [integer, ()] | <line: 14, col: 1>
x | local variable | integer | <line: 15, col: 2> | <line: 16, col: 5> <line: 17, col: 12> <line: 18, col: 13> <line: 19, col: 13> <line: 19, col: 17>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef2)>
<l2, l2, (main_x <= 10) /\ (main_x > 6), par{main_x -> (main_x + 2)}>
<l2, l2, (main_x <= 10) /\ not((main_x > 6))>
<l2, l8, not((main_x <= 10))>

Fresh variables:
undef2, 

Undef variables:
undef2, 

Abstraction variables:

Exit nodes:
8, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, main_x <= 10 /\ 7 <= main_x, {main_x -> 2 + main_x, rest remain the same}>
<l2, l2, main_x <= 6, {all remain the same}>
Variables:
main_x

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef2, {all remain the same}>

Graph 2
<l2, l8, 11 <= main_x, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 8 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001889

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000477s
[33mRanking function: [36m5 + (~(1) / 2)*main_x[0m
New Graphs: 
Transitions:
<l2, l2, main_x <= 6, {all remain the same}>
Variables:
main_x
> No variable changes in termination graph.
Checking conditional unfeasibility...
Calling Safety with literal 7 <= main_x and entry <l2, l2, true, {all remain the same}>

LOG: CALL check - Post:7 <= main_x - Process 1
* Exit transition: <l2, l2, true, {all remain the same}>
* Postcondition  : 7 <= main_x
Quasi-invariants: 
Location 2: 7 <= main_x ; 

LOG: CALL check - Post:7 <= main_x - Process 2
* Exit transition: <l0, l2, main_x = undef2, {all remain the same}>
* Postcondition  : 7 <= main_x

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000213s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000252s

LOG: NarrowEntry size 1
It's unfeasible. Removing transition: 
<l2, l2, main_x <= 10 /\ 7 <= main_x, {main_x -> 2 + main_x, rest remain the same}>
Narrowing transition: 
<l2, l2, main_x <= 6, {all remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l2, main_x <= 6 /\ main_x = undef2, {all remain the same}>
END ENTRIES:
GRAPH:
<l2, l2, main_x <= 6, {all remain the same}>
END GRAPH:
EXIT: <l2, l2, true, {all remain the same}>
POST: 7 <= main_x


LOG: Try proving POST
[19937 : 19939]
[19937 : 19940]
[19937 : 19941]

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 4.110830s

[19937 : 19942]
[19937 : 19946]
Successful child: 19942

[32mProgram does NOT terminate[0m
