WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0), cost: 1
   1: f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=arg1P1, (-5+arg1 > 0 /\ -1+arg1-arg1P1 == 0), cost: 1
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=arg1P1, (-5+arg1 > 0 /\ -1+arg1-arg1P1 == 0), cost: 1
New rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=-1+arg1, -5+arg1 > 0, cost: 1

Simplified rules
Start location: __init
   3: f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=-1+arg1, -5+arg1 > 0, cost: 1
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied acceleration
Original rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=-1+arg1, -5+arg1 > 0, cost: 1
New rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=arg1-n, (-1+n >= 0 /\ -4+arg1-n > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hBdDDd.txt

Applied instantiation
Original rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=arg1-n, (-1+n >= 0 /\ -4+arg1-n > 0), cost: n
New rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=5, (1 > 0 /\ -6+arg1 >= 0), cost: -5+arg1

Applied simplification
Original rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=5, (1 > 0 /\ -6+arg1 >= 0), cost: -5+arg1
New rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=5, -6+arg1 >= 0, cost: -5+arg1

Applied deletion
Removed the following rules: 4

Accelerated simple loops
Start location: __init
   3: f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   6: f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=5, -6+arg1 >= 0, cost: -5+arg1
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f42_0_decrease_LE -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=5, -6+arg1 >= 0, cost: -5+arg1
New rule:
f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=5, (-6+arg2 >= 0 /\ arg1 > 0), cost: -4+arg2

Applied deletion
Removed the following rules: 6

Chained accelerated rules with incoming rules
Start location: __init
   3: f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load -> f42_0_decrease_LE : arg2'=arg2P1, arg1'=5, (-6+arg2 >= 0 /\ arg1 > 0), cost: -4+arg2
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

