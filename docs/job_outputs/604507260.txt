NO

Initial ITS

Start location: l9
Program variables: result_4^0 x_5^0
   0: l0 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (x_5^0-x_5^post1 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
   1: l1 -> l3 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (result_4^0-result_4^post2 == 0 /\ 1+x_5^post2-x_5^0 == 0), cost: 1
   6: l1 -> l6 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, (-result_4^post7+result_4^0 == 0 /\ 1-x_5^0+x_5^post7 == 0), cost: 1
  10: l1 -> l8 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ -13+x_5^1 <= 0), cost: 1
  12: l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ 1+x_5^post13 <= 0 /\ -13+x_5^1 <= 0), cost: 1
   2: l3 -> l4 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (-result_4^post3+result_4^0 == 0 /\ x_5^0-x_5^post3 == 0 /\ -12+x_5^0 <= 0), cost: 1
   3: l3 -> l4 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (-result_4^post4+result_4^0 == 0 /\ 14-x_5^0 <= 0 /\ x_5^0-x_5^post4 == 0), cost: 1
   4: l4 -> l2 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (result_4^0-result_4^post5 == 0 /\ -x_5^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
   5: l2 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (x_5^0-x_5^post6 == 0 /\ -result_4^post6+result_4^0 == 0), cost: 1
   7: l6 -> l7 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (x_5^0-x_5^post8 == 0 /\ -12+x_5^0 <= 0 /\ -result_4^post8+result_4^0 == 0), cost: 1
   8: l6 -> l7 : result_4^0'=result_4^post9, x_5^0'=x_5^post9, (14-x_5^0 <= 0 /\ -result_4^post9+result_4^0 == 0 /\ x_5^0-x_5^post9 == 0), cost: 1
   9: l7 -> l5 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (0 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post10+x_5^0 == 0), cost: 1
  11: l8 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (x_5^0-x_5^post12 == 0 /\ -result_4^post12+result_4^0 == 0), cost: 1
  13: l9 -> l0 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (-result_4^post14+result_4^0 == 0 /\ x_5^0-x_5^post14 == 0), cost: 1

Chained Linear Paths

Start location: l9
Program variables: result_4^0 x_5^0
   1: l1 -> l3 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (result_4^0-result_4^post2 == 0 /\ 1+x_5^post2-x_5^0 == 0), cost: 1
   6: l1 -> l6 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, (-result_4^post7+result_4^0 == 0 /\ 1-x_5^0+x_5^post7 == 0), cost: 1
  12: l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ 1+x_5^post13 <= 0 /\ -13+x_5^1 <= 0), cost: 1
  15: l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ -result_4^post12+result_4^post11 == 0 /\ 13-x_5^1 <= 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -13+x_5^1 <= 0), cost: 1
   2: l3 -> l4 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (-result_4^post3+result_4^0 == 0 /\ x_5^0-x_5^post3 == 0 /\ -12+x_5^0 <= 0), cost: 1
   3: l3 -> l4 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (-result_4^post4+result_4^0 == 0 /\ 14-x_5^0 <= 0 /\ x_5^0-x_5^post4 == 0), cost: 1
  16: l4 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (-result_4^post6+result_4^post5 == 0 /\ result_4^0-result_4^post5 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -x_5^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
   7: l6 -> l7 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (x_5^0-x_5^post8 == 0 /\ -12+x_5^0 <= 0 /\ -result_4^post8+result_4^0 == 0), cost: 1
   8: l6 -> l7 : result_4^0'=result_4^post9, x_5^0'=x_5^post9, (14-x_5^0 <= 0 /\ -result_4^post9+result_4^0 == 0 /\ x_5^0-x_5^post9 == 0), cost: 1
   9: l7 -> l5 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (0 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post10+x_5^0 == 0), cost: 1
  14: l9 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (-result_4^post14+result_4^0 == 0 /\ -x_5^post1+x_5^post14 == 0 /\ -result_4^post1+result_4^post14 == 0 /\ x_5^0-x_5^post14 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l9 -> l0 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (-result_4^post14+result_4^0 == 0 /\ x_5^0-x_5^post14 == 0), cost: 1
	Second rule:
	l0 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (x_5^0-x_5^post1 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
	New rule:
	l9 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (-result_4^post14+result_4^0 == 0 /\ -x_5^post1+x_5^post14 == 0 /\ -result_4^post1+result_4^post14 == 0 /\ x_5^0-x_5^post14 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 13
	
	Eliminating location l8 by chaining:

	Applied chaining

	First rule:
	l1 -> l8 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ -13+x_5^1 <= 0), cost: 1
	Second rule:
	l8 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (x_5^0-x_5^post12 == 0 /\ -result_4^post12+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ -result_4^post12+result_4^post11 == 0 /\ 13-x_5^1 <= 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -13+x_5^1 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 10 11
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l4 -> l2 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (result_4^0-result_4^post5 == 0 /\ -x_5^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
	Second rule:
	l2 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (x_5^0-x_5^post6 == 0 /\ -result_4^post6+result_4^0 == 0), cost: 1
	New rule:
	l4 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (-result_4^post6+result_4^post5 == 0 /\ result_4^0-result_4^post5 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -x_5^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5

Simplified Transitions

Start location: l9
Program variables: result_4^0 x_5^0
  17: l1 -> l3 : x_5^0'=-1+x_5^0, T, cost: 1
  20: l1 -> l6 : x_5^0'=-1+x_5^0, T, cost: 1
  24: l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  26: l1 -> l1 : x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  18: l3 -> l4 : -12+x_5^0 <= 0, cost: 1
  19: l3 -> l4 : 14-x_5^0 <= 0, cost: 1
  27: l4 -> l1 : -x_5^0 <= 0, cost: 1
  21: l6 -> l7 : -12+x_5^0 <= 0, cost: 1
  22: l6 -> l7 : 14-x_5^0 <= 0, cost: 1
  23: l7 -> l5 : result_4^0'=result_4^post10, 1+x_5^0 <= 0, cost: 1
  25: l9 -> l1 : T, cost: 1

	Propagated Equalities

	Original rule:
	l1 -> l3 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (result_4^0-result_4^post2 == 0 /\ 1+x_5^post2-x_5^0 == 0), cost: 1
	New rule:
	l1 -> l3 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, 0 == 0, cost: 1
	
		propagated equality result_4^post2 = result_4^0
		
		propagated equality x_5^post2 = -1+x_5^0
		
	Simplified Guard

	Original rule:
	l1 -> l3 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, 0 == 0, cost: 1
	New rule:
	l1 -> l3 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l3 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, T, cost: 1
	New rule:
	l1 -> l3 : x_5^0'=-1+x_5^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l4 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (-result_4^post3+result_4^0 == 0 /\ x_5^0-x_5^post3 == 0 /\ -12+x_5^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ -12+x_5^0 <= 0), cost: 1
	
		propagated equality result_4^post3 = result_4^0
		
		propagated equality x_5^post3 = x_5^0
		
	Simplified Guard

	Original rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ -12+x_5^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, -12+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, -12+x_5^0 <= 0, cost: 1
	New rule:
	l3 -> l4 : -12+x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l4 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (-result_4^post4+result_4^0 == 0 /\ 14-x_5^0 <= 0 /\ x_5^0-x_5^post4 == 0), cost: 1
	New rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ 14-x_5^0 <= 0), cost: 1
	
		propagated equality result_4^post4 = result_4^0
		
		propagated equality x_5^post4 = x_5^0
		
	Simplified Guard

	Original rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ 14-x_5^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, 14-x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l4 : result_4^0'=result_4^0, x_5^0'=x_5^0, 14-x_5^0 <= 0, cost: 1
	New rule:
	l3 -> l4 : 14-x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l6 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, (-result_4^post7+result_4^0 == 0 /\ 1-x_5^0+x_5^post7 == 0), cost: 1
	New rule:
	l1 -> l6 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, 0 == 0, cost: 1
	
		propagated equality result_4^post7 = result_4^0
		
		propagated equality x_5^post7 = -1+x_5^0
		
	Simplified Guard

	Original rule:
	l1 -> l6 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, 0 == 0, cost: 1
	New rule:
	l1 -> l6 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l6 : result_4^0'=result_4^0, x_5^0'=-1+x_5^0, T, cost: 1
	New rule:
	l1 -> l6 : x_5^0'=-1+x_5^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l7 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (x_5^0-x_5^post8 == 0 /\ -12+x_5^0 <= 0 /\ -result_4^post8+result_4^0 == 0), cost: 1
	New rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ -12+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post8 = x_5^0
		
		propagated equality result_4^post8 = result_4^0
		
	Simplified Guard

	Original rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ -12+x_5^0 <= 0), cost: 1
	New rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, -12+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, -12+x_5^0 <= 0, cost: 1
	New rule:
	l6 -> l7 : -12+x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l7 : result_4^0'=result_4^post9, x_5^0'=x_5^post9, (14-x_5^0 <= 0 /\ -result_4^post9+result_4^0 == 0 /\ x_5^0-x_5^post9 == 0), cost: 1
	New rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ 14-x_5^0 <= 0), cost: 1
	
		propagated equality result_4^post9 = result_4^0
		
		propagated equality x_5^post9 = x_5^0
		
	Simplified Guard

	Original rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ 14-x_5^0 <= 0), cost: 1
	New rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, 14-x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l7 : result_4^0'=result_4^0, x_5^0'=x_5^0, 14-x_5^0 <= 0, cost: 1
	New rule:
	l6 -> l7 : 14-x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l5 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (0 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post10+x_5^0 == 0), cost: 1
	New rule:
	l7 -> l5 : result_4^0'=result_4^post10, x_5^0'=x_5^0, (0 == 0 /\ 1+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post10 = x_5^0
		
	Simplified Guard

	Original rule:
	l7 -> l5 : result_4^0'=result_4^post10, x_5^0'=x_5^0, (0 == 0 /\ 1+x_5^0 <= 0), cost: 1
	New rule:
	l7 -> l5 : result_4^0'=result_4^post10, x_5^0'=x_5^0, 1+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l5 : result_4^0'=result_4^post10, x_5^0'=x_5^0, 1+x_5^0 <= 0, cost: 1
	New rule:
	l7 -> l5 : result_4^0'=result_4^post10, 1+x_5^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ 1+x_5^post13 <= 0 /\ -13+x_5^1 <= 0), cost: 1
	New rule:
	l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ 13-x_5^1 == 0 /\ 1+x_5^post13 <= 0 /\ -13+x_5^1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ 13-x_5^1 == 0 /\ 1+x_5^post13 <= 0 /\ -13+x_5^1 <= 0), cost: 1
	New rule:
	l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ 1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^1 = -1+x_5^0
		
	Simplified Guard

	Original rule:
	l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ 1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l9 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (-result_4^post14+result_4^0 == 0 /\ -x_5^post1+x_5^post14 == 0 /\ -result_4^post1+result_4^post14 == 0 /\ x_5^0-x_5^post14 == 0), cost: 1
	New rule:
	l9 -> l1 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (0 == 0 /\ -result_4^post14+result_4^0 == 0 /\ x_5^0-x_5^post14 == 0), cost: 1
	
		propagated equality x_5^post1 = x_5^post14
		
		propagated equality result_4^post1 = result_4^post14
		
	Propagated Equalities

	Original rule:
	l9 -> l1 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (0 == 0 /\ -result_4^post14+result_4^0 == 0 /\ x_5^0-x_5^post14 == 0), cost: 1
	New rule:
	l9 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality result_4^post14 = result_4^0
		
		propagated equality x_5^post14 = x_5^0
		
	Simplified Guard

	Original rule:
	l9 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l9 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l9 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l9 -> l1 : T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ -result_4^post12+result_4^post11 == 0 /\ 13-x_5^1 <= 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -13+x_5^1 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ -result_4^post12+result_4^post11 == 0 /\ 13-x_5^1 <= 0 /\ 13-x_5^1 == 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -13+x_5^1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ -result_4^post12+result_4^post11 == 0 /\ 13-x_5^1 <= 0 /\ 13-x_5^1 == 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -13+x_5^1 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ 13-x_5^1 == 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ -13+x_5^1 <= 0), cost: 1
	
		propagated equality result_4^post12 = result_4^post11
		
		propagated equality x_5^post12 = x_5^post11
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1-x_5^0+x_5^1 == 0 /\ 13-x_5^1 <= 0 /\ 13-x_5^1 == 0 /\ -x_5^post11 <= 0 /\ result_4^0-result_4^post11 == 0 /\ -13+x_5^1 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (0 == 0 /\ -x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^1 = -1+x_5^0
		
		propagated equality result_4^post11 = result_4^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (0 == 0 /\ -x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (-result_4^post6+result_4^post5 == 0 /\ result_4^0-result_4^post5 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -x_5^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
	New rule:
	l4 -> l1 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (0 == 0 /\ result_4^0-result_4^post5 == 0 /\ -x_5^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
	
		propagated equality result_4^post6 = result_4^post5
		
		propagated equality x_5^post6 = x_5^post5
		
	Propagated Equalities

	Original rule:
	l4 -> l1 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (0 == 0 /\ result_4^0-result_4^post5 == 0 /\ -x_5^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
	New rule:
	l4 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ -x_5^0 <= 0), cost: 1
	
		propagated equality result_4^post5 = result_4^0
		
		propagated equality x_5^post5 = x_5^0
		
	Simplified Guard

	Original rule:
	l4 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l4 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, -x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, -x_5^0 <= 0, cost: 1
	New rule:
	l4 -> l1 : -x_5^0 <= 0, cost: 1

Step with 25

	Trace

	25[T]
	
	Blocked

	[{}, {}]

Step with 20

	Trace

	25[T], 20[T]
	
	Blocked

	[{}, {}, {}]

Step with 21

	Trace

	25[T], 20[T], 21[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 23

	Trace

	25[T], 20[T], 21[(-12+x_5^0 <= 0)], 23[(1+x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Backtrack

	Trace

	25[T], 20[T], 21[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {23[T]}]

Backtrack

	Trace

	25[T], 20[T]
	
	Blocked

	[{}, {}, {21[T]}]

Step with 22

	Trace

	25[T], 20[T], 22[(14-x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {21[T]}, {}]

Backtrack

	Trace

	25[T], 20[T]
	
	Blocked

	[{}, {}, {21[T], 22[T]}]

Backtrack

	Trace

	25[T]
	
	Blocked

	[{}, {20[T]}]

Step with 24

	Trace

	25[T], 24[(1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T]}, {}]

Backtrack

	Trace

	25[T]
	
	Blocked

	[{}, {20[T], 24[T]}]

Step with 17

	Trace

	25[T], 17[T]
	
	Blocked

	[{}, {20[T], 24[T]}, {}]

Step with 18

	Trace

	25[T], 17[T], 18[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {}, {}]

Step with 27

	Trace

	25[T], 17[T], 18[(-12+x_5^0 <= 0)], 27[(-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {}, {}, {}]

Accelerate

Start location: l9
Program variables: result_4^0 x_5^0
  17: l1 -> l3 : x_5^0'=-1+x_5^0, T, cost: 1
  20: l1 -> l6 : x_5^0'=-1+x_5^0, T, cost: 1
  24: l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  26: l1 -> l1 : x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  28: l1 -> l1 : x_5^0'=-n+x_5^0, (-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0), cost: 1
  18: l3 -> l4 : -12+x_5^0 <= 0, cost: 1
  19: l3 -> l4 : 14-x_5^0 <= 0, cost: 1
  27: l4 -> l1 : -x_5^0 <= 0, cost: 1
  21: l6 -> l7 : -12+x_5^0 <= 0, cost: 1
  22: l6 -> l7 : 14-x_5^0 <= 0, cost: 1
  23: l7 -> l5 : result_4^0'=result_4^post10, 1+x_5^0 <= 0, cost: 1
  25: l9 -> l1 : T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : x_5^0'=-1+x_5^0, (-13+x_5^0 <= 0 /\ 1-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=-n+x_5^0, (-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0), cost: 1

		-1+x_5^0 >= 0 [0]: montonic decrease yields -n+x_5^0 >= 0
		
		-1+x_5^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+x_5^0 >= 0)
		
		13-x_5^0 >= 0 [0]: monotonic increase yields 13-x_5^0 >= 0
		
		Replacement map: {-1+x_5^0 >= 0 -> -n+x_5^0 >= 0, 13-x_5^0 >= 0 -> 13-x_5^0 >= 0}

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {28[T]}]

Step with 20

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 20[T]
	
	Blocked

	[{}, {20[T], 24[T]}, {28[T]}, {}]

Step with 21

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 20[T], 21[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {28[T]}, {22[T]}, {}]

Step with 23

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 20[T], 21[(-12+x_5^0 <= 0)], 23[(1+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {28[T]}, {22[T]}, {}, {}]

Backtrack

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 20[T], 21[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {28[T]}, {22[T]}, {23[T]}]

Backtrack

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 20[T]
	
	Blocked

	[{}, {20[T], 24[T]}, {28[T]}, {21[T], 22[T]}]

Backtrack

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {20[T], 28[T]}]

Step with 17

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 17[T]
	
	Blocked

	[{}, {20[T], 24[T]}, {20[T], 24[T], 28[T]}, {}]

Step with 18

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 17[T], 18[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {20[T], 24[T], 28[T]}, {}, {}]

Step with 27

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 17[T], 18[(-12+x_5^0 <= 0)], 27[(-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {20[T], 24[T], 28[T]}, {}, {}, {}]

Covered

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 17[T], 18[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {20[T], 24[T], 28[T]}, {}, {27[T]}]

Backtrack

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)], 17[T]
	
	Blocked

	[{}, {20[T], 24[T]}, {20[T], 24[T], 28[T]}, {18[T]}]

Backtrack

	Trace

	25[T], 28[(-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T]}, {17[T], 20[T], 24[T], 28[T]}]

Backtrack

	Trace

	25[T]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}]

Step with 17

	Trace

	25[T], 17[T]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {}]

Step with 18

	Trace

	25[T], 17[T], 18[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {}, {}]

Step with 27

	Trace

	25[T], 17[T], 18[(-12+x_5^0 <= 0)], 27[(-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {}, {}, {}]

Covered

	Trace

	25[T], 17[T], 18[(-12+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {}, {27[T]}]

Backtrack

	Trace

	25[T], 17[T]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {18[T]}]

Step with 19

	Trace

	25[T], 17[T], 19[(14-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {18[T]}, {}]

Step with 27

	Trace

	25[T], 17[T], 19[(14-x_5^0 <= 0)], 27[(-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {18[T]}, {}, {}]

Accelerate

Start location: l9
Program variables: result_4^0 x_5^0
  17: l1 -> l3 : x_5^0'=-1+x_5^0, T, cost: 1
  20: l1 -> l6 : x_5^0'=-1+x_5^0, T, cost: 1
  24: l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  26: l1 -> l1 : x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  28: l1 -> l1 : x_5^0'=-n+x_5^0, (-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0), cost: 1
  29: l1 -> l1 : x_5^0'=x_5^0-n2, (-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0), cost: 1
  18: l3 -> l4 : -12+x_5^0 <= 0, cost: 1
  19: l3 -> l4 : 14-x_5^0 <= 0, cost: 1
  27: l4 -> l1 : -x_5^0 <= 0, cost: 1
  21: l6 -> l7 : -12+x_5^0 <= 0, cost: 1
  22: l6 -> l7 : 14-x_5^0 <= 0, cost: 1
  23: l7 -> l5 : result_4^0'=result_4^post10, 1+x_5^0 <= 0, cost: 1
  25: l9 -> l1 : T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : x_5^0'=-1+x_5^0, (1-x_5^0 <= 0 /\ 15-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^0-n2, (-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0), cost: 1

		-15+x_5^0 >= 0 [0]: montonic decrease yields -14+x_5^0-n2 >= 0
		
		-15+x_5^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -15+x_5^0 >= 0)
		
		-1+x_5^0 >= 0 [0]: monotonic increase yields -1+x_5^0 >= 0, dependencies: -15+x_5^0 >= 0
		
		Replacement map: {-15+x_5^0 >= 0 -> -14+x_5^0-n2 >= 0, -1+x_5^0 >= 0 -> -1+x_5^0 >= 0}

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {29[T]}]

Step with 20

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 20[T]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {29[T]}, {}]

Step with 22

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 20[T], 22[(14-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {29[T]}, {21[T]}, {}]

Backtrack

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 20[T]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {29[T]}, {21[T], 22[T]}]

Backtrack

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 29[T]}]

Step with 24

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 24[(1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 29[T]}, {}]

Backtrack

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 24[T], 29[T]}]

Step with 17

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 17[T]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 24[T], 29[T]}, {}]

Step with 19

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 17[T], 19[(14-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 24[T], 29[T]}, {}, {}]

Step with 27

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 17[T], 19[(14-x_5^0 <= 0)], 27[(-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 24[T], 29[T]}, {}, {}, {}]

Covered

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 17[T], 19[(14-x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 24[T], 29[T]}, {}, {27[T]}]

Backtrack

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 17[T]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {20[T], 24[T], 29[T]}, {19[T]}]

Backtrack

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {17[T], 20[T], 24[T], 29[T]}]

Step with 26

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 26[(-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {17[T], 20[T], 24[T], 29[T]}, {}]

Nonterm

Start location: l9
Program variables: result_4^0 x_5^0
  17: l1 -> l3 : x_5^0'=-1+x_5^0, T, cost: 1
  20: l1 -> l6 : x_5^0'=-1+x_5^0, T, cost: 1
  24: l1 -> l5 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (1+x_5^post13 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  26: l1 -> l1 : x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
  28: l1 -> l1 : x_5^0'=-n+x_5^0, (-n+x_5^0 >= 0 /\ -1+n >= 0 /\ 13-x_5^0 >= 0), cost: 1
  29: l1 -> l1 : x_5^0'=x_5^0-n2, (-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0), cost: 1
  30: l1 -> LoAT_sink : (x_5^post11 >= 0 /\ -x_5^post11+x_5^0 <= 0 /\ 14-x_5^0 >= 0 /\ x_5^post11-x_5^0 <= 0 /\ -14+x_5^0 >= 0), cost: NONTERM
  31: l1 -> l1 : x_5^0'=14, (14-x_5^0 >= 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0), cost: 1
  18: l3 -> l4 : -12+x_5^0 <= 0, cost: 1
  19: l3 -> l4 : 14-x_5^0 <= 0, cost: 1
  27: l4 -> l1 : -x_5^0 <= 0, cost: 1
  21: l6 -> l7 : -12+x_5^0 <= 0, cost: 1
  22: l6 -> l7 : 14-x_5^0 <= 0, cost: 1
  23: l7 -> l5 : result_4^0'=result_4^post10, 1+x_5^0 <= 0, cost: 1
  25: l9 -> l1 : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l1 -> l1 : x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> LoAT_sink : (x_5^post11 >= 0 /\ -x_5^post11+x_5^0 <= 0 /\ 14-x_5^0 >= 0 /\ x_5^post11-x_5^0 <= 0 /\ -14+x_5^0 >= 0), cost: NONTERM

		x_5^post11 >= 0 [0]: monotonic increase yields x_5^post11 >= 0
		
		14-x_5^0 >= 0 [0]: eventual decrease yields (14-x_5^0 >= 0 /\ 14-x_5^post11 >= 0)
		
		14-x_5^0 >= 0 [1]: eventual increase yields (14-x_5^0 >= 0 /\ x_5^post11-x_5^0 <= 0)
		
		-14+x_5^0 >= 0 [0]: eventual decrease yields (-14+x_5^post11 >= 0 /\ -14+x_5^0 >= 0)
		
		-14+x_5^0 >= 0 [1]: eventual increase yields (-x_5^post11+x_5^0 <= 0 /\ -14+x_5^0 >= 0)
		
		Replacement map: {x_5^post11 >= 0 -> x_5^post11 >= 0, 14-x_5^0 >= 0 -> (14-x_5^0 >= 0 /\ x_5^post11-x_5^0 <= 0), -14+x_5^0 >= 0 -> (-x_5^post11+x_5^0 <= 0 /\ -14+x_5^0 >= 0)}

	Loop Acceleration

	Original rule:
	l1 -> l1 : x_5^0'=x_5^post11, (-x_5^post11 <= 0 /\ 14-x_5^0 <= 0 /\ 14-x_5^0 == 0 /\ -14+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^post11, (-14+x_5^post11 >= 0 /\ x_5^post11 >= 0 /\ 14-x_5^0 >= 0 /\ 14-x_5^post11 >= 0 /\ -14+x_5^0 >= 0 /\ -1+n3 >= 0), cost: 1

		x_5^post11 >= 0 [0]: monotonic increase yields x_5^post11 >= 0
		
		14-x_5^0 >= 0 [0]: eventual decrease yields (14-x_5^0 >= 0 /\ 14-x_5^post11 >= 0)
		
		14-x_5^0 >= 0 [1]: eventual increase yields (14-x_5^0 >= 0 /\ x_5^post11-x_5^0 <= 0)
		
		-14+x_5^0 >= 0 [0]: eventual decrease yields (-14+x_5^post11 >= 0 /\ -14+x_5^0 >= 0)
		
		-14+x_5^0 >= 0 [1]: eventual increase yields (-x_5^post11+x_5^0 <= 0 /\ -14+x_5^0 >= 0)
		
		Replacement map: {x_5^post11 >= 0 -> x_5^post11 >= 0, 14-x_5^0 >= 0 -> (14-x_5^0 >= 0 /\ 14-x_5^post11 >= 0), -14+x_5^0 >= 0 -> (-14+x_5^post11 >= 0 /\ -14+x_5^0 >= 0)}

	made implied equalities explicit

	Original rule:
	l1 -> l1 : x_5^0'=x_5^post11, (-14+x_5^post11 >= 0 /\ x_5^post11 >= 0 /\ 14-x_5^0 >= 0 /\ 14-x_5^post11 >= 0 /\ -14+x_5^0 >= 0 /\ -1+n3 >= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^post11, (-14+x_5^post11 >= 0 /\ x_5^post11 >= 0 /\ 14-x_5^0 >= 0 /\ 14-x_5^post11 >= 0 /\ 14-x_5^post11 == 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0 /\ -1+n3 >= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : x_5^0'=x_5^post11, (-14+x_5^post11 >= 0 /\ x_5^post11 >= 0 /\ 14-x_5^0 >= 0 /\ 14-x_5^post11 >= 0 /\ 14-x_5^post11 == 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0 /\ -1+n3 >= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=14, (0 >= 0 /\ 0 == 0 /\ 14-x_5^0 >= 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0 /\ 14 >= 0 /\ -1+n3 >= 0), cost: 1
	
		propagated equality x_5^post11 = 14
		
	Simplified Guard

	Original rule:
	l1 -> l1 : x_5^0'=14, (0 >= 0 /\ 0 == 0 /\ 14-x_5^0 >= 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0 /\ 14 >= 0 /\ -1+n3 >= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=14, (14-x_5^0 >= 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0 /\ -1+n3 >= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	l1 -> l1 : x_5^0'=14, (14-x_5^0 >= 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0 /\ -1+n3 >= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=14, (14-x_5^0 >= 0 /\ -14+x_5^0 >= 0 /\ -14+x_5^0 == 0), cost: 1

Step with 30

	Trace

	25[T], 29[(-1+n2 >= 0 /\ -14+x_5^0-n2 >= 0 /\ -1+x_5^0 >= 0)], 30[(x_5^post11 >= 0 /\ -x_5^post11+x_5^0 <= 0 /\ 14-x_5^0 >= 0 /\ x_5^post11-x_5^0 <= 0 /\ -14+x_5^0 >= 0)]
	
	Blocked

	[{}, {20[T], 24[T], 28[T]}, {17[T], 20[T], 24[T], 29[T]}, {30[T]}]

Refute

	Counterexample

	[ result_4^0=0 x_5^0=16 ] 25 [ result_4^0=0 x_5^0=14 ] 29 [ result_4^0=0 x_5^0=16 ] 30
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
