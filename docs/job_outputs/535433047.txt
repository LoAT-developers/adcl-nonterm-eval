WORST_CASE(Omega(0),?)

Initial ITS
Start location: l7
   0: l0 -> l1 : i1^0'=i1^post0, __const_42^0'=__const_42^post0, (-1+i1^post0-i1^0 == 0 /\ -__const_42^post0+__const_42^0 == 0), cost: 1
   7: l1 -> l4 : i1^0'=i1^post7, __const_42^0'=__const_42^post7, (__const_42^0-__const_42^post7 == 0 /\ i1^0-i1^post7 == 0), cost: 1
   1: l2 -> l0 : i1^0'=i1^post1, __const_42^0'=__const_42^post1, (__const_42^0-__const_42^post1 == 0 /\ i1^0-i1^post1 == 0), cost: 1
   2: l3 -> l2 : i1^0'=i1^post2, __const_42^0'=__const_42^post2, (__const_42^0-__const_42^post2 == 0 /\ i1^0-i1^post2 == 0), cost: 1
   3: l3 -> l0 : i1^0'=i1^post3, __const_42^0'=__const_42^post3, (i1^0-i1^post3 == 0 /\ -__const_42^post3+__const_42^0 == 0), cost: 1
   4: l3 -> l2 : i1^0'=i1^post4, __const_42^0'=__const_42^post4, (i1^0-i1^post4 == 0 /\ __const_42^0-__const_42^post4 == 0), cost: 1
   5: l4 -> l5 : i1^0'=i1^post5, __const_42^0'=__const_42^post5, (i1^0-i1^post5 == 0 /\ -i1^0+__const_42^0 <= 0 /\ -__const_42^post5+__const_42^0 == 0), cost: 1
   6: l4 -> l3 : i1^0'=i1^post6, __const_42^0'=__const_42^post6, (1+i1^0-__const_42^0 <= 0 /\ -__const_42^post6+__const_42^0 == 0 /\ i1^0-i1^post6 == 0), cost: 1
   8: l6 -> l1 : i1^0'=i1^post8, __const_42^0'=__const_42^post8, (i1^post8 == 0 /\ -__const_42^post8+__const_42^0 == 0), cost: 1
   9: l7 -> l6 : i1^0'=i1^post9, __const_42^0'=__const_42^post9, (i1^0-i1^post9 == 0 /\ -__const_42^post9+__const_42^0 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l7
   0: l0 -> l1 : i1^0'=i1^post0, __const_42^0'=__const_42^post0, (-1+i1^post0-i1^0 == 0 /\ -__const_42^post0+__const_42^0 == 0), cost: 1
   7: l1 -> l4 : i1^0'=i1^post7, __const_42^0'=__const_42^post7, (__const_42^0-__const_42^post7 == 0 /\ i1^0-i1^post7 == 0), cost: 1
   1: l2 -> l0 : i1^0'=i1^post1, __const_42^0'=__const_42^post1, (__const_42^0-__const_42^post1 == 0 /\ i1^0-i1^post1 == 0), cost: 1
   2: l3 -> l2 : i1^0'=i1^post2, __const_42^0'=__const_42^post2, (__const_42^0-__const_42^post2 == 0 /\ i1^0-i1^post2 == 0), cost: 1
   3: l3 -> l0 : i1^0'=i1^post3, __const_42^0'=__const_42^post3, (i1^0-i1^post3 == 0 /\ -__const_42^post3+__const_42^0 == 0), cost: 1
   4: l3 -> l2 : i1^0'=i1^post4, __const_42^0'=__const_42^post4, (i1^0-i1^post4 == 0 /\ __const_42^0-__const_42^post4 == 0), cost: 1
   6: l4 -> l3 : i1^0'=i1^post6, __const_42^0'=__const_42^post6, (1+i1^0-__const_42^0 <= 0 /\ -__const_42^post6+__const_42^0 == 0 /\ i1^0-i1^post6 == 0), cost: 1
   8: l6 -> l1 : i1^0'=i1^post8, __const_42^0'=__const_42^post8, (i1^post8 == 0 /\ -__const_42^post8+__const_42^0 == 0), cost: 1
   9: l7 -> l6 : i1^0'=i1^post9, __const_42^0'=__const_42^post9, (i1^0-i1^post9 == 0 /\ -__const_42^post9+__const_42^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : i1^0'=i1^post0, __const_42^0'=__const_42^post0, (-1+i1^post0-i1^0 == 0 /\ -__const_42^post0+__const_42^0 == 0), cost: 1
New rule:
l0 -> l1 : i1^0'=1+i1^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : i1^0'=i1^post1, __const_42^0'=__const_42^post1, (__const_42^0-__const_42^post1 == 0 /\ i1^0-i1^post1 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : i1^0'=i1^post2, __const_42^0'=__const_42^post2, (__const_42^0-__const_42^post2 == 0 /\ i1^0-i1^post2 == 0), cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : i1^0'=i1^post3, __const_42^0'=__const_42^post3, (i1^0-i1^post3 == 0 /\ -__const_42^post3+__const_42^0 == 0), cost: 1
New rule:
l3 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : i1^0'=i1^post4, __const_42^0'=__const_42^post4, (i1^0-i1^post4 == 0 /\ __const_42^0-__const_42^post4 == 0), cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : i1^0'=i1^post6, __const_42^0'=__const_42^post6, (1+i1^0-__const_42^0 <= 0 /\ -__const_42^post6+__const_42^0 == 0 /\ i1^0-i1^post6 == 0), cost: 1
New rule:
l4 -> l3 : 1+i1^0-__const_42^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : i1^0'=i1^post7, __const_42^0'=__const_42^post7, (__const_42^0-__const_42^post7 == 0 /\ i1^0-i1^post7 == 0), cost: 1
New rule:
l1 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l1 : i1^0'=i1^post8, __const_42^0'=__const_42^post8, (i1^post8 == 0 /\ -__const_42^post8+__const_42^0 == 0), cost: 1
New rule:
l6 -> l1 : i1^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : i1^0'=i1^post9, __const_42^0'=__const_42^post9, (i1^0-i1^post9 == 0 /\ -__const_42^post9+__const_42^0 == 0), cost: 1
New rule:
l7 -> l6 : TRUE, cost: 1

Simplified rules
Start location: l7
  10: l0 -> l1 : i1^0'=1+i1^0, TRUE, cost: 1
  15: l1 -> l4 : TRUE, cost: 1
  11: l2 -> l0 : TRUE, cost: 1
  12: l3 -> l2 : TRUE, cost: 1
  13: l3 -> l0 : TRUE, cost: 1
  14: l4 -> l3 : 1+i1^0-__const_42^0 <= 0, cost: 1
  16: l6 -> l1 : i1^0'=0, TRUE, cost: 1
  17: l7 -> l6 : TRUE, cost: 1


Eliminating location l6 by chaining:

Applied chaining
First rule:
l7 -> l6 : TRUE, cost: 1
Second rule:
l6 -> l1 : i1^0'=0, TRUE, cost: 1
New rule:
l7 -> l1 : i1^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 16 17

Eliminating location l4 by chaining:

Applied chaining
First rule:
l1 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l3 : 1+i1^0-__const_42^0 <= 0, cost: 1
New rule:
l1 -> l3 : 1+i1^0-__const_42^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 14 15

Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l3 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminated locations on linear paths
Start location: l7
  10: l0 -> l1 : i1^0'=1+i1^0, TRUE, cost: 1
  19: l1 -> l3 : 1+i1^0-__const_42^0 <= 0, cost: 2
  13: l3 -> l0 : TRUE, cost: 1
  20: l3 -> l0 : TRUE, cost: 2
  18: l7 -> l1 : i1^0'=0, TRUE, cost: 2


Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : 1+i1^0-__const_42^0 <= 0, cost: 2
Second rule:
l3 -> l0 : TRUE, cost: 1
New rule:
l1 -> l0 : 1+i1^0-__const_42^0 <= 0, cost: 3

Applied chaining
First rule:
l1 -> l3 : 1+i1^0-__const_42^0 <= 0, cost: 2
Second rule:
l3 -> l0 : TRUE, cost: 2
New rule:
l1 -> l0 : 1+i1^0-__const_42^0 <= 0, cost: 4

Applied deletion
Removed the following rules: 13 19 20

Eliminated locations on tree-shaped paths
Start location: l7
  10: l0 -> l1 : i1^0'=1+i1^0, TRUE, cost: 1
  21: l1 -> l0 : 1+i1^0-__const_42^0 <= 0, cost: 3
  22: l1 -> l0 : 1+i1^0-__const_42^0 <= 0, cost: 4
  18: l7 -> l1 : i1^0'=0, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : 1+i1^0-__const_42^0 <= 0, cost: 3
Second rule:
l0 -> l1 : i1^0'=1+i1^0, TRUE, cost: 1
New rule:
l1 -> l1 : i1^0'=1+i1^0, 1+i1^0-__const_42^0 <= 0, cost: 4

Applied chaining
First rule:
l1 -> l0 : 1+i1^0-__const_42^0 <= 0, cost: 4
Second rule:
l0 -> l1 : i1^0'=1+i1^0, TRUE, cost: 1
New rule:
l1 -> l1 : i1^0'=1+i1^0, 1+i1^0-__const_42^0 <= 0, cost: 5

Applied deletion
Removed the following rules: 10 21 22

Eliminated locations on tree-shaped paths
Start location: l7
  23: l1 -> l1 : i1^0'=1+i1^0, 1+i1^0-__const_42^0 <= 0, cost: 4
  24: l1 -> l1 : i1^0'=1+i1^0, 1+i1^0-__const_42^0 <= 0, cost: 5
  18: l7 -> l1 : i1^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : i1^0'=1+i1^0, 1+i1^0-__const_42^0 <= 0, cost: 4
New rule:
l1 -> l1 : i1^0'=i1^0+n, (n >= 0 /\ -i1^0-n+__const_42^0 >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_idmKjI.txt

Applied instantiation
Original rule:
l1 -> l1 : i1^0'=i1^0+n, (n >= 0 /\ -i1^0-n+__const_42^0 >= 0), cost: 4*n
New rule:
l1 -> l1 : i1^0'=__const_42^0, (0 >= 0 /\ -i1^0+__const_42^0 >= 0), cost: -4*i1^0+4*__const_42^0

Applied acceleration
Original rule:
l1 -> l1 : i1^0'=1+i1^0, 1+i1^0-__const_42^0 <= 0, cost: 5
New rule:
l1 -> l1 : i1^0'=i1^0+n0, (-i1^0+__const_42^0-n0 >= 0 /\ n0 >= 0), cost: 5*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_bipoIL.txt

Applied instantiation
Original rule:
l1 -> l1 : i1^0'=i1^0+n0, (-i1^0+__const_42^0-n0 >= 0 /\ n0 >= 0), cost: 5*n0
New rule:
l1 -> l1 : i1^0'=__const_42^0, (0 >= 0 /\ -i1^0+__const_42^0 >= 0), cost: -5*i1^0+5*__const_42^0

Applied simplification
Original rule:
l1 -> l1 : i1^0'=__const_42^0, (0 >= 0 /\ -i1^0+__const_42^0 >= 0), cost: -4*i1^0+4*__const_42^0
New rule:
l1 -> l1 : i1^0'=__const_42^0, -i1^0+__const_42^0 >= 0, cost: -4*i1^0+4*__const_42^0

Applied simplification
Original rule:
l1 -> l1 : i1^0'=__const_42^0, (0 >= 0 /\ -i1^0+__const_42^0 >= 0), cost: -5*i1^0+5*__const_42^0
New rule:
l1 -> l1 : i1^0'=__const_42^0, -i1^0+__const_42^0 >= 0, cost: -5*i1^0+5*__const_42^0

Applied deletion
Removed the following rules: 23 24

Accelerated simple loops
Start location: l7
  27: l1 -> l1 : i1^0'=__const_42^0, -i1^0+__const_42^0 >= 0, cost: -4*i1^0+4*__const_42^0
  28: l1 -> l1 : i1^0'=__const_42^0, -i1^0+__const_42^0 >= 0, cost: -5*i1^0+5*__const_42^0
  18: l7 -> l1 : i1^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l7 -> l1 : i1^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : i1^0'=__const_42^0, -i1^0+__const_42^0 >= 0, cost: -4*i1^0+4*__const_42^0
New rule:
l7 -> l1 : i1^0'=__const_42^0, __const_42^0 >= 0, cost: 2+4*__const_42^0

Applied chaining
First rule:
l7 -> l1 : i1^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : i1^0'=__const_42^0, -i1^0+__const_42^0 >= 0, cost: -5*i1^0+5*__const_42^0
New rule:
l7 -> l1 : i1^0'=__const_42^0, __const_42^0 >= 0, cost: 2+5*__const_42^0

Applied deletion
Removed the following rules: 27 28

Chained accelerated rules with incoming rules
Start location: l7
  18: l7 -> l1 : i1^0'=0, TRUE, cost: 2
  29: l7 -> l1 : i1^0'=__const_42^0, __const_42^0 >= 0, cost: 2+4*__const_42^0
  30: l7 -> l1 : i1^0'=__const_42^0, __const_42^0 >= 0, cost: 2+5*__const_42^0


Removed unreachable locations and irrelevant leafs
Start location: l7
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

