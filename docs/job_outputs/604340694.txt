NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l9, not((main_x >= 0))>
<l2, l3, (main_x >= 0)>
<l3, l4, not((Â¿functionCall(__VERIFIER_nondet_int) = 0))>
<l3, l6, (Â¿functionCall(__VERIFIER_nondet_int) = 0)>
<l4, l5, true, seq{main_x -> (main_x - 1)}>
<l5, l8, true>
<l6, l7, true, seq{main_x -> (main_x + 1)}>
<l7, l8, true>
<l8, l2, true>
<l9, l10, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l11, true, seq{main__func_return_ -> 0}>
<l11, l12, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l12, l1, true, seq{main_x -> varCall_1}>
<l1, l2, true>
<l2, l3, (main_x >= 0)>
<l2, l9, not((main_x >= 0))>
<l3, l13, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l13, l6, (varCall_2 = 0)>
<l13, l4, (varCall_2 = 1)>
<l4, l5, true, seq{main_x -> (main_x - 1)}>
<l5, l8, true>
<l6, l7, true, seq{main_x -> (main_x + 1)}>
<l7, l8, true>
<l8, l2, true>
<l9, l10, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [3 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 8, col: 1> | <line: 13, col: 9> <line: 15, col: 7>
main | function | [integer, ()] | <line: 10, col: 1>
x | local variable | integer | <line: 12, col: 2> | <line: 13, col: 5> <line: 14, col: 9> <line: 16, col: 4> <line: 16, col: 8> <line: 18, col: 4> <line: 18, col: 8>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef3)>
<l2, l2, (main_x >= 0) /\ (undef4 = 0), par{main_x -> (main_x + 1)}>
<l2, l2, (main_x >= 0) /\ (undef4 = 1), par{main_x -> (main_x - 1)}>
<l2, l10, not((main_x >= 0))>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= main_x /\ undef4 = 0, {main_x -> 1 + main_x, rest remain the same}>
<l2, l2, 0 <= main_x /\ undef4 = 1, {main_x -> -1 + main_x, rest remain the same}>
Variables:
main_x

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef3, {all remain the same}>

Graph 2
<l2, l10, 1 + main_x <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 10 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002236

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000982s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002196s
[5569 : 5571]
[5569 : 5572]
Successful child: 5571
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ undef4 = 0, {main_x -> 1 + main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ undef4 = 1, {main_x -> -1 + main_x, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ undef4 = 0, {main_x -> 1 + main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ undef4 = 1, {main_x -> -1 + main_x, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:1 + main_x <= 0 - Process 1
* Exit transition: <l0, l2, main_x = undef3, {all remain the same}>
* Postcondition  : 1 + main_x <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000179s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000208s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + main_x <= 0 , 
Narrowing transition: 
<l2, l2, 0 <= main_x /\ undef4 = 0, {main_x -> 1 + main_x, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 0 <= main_x /\ undef4 = 1, {main_x -> -1 + main_x, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 0 <= main_x /\ undef4 = 0, {main_x -> 1 + main_x, rest remain the same}>
<l2, l2, 0 <= main_x /\ undef4 = 1, {main_x -> -1 + main_x, rest remain the same}>
Variables:
main_x
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000579s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001735s
[5569 : 5576]
[5569 : 5577]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018624s
Time used: 0.018015

[5569 : 5581]
[5569 : 5585]
Successful child: 5581

[32mProgram does NOT terminate[0m
