WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l1 : ox^0'=ox^post0, c^0'=c^post0, x^0'=x^post0, (x^0-x^post0 == 0 /\ c^0-c^post0 == 0 /\ ox^0-ox^post0 == 0 /\ 1-ox^0+x^0 <= 0), cost: 1
   1: l0 -> l2 : ox^0'=ox^post1, c^0'=c^post1, x^0'=x^post1, (x^0-x^post1 == 0 /\ c^0-c^post1 == 0 /\ ox^0-x^0 <= 0 /\ ox^0-ox^post1 == 0), cost: 1
   6: l1 -> l4 : ox^0'=ox^post6, c^0'=c^post6, x^0'=x^post6, (-c^post6+c^0 == 0 /\ 1-x^0 <= 0 /\ ox^0-ox^post6 == 0 /\ 1+x^post6-x^0 == 0), cost: 1
   2: l3 -> l1 : ox^0'=ox^post2, c^0'=c^post2, x^0'=x^post2, (x^0-x^post2 == 0 /\ ox^0-ox^post2 == 0 /\ c^0 <= 0 /\ -c^post2+c^0 == 0), cost: 1
   3: l3 -> l1 : ox^0'=ox^post3, c^0'=c^post3, x^0'=x^post3, (-1+c^post3 == 0 /\ -x^post3+x^0 == 0 /\ ox^post3-x^0 == 0), cost: 1
   4: l4 -> l3 : ox^0'=ox^post4, c^0'=c^post4, x^0'=x^post4, (-c^post4+c^0 == 0 /\ -x^post4+x^0 == 0 /\ c^0 <= 0 /\ -ox^post4+ox^0 == 0), cost: 1
   5: l4 -> l0 : ox^0'=ox^post5, c^0'=c^post5, x^0'=x^post5, (-c^post5+c^0 == 0 /\ -x^post5+x^0 == 0 /\ -ox^post5+ox^0 == 0 /\ 1-c^0 <= 0), cost: 1
   7: l5 -> l1 : ox^0'=ox^post7, c^0'=c^post7, x^0'=x^post7, (-x^post7+x^0 == 0 /\ c^0 <= 0 /\ -c^post7+c^0 == 0 /\ ox^0-ox^post7 == 0), cost: 1
   8: l6 -> l5 : ox^0'=ox^post8, c^0'=c^post8, x^0'=x^post8, (c^0-c^post8 == 0 /\ -x^post8+x^0 == 0 /\ ox^0-ox^post8 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   0: l0 -> l1 : ox^0'=ox^post0, c^0'=c^post0, x^0'=x^post0, (x^0-x^post0 == 0 /\ c^0-c^post0 == 0 /\ ox^0-ox^post0 == 0 /\ 1-ox^0+x^0 <= 0), cost: 1
   6: l1 -> l4 : ox^0'=ox^post6, c^0'=c^post6, x^0'=x^post6, (-c^post6+c^0 == 0 /\ 1-x^0 <= 0 /\ ox^0-ox^post6 == 0 /\ 1+x^post6-x^0 == 0), cost: 1
   2: l3 -> l1 : ox^0'=ox^post2, c^0'=c^post2, x^0'=x^post2, (x^0-x^post2 == 0 /\ ox^0-ox^post2 == 0 /\ c^0 <= 0 /\ -c^post2+c^0 == 0), cost: 1
   3: l3 -> l1 : ox^0'=ox^post3, c^0'=c^post3, x^0'=x^post3, (-1+c^post3 == 0 /\ -x^post3+x^0 == 0 /\ ox^post3-x^0 == 0), cost: 1
   4: l4 -> l3 : ox^0'=ox^post4, c^0'=c^post4, x^0'=x^post4, (-c^post4+c^0 == 0 /\ -x^post4+x^0 == 0 /\ c^0 <= 0 /\ -ox^post4+ox^0 == 0), cost: 1
   5: l4 -> l0 : ox^0'=ox^post5, c^0'=c^post5, x^0'=x^post5, (-c^post5+c^0 == 0 /\ -x^post5+x^0 == 0 /\ -ox^post5+ox^0 == 0 /\ 1-c^0 <= 0), cost: 1
   7: l5 -> l1 : ox^0'=ox^post7, c^0'=c^post7, x^0'=x^post7, (-x^post7+x^0 == 0 /\ c^0 <= 0 /\ -c^post7+c^0 == 0 /\ ox^0-ox^post7 == 0), cost: 1
   8: l6 -> l5 : ox^0'=ox^post8, c^0'=c^post8, x^0'=x^post8, (c^0-c^post8 == 0 /\ -x^post8+x^0 == 0 /\ ox^0-ox^post8 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : ox^0'=ox^post0, c^0'=c^post0, x^0'=x^post0, (x^0-x^post0 == 0 /\ c^0-c^post0 == 0 /\ ox^0-ox^post0 == 0 /\ 1-ox^0+x^0 <= 0), cost: 1
New rule:
l0 -> l1 : 1-ox^0+x^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : ox^0'=ox^post2, c^0'=c^post2, x^0'=x^post2, (x^0-x^post2 == 0 /\ ox^0-ox^post2 == 0 /\ c^0 <= 0 /\ -c^post2+c^0 == 0), cost: 1
New rule:
l3 -> l1 : c^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : ox^0'=ox^post3, c^0'=c^post3, x^0'=x^post3, (-1+c^post3 == 0 /\ -x^post3+x^0 == 0 /\ ox^post3-x^0 == 0), cost: 1
New rule:
l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : ox^0'=ox^post4, c^0'=c^post4, x^0'=x^post4, (-c^post4+c^0 == 0 /\ -x^post4+x^0 == 0 /\ c^0 <= 0 /\ -ox^post4+ox^0 == 0), cost: 1
New rule:
l4 -> l3 : c^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : ox^0'=ox^post5, c^0'=c^post5, x^0'=x^post5, (-c^post5+c^0 == 0 /\ -x^post5+x^0 == 0 /\ -ox^post5+ox^0 == 0 /\ 1-c^0 <= 0), cost: 1
New rule:
l4 -> l0 : -1+c^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : ox^0'=ox^post6, c^0'=c^post6, x^0'=x^post6, (-c^post6+c^0 == 0 /\ 1-x^0 <= 0 /\ ox^0-ox^post6 == 0 /\ 1+x^post6-x^0 == 0), cost: 1
New rule:
l1 -> l4 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l1 : ox^0'=ox^post7, c^0'=c^post7, x^0'=x^post7, (-x^post7+x^0 == 0 /\ c^0 <= 0 /\ -c^post7+c^0 == 0 /\ ox^0-ox^post7 == 0), cost: 1
New rule:
l5 -> l1 : c^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : ox^0'=ox^post8, c^0'=c^post8, x^0'=x^post8, (c^0-c^post8 == 0 /\ -x^post8+x^0 == 0 /\ ox^0-ox^post8 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   9: l0 -> l1 : 1-ox^0+x^0 <= 0, cost: 1
  14: l1 -> l4 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1
  10: l3 -> l1 : c^0 <= 0, cost: 1
  11: l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1
  12: l4 -> l3 : c^0 <= 0, cost: 1
  13: l4 -> l0 : -1+c^0 >= 0, cost: 1
  15: l5 -> l1 : c^0 <= 0, cost: 1
  16: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l1 : c^0 <= 0, cost: 1
New rule:
l6 -> l1 : c^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminating location l0 by chaining:

Applied chaining
First rule:
l4 -> l0 : -1+c^0 >= 0, cost: 1
Second rule:
l0 -> l1 : 1-ox^0+x^0 <= 0, cost: 1
New rule:
l4 -> l1 : (-1+c^0 >= 0 /\ 1-ox^0+x^0 <= 0), cost: 2

Applied deletion
Removed the following rules: 9 13

Eliminated locations on linear paths
Start location: l6
  14: l1 -> l4 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1
  10: l3 -> l1 : c^0 <= 0, cost: 1
  11: l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1
  12: l4 -> l3 : c^0 <= 0, cost: 1
  18: l4 -> l1 : (-1+c^0 >= 0 /\ 1-ox^0+x^0 <= 0), cost: 2
  17: l6 -> l1 : c^0 <= 0, cost: 2


Eliminating location l4 by chaining:

Applied chaining
First rule:
l1 -> l4 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1
Second rule:
l4 -> l3 : c^0 <= 0, cost: 1
New rule:
l1 -> l3 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1
Second rule:
l4 -> l1 : (-1+c^0 >= 0 /\ 1-ox^0+x^0 <= 0), cost: 2
New rule:
l1 -> l1 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ -1+c^0 >= 0 /\ -ox^0+x^0 <= 0), cost: 3

Applied deletion
Removed the following rules: 12 14 18

Eliminated locations on tree-shaped paths
Start location: l6
  19: l1 -> l3 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2
  20: l1 -> l1 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ -1+c^0 >= 0 /\ -ox^0+x^0 <= 0), cost: 3
  10: l3 -> l1 : c^0 <= 0, cost: 1
  11: l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1
  17: l6 -> l1 : c^0 <= 0, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ -1+c^0 >= 0 /\ -ox^0+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : x^0'=-n+x^0, (-n+x^0 >= 0 /\ n >= 0 /\ ox^0-x^0 >= 0 /\ -1+c^0 >= 0), cost: 3*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_epGOCF.txt

Applied instantiation
Original rule:
l1 -> l1 : x^0'=-n+x^0, (-n+x^0 >= 0 /\ n >= 0 /\ ox^0-x^0 >= 0 /\ -1+c^0 >= 0), cost: 3*n
New rule:
l1 -> l1 : x^0'=0, (0 >= 0 /\ ox^0-x^0 >= 0 /\ x^0 >= 0 /\ -1+c^0 >= 0), cost: 3*x^0

Applied simplification
Original rule:
l1 -> l1 : x^0'=0, (0 >= 0 /\ ox^0-x^0 >= 0 /\ x^0 >= 0 /\ -1+c^0 >= 0), cost: 3*x^0
New rule:
l1 -> l1 : x^0'=0, (ox^0-x^0 >= 0 /\ x^0 >= 0 /\ -1+c^0 >= 0), cost: 3*x^0

Applied deletion
Removed the following rules: 20

Accelerated simple loops
Start location: l6
  19: l1 -> l3 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2
  22: l1 -> l1 : x^0'=0, (ox^0-x^0 >= 0 /\ x^0 >= 0 /\ -1+c^0 >= 0), cost: 3*x^0
  10: l3 -> l1 : c^0 <= 0, cost: 1
  11: l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1
  17: l6 -> l1 : c^0 <= 0, cost: 2


Applied chaining
First rule:
l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1
Second rule:
l1 -> l1 : x^0'=0, (ox^0-x^0 >= 0 /\ x^0 >= 0 /\ -1+c^0 >= 0), cost: 3*x^0
New rule:
l3 -> l1 : ox^0'=x^0, c^0'=1, x^0'=0, x^0 >= 0, cost: 1+3*x^0

Applied deletion
Removed the following rules: 22

Chained accelerated rules with incoming rules
Start location: l6
  19: l1 -> l3 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2
  10: l3 -> l1 : c^0 <= 0, cost: 1
  11: l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1
  23: l3 -> l1 : ox^0'=x^0, c^0'=1, x^0'=0, x^0 >= 0, cost: 1+3*x^0
  17: l6 -> l1 : c^0 <= 0, cost: 2


Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2
Second rule:
l3 -> l1 : c^0 <= 0, cost: 1
New rule:
l1 -> l1 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3

Applied chaining
First rule:
l1 -> l3 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2
Second rule:
l3 -> l1 : ox^0'=x^0, c^0'=1, TRUE, cost: 1
New rule:
l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3

Applied chaining
First rule:
l1 -> l3 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2
Second rule:
l3 -> l1 : ox^0'=x^0, c^0'=1, x^0'=0, x^0 >= 0, cost: 1+3*x^0
New rule:
l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3*x^0

Applied deletion
Removed the following rules: 10 11 19 23

Eliminated locations on tree-shaped paths
Start location: l6
  24: l1 -> l1 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3
  25: l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3
  26: l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3*x^0
  17: l6 -> l1 : c^0 <= 0, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3
New rule:
l1 -> l1 : x^0'=-n0+x^0, (-n0+x^0 >= 0 /\ n0 >= 0 /\ -c^0 >= 0), cost: 3*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AhMEmc.txt

Applied instantiation
Original rule:
l1 -> l1 : x^0'=-n0+x^0, (-n0+x^0 >= 0 /\ n0 >= 0 /\ -c^0 >= 0), cost: 3*n0
New rule:
l1 -> l1 : x^0'=0, (0 >= 0 /\ -c^0 >= 0 /\ x^0 >= 0), cost: 3*x^0

Applied simplification
Original rule:
l1 -> l1 : x^0'=0, (0 >= 0 /\ -c^0 >= 0 /\ x^0 >= 0), cost: 3*x^0
New rule:
l1 -> l1 : x^0'=0, (c^0 <= 0 /\ x^0 >= 0), cost: 3*x^0

Applied deletion
Removed the following rules: 24

Accelerated simple loops
Start location: l6
  25: l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3
  26: l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3*x^0
  28: l1 -> l1 : x^0'=0, (c^0 <= 0 /\ x^0 >= 0), cost: 3*x^0
  17: l6 -> l1 : c^0 <= 0, cost: 2


Applied chaining
First rule:
l6 -> l1 : c^0 <= 0, cost: 2
Second rule:
l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3
New rule:
l6 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 5

Applied chaining
First rule:
l6 -> l1 : c^0 <= 0, cost: 2
Second rule:
l1 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 3*x^0
New rule:
l6 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2+3*x^0

Applied chaining
First rule:
l6 -> l1 : c^0 <= 0, cost: 2
Second rule:
l1 -> l1 : x^0'=0, (c^0 <= 0 /\ x^0 >= 0), cost: 3*x^0
New rule:
l6 -> l1 : x^0'=0, (c^0 <= 0 /\ x^0 >= 0), cost: 2+3*x^0

Applied deletion
Removed the following rules: 25 26 28

Chained accelerated rules with incoming rules
Start location: l6
  17: l6 -> l1 : c^0 <= 0, cost: 2
  29: l6 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=-1+x^0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 5
  30: l6 -> l1 : ox^0'=-1+x^0, c^0'=1, x^0'=0, (-1+x^0 >= 0 /\ c^0 <= 0), cost: 2+3*x^0
  31: l6 -> l1 : x^0'=0, (c^0 <= 0 /\ x^0 >= 0), cost: 2+3*x^0


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

