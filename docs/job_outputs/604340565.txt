YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_d1 -> 73, main_d2 -> 74, main_x -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l5, not((main_x >= 0))>
<l2, l3, (main_x >= 0)>
<l3, l4, true, seq{main_x -> (main_x - main_d1), main_d1old -> main_d1, main_d1 -> (main_d2 + 1), main_d2 -> (main_d1old + 1)}>
<l4, l2, true>
<l5, l6, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l7, true, seq{main__func_return_ -> 0, main_d1 -> 73, main_d2 -> 74}>
<l7, l8, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l8, l1, true, seq{main_x -> varCall_1}>
<l1, l2, true>
<l2, l3, (main_x >= 0)>
<l2, l5, not((main_x >= 0))>
<l3, l4, true, seq{main_x -> (main_x - main_d1), main_d1old -> main_d1, main_d1 -> (main_d2 + 1), main_d2 -> (main_d1old + 1)}>
<l4, l2, true>
<l5, l6, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
6, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [6 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 14, col: 1> | <line: 21, col: 6>
main | function | [integer, ()] | <line: 16, col: 1>
x | local variable | integer | <line: 18, col: 5> | <line: 21, col: 2> <line: 22, col: 9> <line: 23, col: 3> <line: 23, col: 7>
d1 | local variable | integer | <line: 18, col: 5> | <line: 19, col: 2> <line: 23, col: 11> <line: 24, col: 11> <line: 25, col: 3>
d2 | local variable | integer | <line: 18, col: 5> | <line: 20, col: 2> <line: 25, col: 8> <line: 26, col: 3>
d1old | local variable | integer | <line: 18, col: 5> | <line: 24, col: 3> <line: 26, col: 8>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef2) /\ (main_d1 = 73) /\ (main_d2 = 74)>
<l2, l2, (main_x >= 0), par{main_x -> (main_x - main_d1), main_d1 -> (main_d2 + 1), main_d2 -> (main_d1 + 1)}>
<l2, l6, not((main_x >= 0))>

Fresh variables:
undef2, 

Undef variables:
undef2, 

Abstraction variables:

Exit nodes:
6, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= main_x, {main_x -> main_x - main_d1, main_d1 -> 1 + main_d2, main_d2 -> 1 + main_d1, rest remain the same}>
Variables:
main_x, main_d1, main_d2

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef2 /\ main_d1 = 73 /\ main_d2 = 74, {all remain the same}>

Graph 2
<l2, l6, 1 + main_x <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 6 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.0021

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000392s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001087s
[1601 : 1603]
[1601 : 1604]
Successful child: 1603
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= main_x /\ 1 <= main_d1 /\ 1 <= main_d2, {main_x -> main_x - main_d1, main_d1 -> 1 + main_d2, main_d2 -> 1 + main_d1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= main_x /\ 1 <= main_d1 /\ 1 <= main_d2, {main_x -> main_x - main_d1, main_d1 -> 1 + main_d2, main_d2 -> 1 + main_d1, rest remain the same}>
[33mRanking function: [36mmain_x[0m
New Graphs: 
INVARIANTS: 
2: 1 <= main_d1 , 1 <= main_d2 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
Proving termination of subgraph 2
Analyzing SCC {l6}...
No cycles found.

[32mProgram Terminates[0m
