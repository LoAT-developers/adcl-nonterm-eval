NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, (-6+arg2p1 > 0 /\ -9+arg1p1 > 0), cost: 1
   1: f1_0_main_New -> f561_0_main_FieldAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, (1-arg4p2 == 0 /\ -6+arg2p2 > 0 /\ -4+arg1p2 > 0 /\ 3-arg3p2 == 0), cost: 1
   2: f1_0_main_New -> f580_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, (-6+arg1p3 > 0 /\ -6+arg2p3 > 0 /\ 5-arg5p3 == 0), cost: 1
  12: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, (1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0 /\ x54-x53 > 0), cost: 1
  13: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, (arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ x60-x59 <= 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0), cost: 1
   5: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, (4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg3p6 == 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ 6-arg2p6 == 0 /\ -2+arg2 > 0), cost: 1
   7: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, (6-arg2p8 == 0 /\ -9+arg1p8 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg3p8 == 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1p8 <= 0 /\ -2+arg2 > 0 /\ -7-arg2+arg1p8 <= 0), cost: 1
  15: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, (5-arg4p16 == 0 /\ -2+arg2p16-arg2 <= 0 /\ -4+arg2p16 > 0 /\ -arg5p16+arg4 == 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3p16 > 0 /\ -2+arg2 > 0 /\ -9+arg1p16 > 0), cost: 1
   4: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, (5-arg3p5 == 0 /\ -6+arg1p5 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
   6: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, (-6+arg1 > 0 /\ -6+arg1p7 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg3p7 == 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
  14: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, (-6+arg2p15 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 5-arg4p15 == 0 /\ -6+arg1p15 > 0 /\ 1-arg5p15 == 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2p15 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg2p15 <= 0 /\ 1+arg3p15 > 0), cost: 1
  17: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, (-6+arg1 > 0 /\ arg1p18-arg2 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 1+arg2p18 > 0 /\ -6+arg1p18 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ arg1p18-arg1 <= 0 /\ 5-arg3p18 == 0), cost: 1
  20: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, (-6+arg1p21 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 5-arg3p21 == 0 /\ -arg1+arg1p21 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg1p21 <= 0 /\ 1+arg2p21 > 0), cost: 1
  23: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, (5-arg3p24 == 0 /\ -6+arg1 > 0 /\ -arg2+arg1p24 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p24 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ 1+arg2p24 > 0 /\ -6+arg1p24 > 0), cost: 1
   3: f418_0_merge_Return -> f580_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, (-6+arg1 > 0 /\ -6+arg1p4 > 0 /\ 2-arg1+arg2 <= 0 /\ 5-arg5p4 == 0 /\ -6+arg2p4 > 0 /\ 5-arg3 == 0), cost: 1
  10: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, (-arg2p11+arg2 == 0 /\ -6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3p11 == 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
  11: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, (-arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ arg2-arg2p12 == 0 /\ 5-arg3 == 0 /\ 5-arg3p12 == 0), cost: 1
  18: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, (-6+arg1 > 0 /\ -arg1+arg1p19 <= 0 /\ 1+arg2p19 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p19 > 0 /\ 5-arg3 == 0 /\ 5-arg3p19 == 0), cost: 1
  21: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, (-6+arg1p22 > 0 /\ -6+arg1 > 0 /\ 5-arg3p22 == 0 /\ 4-arg1+arg2 <= 0 /\ -arg1+arg1p22 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p22 > 0), cost: 1
   8: f747_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, (arg3-arg2p9 == 0 /\ 5-arg4 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p9 <= 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p9 > 0 /\ 4+arg3-arg1 <= 0 /\ 5-arg3p9 == 0), cost: 1
   9: f749_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, (5-arg4 == 0 /\ 6-arg2p10 == 0 /\ -9+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ arg1p10-arg1 <= 0 /\ -9+arg1p10 > 0 /\ 5-arg3p10 == 0 /\ 6-arg3 == 0), cost: 1
  24: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, (-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 5-arg3p25 == 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0), cost: 1
  16: f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg5-arg5p17 == 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
  19: f1472_0_iter_NULL -> f1472_0_iter_NULL : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, (arg1p20 > 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2p20 > 0), cost: 1
  22: f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, (arg1p23 > 0 /\ 1+arg2p23 > 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
  25: f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2p26 > 0 /\ arg1p26 > 0), cost: 1
  26: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5p27, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ arg3-arg5p27 == 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0), cost: 1
  27: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg5p28, (arg3-arg5p28 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p28 > 0 /\ -arg1+arg2p28 <= 0 /\ -2+arg1p28 > 0), cost: 1
  28: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg5p29, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ -4+arg1p29 > 0 /\ arg2 > 0 /\ -arg1+arg2p29 <= 0 /\ -1+arg2p29 > 0 /\ arg3-arg5p29 == 0), cost: 1
  29: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5p30, (arg2p30-arg2 <= 0 /\ -arg5p30+arg5 == 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ arg4-arg4p30 == 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
  30: __init -> f1_0_main_New : arg1'=arg1p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, (-6+arg2p1 > 0 /\ -9+arg1p1 > 0), cost: 1
  31: f1_0_main_New -> f561_0_main_FieldAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=3, arg4'=1, arg5'=arg5p2, (-6+arg2p2 > 0 /\ -4+arg1p2 > 0), cost: 1
  32: f1_0_main_New -> f580_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=5, (-6+arg1p3 > 0 /\ -6+arg2p3 > 0), cost: 1
  42: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, (1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0), cost: 1
  43: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, (arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0), cost: 1
  35: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p6, arg2'=6, arg3'=5, arg4'=arg4p6, arg5'=arg5p6, (4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0), cost: 1
  37: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p8, arg2'=6, arg3'=5, arg4'=arg4p8, arg5'=arg5p8, (-9+arg1p8 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1p8 <= 0 /\ -2+arg2 > 0 /\ -7-arg2+arg1p8 <= 0), cost: 1
  45: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=5, arg5'=arg4, (-2+arg2p16-arg2 <= 0 /\ -4+arg2p16 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3p16 > 0 /\ -2+arg2 > 0 /\ -9+arg1p16 > 0), cost: 1
  34: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=5, arg4'=arg4p5, arg5'=arg5p5, (-6+arg1p5 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
  36: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=5, arg4'=arg4p7, arg5'=arg5p7, (-6+arg1 > 0 /\ -6+arg1p7 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
  44: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=5, arg5'=1, (-6+arg2p15 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1p15 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2p15 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg2p15 <= 0 /\ 1+arg3p15 > 0), cost: 1
  47: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=5, arg4'=arg4p18, arg5'=arg5p18, (-6+arg1 > 0 /\ arg1p18-arg2 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 1+arg2p18 > 0 /\ -6+arg1p18 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ arg1p18-arg1 <= 0), cost: 1
  49: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=5, arg4'=arg4p21, arg5'=arg5p21, (-6+arg1p21 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p21 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg1p21 <= 0 /\ 1+arg2p21 > 0), cost: 1
  51: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=5, arg4'=arg4p24, arg5'=arg5p24, (-6+arg1 > 0 /\ -arg2+arg1p24 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p24 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ 1+arg2p24 > 0 /\ -6+arg1p24 > 0), cost: 1
  33: f418_0_merge_Return -> f580_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=5, (-6+arg1 > 0 /\ -6+arg1p4 > 0 /\ 2-arg1+arg2 <= 0 /\ -6+arg2p4 > 0 /\ 5-arg3 == 0), cost: 1
  40: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg3'=5, arg4'=arg4p11, arg5'=arg5p11, (-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
  41: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg3'=5, arg4'=arg4p12, arg5'=arg5p12, (-arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ 5-arg3 == 0), cost: 1
  48: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=5, arg4'=arg4p19, arg5'=arg5p19, (-6+arg1 > 0 /\ -arg1+arg1p19 <= 0 /\ 1+arg2p19 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p19 > 0 /\ 5-arg3 == 0), cost: 1
  50: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p22, arg2'=arg2p22, arg3'=5, arg4'=arg4p22, arg5'=arg5p22, (-6+arg1p22 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -arg1+arg1p22 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p22 > 0), cost: 1
  38: f747_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg3, arg3'=5, arg4'=arg4p9, arg5'=arg5p9, (5-arg4 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p9 <= 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p9 > 0 /\ 4+arg3-arg1 <= 0), cost: 1
  39: f749_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p10, arg2'=6, arg3'=5, arg4'=arg4p10, arg5'=arg5p10, (5-arg4 == 0 /\ -9+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ arg1p10-arg1 <= 0 /\ -9+arg1p10 > 0 /\ 6-arg3 == 0), cost: 1
  52: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=5, arg4'=arg4p25, arg5'=arg5p25, (-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0), cost: 1
  46: f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
  19: f1472_0_iter_NULL -> f1472_0_iter_NULL : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, (arg1p20 > 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2p20 > 0), cost: 1
  22: f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, (arg1p23 > 0 /\ 1+arg2p23 > 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
  25: f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2p26 > 0 /\ arg1p26 > 0), cost: 1
  53: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0), cost: 1
  54: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p28 > 0 /\ -arg1+arg2p28 <= 0 /\ -2+arg1p28 > 0), cost: 1
  55: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ -4+arg1p29 > 0 /\ arg2 > 0 /\ -arg1+arg2p29 <= 0 /\ -1+arg2p29 > 0), cost: 1
  56: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, (arg2p30-arg2 <= 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
  30: __init -> f1_0_main_New : arg1'=arg1p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_New -> f561_0_main_FieldAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, (1-arg4p2 == 0 /\ -6+arg2p2 > 0 /\ -4+arg1p2 > 0 /\ 3-arg3p2 == 0), cost: 1
	New rule:
	f1_0_main_New -> f561_0_main_FieldAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=3, arg4'=1, arg5'=arg5p2, (0 == 0 /\ -6+arg2p2 > 0 /\ -4+arg1p2 > 0), cost: 1
	
		propagated equality arg4p2 = 1
		
		propagated equality arg3p2 = 3
		
	Simplified Guard

	Original rule:
	f1_0_main_New -> f561_0_main_FieldAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=3, arg4'=1, arg5'=arg5p2, (0 == 0 /\ -6+arg2p2 > 0 /\ -4+arg1p2 > 0), cost: 1
	New rule:
	f1_0_main_New -> f561_0_main_FieldAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=3, arg4'=1, arg5'=arg5p2, (-6+arg2p2 > 0 /\ -4+arg1p2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_New -> f580_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, (-6+arg1p3 > 0 /\ -6+arg2p3 > 0 /\ 5-arg5p3 == 0), cost: 1
	New rule:
	f1_0_main_New -> f580_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=5, (0 == 0 /\ -6+arg1p3 > 0 /\ -6+arg2p3 > 0), cost: 1
	
		propagated equality arg5p3 = 5
		
	Simplified Guard

	Original rule:
	f1_0_main_New -> f580_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=5, (0 == 0 /\ -6+arg1p3 > 0 /\ -6+arg2p3 > 0), cost: 1
	New rule:
	f1_0_main_New -> f580_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=5, (-6+arg1p3 > 0 /\ -6+arg2p3 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f418_0_merge_Return -> f580_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, (-6+arg1 > 0 /\ -6+arg1p4 > 0 /\ 2-arg1+arg2 <= 0 /\ 5-arg5p4 == 0 /\ -6+arg2p4 > 0 /\ 5-arg3 == 0), cost: 1
	New rule:
	f418_0_merge_Return -> f580_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=5, (0 == 0 /\ -6+arg1 > 0 /\ -6+arg1p4 > 0 /\ 2-arg1+arg2 <= 0 /\ -6+arg2p4 > 0 /\ 5-arg3 == 0), cost: 1
	
		propagated equality arg5p4 = 5
		
	Simplified Guard

	Original rule:
	f418_0_merge_Return -> f580_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=5, (0 == 0 /\ -6+arg1 > 0 /\ -6+arg1p4 > 0 /\ 2-arg1+arg2 <= 0 /\ -6+arg2p4 > 0 /\ 5-arg3 == 0), cost: 1
	New rule:
	f418_0_merge_Return -> f580_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=5, (-6+arg1 > 0 /\ -6+arg1p4 > 0 /\ 2-arg1+arg2 <= 0 /\ -6+arg2p4 > 0 /\ 5-arg3 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, (5-arg3p5 == 0 /\ -6+arg1p5 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=5, arg4'=arg4p5, arg5'=arg5p5, (0 == 0 /\ -6+arg1p5 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	
		propagated equality arg3p5 = 5
		
	Simplified Guard

	Original rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=5, arg4'=arg4p5, arg5'=arg5p5, (0 == 0 /\ -6+arg1p5 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=5, arg4'=arg4p5, arg5'=arg5p5, (-6+arg1p5 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, (4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg3p6 == 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ 6-arg2p6 == 0 /\ -2+arg2 > 0), cost: 1
	New rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p6, arg2'=6, arg3'=5, arg4'=arg4p6, arg5'=arg5p6, (0 == 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0), cost: 1
	
		propagated equality arg3p6 = 5
		
		propagated equality arg2p6 = 6
		
	Simplified Guard

	Original rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p6, arg2'=6, arg3'=5, arg4'=arg4p6, arg5'=arg5p6, (0 == 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0), cost: 1
	New rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p6, arg2'=6, arg3'=5, arg4'=arg4p6, arg5'=arg5p6, (4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, (-6+arg1 > 0 /\ -6+arg1p7 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg3p7 == 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=5, arg4'=arg4p7, arg5'=arg5p7, (0 == 0 /\ -6+arg1 > 0 /\ -6+arg1p7 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	
		propagated equality arg3p7 = 5
		
	Simplified Guard

	Original rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=5, arg4'=arg4p7, arg5'=arg5p7, (0 == 0 /\ -6+arg1 > 0 /\ -6+arg1p7 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=5, arg4'=arg4p7, arg5'=arg5p7, (-6+arg1 > 0 /\ -6+arg1p7 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, (6-arg2p8 == 0 /\ -9+arg1p8 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg3p8 == 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1p8 <= 0 /\ -2+arg2 > 0 /\ -7-arg2+arg1p8 <= 0), cost: 1
	New rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p8, arg2'=6, arg3'=5, arg4'=arg4p8, arg5'=arg5p8, (0 == 0 /\ -9+arg1p8 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1p8 <= 0 /\ -2+arg2 > 0 /\ -7-arg2+arg1p8 <= 0), cost: 1
	
		propagated equality arg2p8 = 6
		
		propagated equality arg3p8 = 5
		
	Simplified Guard

	Original rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p8, arg2'=6, arg3'=5, arg4'=arg4p8, arg5'=arg5p8, (0 == 0 /\ -9+arg1p8 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1p8 <= 0 /\ -2+arg2 > 0 /\ -7-arg2+arg1p8 <= 0), cost: 1
	New rule:
	f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p8, arg2'=6, arg3'=5, arg4'=arg4p8, arg5'=arg5p8, (-9+arg1p8 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1p8 <= 0 /\ -2+arg2 > 0 /\ -7-arg2+arg1p8 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f747_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, (arg3-arg2p9 == 0 /\ 5-arg4 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p9 <= 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p9 > 0 /\ 4+arg3-arg1 <= 0 /\ 5-arg3p9 == 0), cost: 1
	New rule:
	f747_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg3, arg3'=5, arg4'=arg4p9, arg5'=arg5p9, (0 == 0 /\ 5-arg4 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p9 <= 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p9 > 0 /\ 4+arg3-arg1 <= 0), cost: 1
	
		propagated equality arg2p9 = arg3
		
		propagated equality arg3p9 = 5
		
	Simplified Guard

	Original rule:
	f747_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg3, arg3'=5, arg4'=arg4p9, arg5'=arg5p9, (0 == 0 /\ 5-arg4 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p9 <= 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p9 > 0 /\ 4+arg3-arg1 <= 0), cost: 1
	New rule:
	f747_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg3, arg3'=5, arg4'=arg4p9, arg5'=arg5p9, (5-arg4 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p9 <= 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p9 > 0 /\ 4+arg3-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f749_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, (5-arg4 == 0 /\ 6-arg2p10 == 0 /\ -9+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ arg1p10-arg1 <= 0 /\ -9+arg1p10 > 0 /\ 5-arg3p10 == 0 /\ 6-arg3 == 0), cost: 1
	New rule:
	f749_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p10, arg2'=6, arg3'=5, arg4'=arg4p10, arg5'=arg5p10, (0 == 0 /\ 5-arg4 == 0 /\ -9+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ arg1p10-arg1 <= 0 /\ -9+arg1p10 > 0 /\ 6-arg3 == 0), cost: 1
	
		propagated equality arg2p10 = 6
		
		propagated equality arg3p10 = 5
		
	Simplified Guard

	Original rule:
	f749_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p10, arg2'=6, arg3'=5, arg4'=arg4p10, arg5'=arg5p10, (0 == 0 /\ 5-arg4 == 0 /\ -9+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ arg1p10-arg1 <= 0 /\ -9+arg1p10 > 0 /\ 6-arg3 == 0), cost: 1
	New rule:
	f749_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p10, arg2'=6, arg3'=5, arg4'=arg4p10, arg5'=arg5p10, (5-arg4 == 0 /\ -9+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ arg1p10-arg1 <= 0 /\ -9+arg1p10 > 0 /\ 6-arg3 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, (-arg2p11+arg2 == 0 /\ -6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3p11 == 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2, arg3'=5, arg4'=arg4p11, arg5'=arg5p11, (0 == 0 /\ -6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
	
		propagated equality arg2p11 = arg2
		
		propagated equality arg3p11 = 5
		
	Simplified Guard

	Original rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2, arg3'=5, arg4'=arg4p11, arg5'=arg5p11, (0 == 0 /\ -6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2, arg3'=5, arg4'=arg4p11, arg5'=arg5p11, (-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2, arg3'=5, arg4'=arg4p11, arg5'=arg5p11, (-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg3'=5, arg4'=arg4p11, arg5'=arg5p11, (-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, (-arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ arg2-arg2p12 == 0 /\ 5-arg3 == 0 /\ 5-arg3p12 == 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg2'=arg2, arg3'=5, arg4'=arg4p12, arg5'=arg5p12, (0 == 0 /\ -arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ 5-arg3 == 0), cost: 1
	
		propagated equality arg2p12 = arg2
		
		propagated equality arg3p12 = 5
		
	Simplified Guard

	Original rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg2'=arg2, arg3'=5, arg4'=arg4p12, arg5'=arg5p12, (0 == 0 /\ -arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ 5-arg3 == 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg2'=arg2, arg3'=5, arg4'=arg4p12, arg5'=arg5p12, (-arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ 5-arg3 == 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg2'=arg2, arg3'=5, arg4'=arg4p12, arg5'=arg5p12, (-arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ 5-arg3 == 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg3'=5, arg4'=arg4p12, arg5'=arg5p12, (-arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ 5-arg3 == 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, (1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0 /\ x54-x53 > 0), cost: 1
	New rule:
	f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, (1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, (arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ x60-x59 <= 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0), cost: 1
	New rule:
	f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, (arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, (-6+arg2p15 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 5-arg4p15 == 0 /\ -6+arg1p15 > 0 /\ 1-arg5p15 == 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2p15 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg2p15 <= 0 /\ 1+arg3p15 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=5, arg5'=1, (0 == 0 /\ -6+arg2p15 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1p15 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2p15 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg2p15 <= 0 /\ 1+arg3p15 > 0), cost: 1
	
		propagated equality arg4p15 = 5
		
		propagated equality arg5p15 = 1
		
	Simplified Guard

	Original rule:
	f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=5, arg5'=1, (0 == 0 /\ -6+arg2p15 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1p15 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2p15 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg2p15 <= 0 /\ 1+arg3p15 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=5, arg5'=1, (-6+arg2p15 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1p15 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2p15 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg2p15 <= 0 /\ 1+arg3p15 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, (5-arg4p16 == 0 /\ -2+arg2p16-arg2 <= 0 /\ -4+arg2p16 > 0 /\ -arg5p16+arg4 == 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3p16 > 0 /\ -2+arg2 > 0 /\ -9+arg1p16 > 0), cost: 1
	New rule:
	f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=5, arg5'=arg4, (0 == 0 /\ -2+arg2p16-arg2 <= 0 /\ -4+arg2p16 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3p16 > 0 /\ -2+arg2 > 0 /\ -9+arg1p16 > 0), cost: 1
	
		propagated equality arg4p16 = 5
		
		propagated equality arg5p16 = arg4
		
	Simplified Guard

	Original rule:
	f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=5, arg5'=arg4, (0 == 0 /\ -2+arg2p16-arg2 <= 0 /\ -4+arg2p16 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3p16 > 0 /\ -2+arg2 > 0 /\ -9+arg1p16 > 0), cost: 1
	New rule:
	f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=5, arg5'=arg4, (-2+arg2p16-arg2 <= 0 /\ -4+arg2p16 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3p16 > 0 /\ -2+arg2 > 0 /\ -9+arg1p16 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg5-arg5p17 == 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	New rule:
	f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5, (0 == 0 /\ arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	
		propagated equality arg5p17 = arg5
		
	Simplified Guard

	Original rule:
	f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5, (0 == 0 /\ arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	New rule:
	f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	New rule:
	f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, (-6+arg1 > 0 /\ arg1p18-arg2 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 1+arg2p18 > 0 /\ -6+arg1p18 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ arg1p18-arg1 <= 0 /\ 5-arg3p18 == 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=5, arg4'=arg4p18, arg5'=arg5p18, (0 == 0 /\ -6+arg1 > 0 /\ arg1p18-arg2 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 1+arg2p18 > 0 /\ -6+arg1p18 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ arg1p18-arg1 <= 0), cost: 1
	
		propagated equality arg3p18 = 5
		
	Simplified Guard

	Original rule:
	f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=5, arg4'=arg4p18, arg5'=arg5p18, (0 == 0 /\ -6+arg1 > 0 /\ arg1p18-arg2 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 1+arg2p18 > 0 /\ -6+arg1p18 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ arg1p18-arg1 <= 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=5, arg4'=arg4p18, arg5'=arg5p18, (-6+arg1 > 0 /\ arg1p18-arg2 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 1+arg2p18 > 0 /\ -6+arg1p18 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ arg1p18-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, (-6+arg1 > 0 /\ -arg1+arg1p19 <= 0 /\ 1+arg2p19 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p19 > 0 /\ 5-arg3 == 0 /\ 5-arg3p19 == 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=5, arg4'=arg4p19, arg5'=arg5p19, (0 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p19 <= 0 /\ 1+arg2p19 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p19 > 0 /\ 5-arg3 == 0), cost: 1
	
		propagated equality arg3p19 = 5
		
	Simplified Guard

	Original rule:
	f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=5, arg4'=arg4p19, arg5'=arg5p19, (0 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p19 <= 0 /\ 1+arg2p19 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p19 > 0 /\ 5-arg3 == 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=5, arg4'=arg4p19, arg5'=arg5p19, (-6+arg1 > 0 /\ -arg1+arg1p19 <= 0 /\ 1+arg2p19 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p19 > 0 /\ 5-arg3 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, (-6+arg1p21 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 5-arg3p21 == 0 /\ -arg1+arg1p21 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg1p21 <= 0 /\ 1+arg2p21 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=5, arg4'=arg4p21, arg5'=arg5p21, (0 == 0 /\ -6+arg1p21 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p21 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg1p21 <= 0 /\ 1+arg2p21 > 0), cost: 1
	
		propagated equality arg3p21 = 5
		
	Simplified Guard

	Original rule:
	f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=5, arg4'=arg4p21, arg5'=arg5p21, (0 == 0 /\ -6+arg1p21 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p21 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg1p21 <= 0 /\ 1+arg2p21 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=5, arg4'=arg4p21, arg5'=arg5p21, (-6+arg1p21 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p21 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg1p21 <= 0 /\ 1+arg2p21 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, (-6+arg1p22 > 0 /\ -6+arg1 > 0 /\ 5-arg3p22 == 0 /\ 4-arg1+arg2 <= 0 /\ -arg1+arg1p22 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p22 > 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p22, arg2'=arg2p22, arg3'=5, arg4'=arg4p22, arg5'=arg5p22, (0 == 0 /\ -6+arg1p22 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -arg1+arg1p22 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p22 > 0), cost: 1
	
		propagated equality arg3p22 = 5
		
	Simplified Guard

	Original rule:
	f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p22, arg2'=arg2p22, arg3'=5, arg4'=arg4p22, arg5'=arg5p22, (0 == 0 /\ -6+arg1p22 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -arg1+arg1p22 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p22 > 0), cost: 1
	New rule:
	f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p22, arg2'=arg2p22, arg3'=5, arg4'=arg4p22, arg5'=arg5p22, (-6+arg1p22 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -arg1+arg1p22 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p22 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, (5-arg3p24 == 0 /\ -6+arg1 > 0 /\ -arg2+arg1p24 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p24 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ 1+arg2p24 > 0 /\ -6+arg1p24 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=5, arg4'=arg4p24, arg5'=arg5p24, (0 == 0 /\ -6+arg1 > 0 /\ -arg2+arg1p24 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p24 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ 1+arg2p24 > 0 /\ -6+arg1p24 > 0), cost: 1
	
		propagated equality arg3p24 = 5
		
	Simplified Guard

	Original rule:
	f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=5, arg4'=arg4p24, arg5'=arg5p24, (0 == 0 /\ -6+arg1 > 0 /\ -arg2+arg1p24 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p24 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ 1+arg2p24 > 0 /\ -6+arg1p24 > 0), cost: 1
	New rule:
	f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=5, arg4'=arg4p24, arg5'=arg5p24, (-6+arg1 > 0 /\ -arg2+arg1p24 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p24 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ 1+arg2p24 > 0 /\ -6+arg1p24 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, (-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 5-arg3p25 == 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0), cost: 1
	New rule:
	f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=5, arg4'=arg4p25, arg5'=arg5p25, (0 == 0 /\ -6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0), cost: 1
	
		propagated equality arg3p25 = 5
		
	Simplified Guard

	Original rule:
	f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=5, arg4'=arg4p25, arg5'=arg5p25, (0 == 0 /\ -6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0), cost: 1
	New rule:
	f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=5, arg4'=arg4p25, arg5'=arg5p25, (-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5p27, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ arg3-arg5p27 == 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0), cost: 1
	New rule:
	f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg3, (0 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0), cost: 1
	
		propagated equality arg5p27 = arg3
		
	Simplified Guard

	Original rule:
	f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg3, (0 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0), cost: 1
	New rule:
	f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg5p28, (arg3-arg5p28 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p28 > 0 /\ -arg1+arg2p28 <= 0 /\ -2+arg1p28 > 0), cost: 1
	New rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg3, (0 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p28 > 0 /\ -arg1+arg2p28 <= 0 /\ -2+arg1p28 > 0), cost: 1
	
		propagated equality arg5p28 = arg3
		
	Simplified Guard

	Original rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg3, (0 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p28 > 0 /\ -arg1+arg2p28 <= 0 /\ -2+arg1p28 > 0), cost: 1
	New rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p28 > 0 /\ -arg1+arg2p28 <= 0 /\ -2+arg1p28 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg5p29, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ -4+arg1p29 > 0 /\ arg2 > 0 /\ -arg1+arg2p29 <= 0 /\ -1+arg2p29 > 0 /\ arg3-arg5p29 == 0), cost: 1
	New rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg3, (0 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ -4+arg1p29 > 0 /\ arg2 > 0 /\ -arg1+arg2p29 <= 0 /\ -1+arg2p29 > 0), cost: 1
	
		propagated equality arg5p29 = arg3
		
	Simplified Guard

	Original rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg3, (0 == 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ -4+arg1p29 > 0 /\ arg2 > 0 /\ -arg1+arg2p29 <= 0 /\ -1+arg2p29 > 0), cost: 1
	New rule:
	f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ -4+arg1p29 > 0 /\ arg2 > 0 /\ -arg1+arg2p29 <= 0 /\ -1+arg2p29 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5p30, (arg2p30-arg2 <= 0 /\ -arg5p30+arg5 == 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ arg4-arg4p30 == 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	New rule:
	f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4, arg5'=arg5, (0 == 0 /\ arg2p30-arg2 <= 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	
		propagated equality arg5p30 = arg5
		
		propagated equality arg4p30 = arg4
		
	Simplified Guard

	Original rule:
	f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4, arg5'=arg5, (0 == 0 /\ arg2p30-arg2 <= 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	New rule:
	f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4, arg5'=arg5, (arg2p30-arg2 <= 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4, arg5'=arg5, (arg2p30-arg2 <= 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	New rule:
	f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, (arg2p30-arg2 <= 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1

Step with 30

	Trace

	30[T]
	
	Blocked

	[{}, {}]

Step with 0

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 42

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 42

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Covered

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)]
	
	Blocked

	[{}, {}, {}, {42[T]}]

Step with 43

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)]
	
	Blocked

	[{}, {}, {}, {42[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 43

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)]
	
	Blocked

	[{}, {}, {}, {42[T]}, {}, {}]

Covered

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)]
	
	Blocked

	[{}, {}, {}, {42[T]}, {43[T]}]

Backtrack

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)]
	
	Blocked

	[{}, {}, {}, {42[T], 43[T]}]

Backtrack

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)]
	
	Blocked

	[{}, {}, {42[T]}]

Step with 43

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)]
	
	Blocked

	[{}, {}, {42[T]}, {}]

Step with 43

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)]
	
	Blocked

	[{}, {}, {42[T]}, {}, {}]

Covered

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)]
	
	Blocked

	[{}, {}, {42[T]}, {43[T]}]

Step with 42

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)]
	
	Blocked

	[{}, {}, {42[T]}, {43[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 42

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)]
	
	Blocked

	[{}, {}, {42[T]}, {43[T]}, {}, {}]

Covered

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)], 42[(1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0)]
	
	Blocked

	[{}, {}, {42[T]}, {43[T]}, {42[T]}]

Backtrack

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)], 43[(arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0)]
	
	Blocked

	[{}, {}, {42[T]}, {42[T], 43[T]}]

Backtrack

	Trace

	30[T], 0[(-6+arg2p1 > 0 /\ -9+arg1p1 > 0)]
	
	Blocked

	[{}, {}, {42[T], 43[T]}]

Backtrack

	Trace

	30[T]
	
	Blocked

	[{}, {0[T]}]

Step with 31

	Trace

	30[T], 31[(-6+arg2p2 > 0 /\ -4+arg1p2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}]

Step with 35

	Trace

	30[T], 31[(-6+arg2p2 > 0 /\ -4+arg1p2 > 0)], 35[(4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {}]

Step with 40

	Trace

	30[T], 31[(-6+arg2p2 > 0 /\ -4+arg1p2 > 0)], 35[(4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0)], 40[(-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0)]
	
	Blocked

	[{}, {0[T]}, {}, {}, {}]

Step with 52

	Trace

	30[T], 31[(-6+arg2p2 > 0 /\ -4+arg1p2 > 0)], 35[(4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0)], 40[(-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0)], 52[(-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0)]
	
	Blocked

	[{}, {0[T]}, {}, {}, {}, {}]

Step with 53

	Trace

	30[T], 31[(-6+arg2p2 > 0 /\ -4+arg1p2 > 0)], 35[(4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0)], 40[(-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0)], 52[(-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0)], 53[(2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {}, {}, {}, {}]

Step with 46

	Trace

	30[T], 31[(-6+arg2p2 > 0 /\ -4+arg1p2 > 0)], 35[(4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0)], 40[(-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0)], 52[(-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0)], 53[(2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0)], 46[(arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0)]
	
	Blocked

	[{}, {0[T]}, {}, {}, {}, {}, {}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, (-6+arg2p1 > 0 /\ -9+arg1p1 > 0), cost: 1
  31: f1_0_main_New -> f561_0_main_FieldAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=3, arg4'=1, arg5'=arg5p2, (-6+arg2p2 > 0 /\ -4+arg1p2 > 0), cost: 1
  32: f1_0_main_New -> f580_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=5, (-6+arg1p3 > 0 /\ -6+arg2p3 > 0), cost: 1
  42: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, (1+arg2p13 > 0 /\ arg1 > 0 /\ -arg1+arg1p13 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p13 <= 0 /\ arg1p13 > 0), cost: 1
  43: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, (arg2p14 > 0 /\ arg2p14-arg2 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1p14 <= 0 /\ arg2 > 0 /\ arg1p14 > 0), cost: 1
  35: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p6, arg2'=6, arg3'=5, arg4'=arg4p6, arg5'=arg5p6, (4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0), cost: 1
  37: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg1'=arg1p8, arg2'=6, arg3'=5, arg4'=arg4p8, arg5'=arg5p8, (-9+arg1p8 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1p8 <= 0 /\ -2+arg2 > 0 /\ -7-arg2+arg1p8 <= 0), cost: 1
  45: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=5, arg5'=arg4, (-2+arg2p16-arg2 <= 0 /\ -4+arg2p16 > 0 /\ 4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3p16 > 0 /\ -2+arg2 > 0 /\ -9+arg1p16 > 0), cost: 1
  34: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=5, arg4'=arg4p5, arg5'=arg5p5, (-6+arg1p5 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
  36: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=5, arg4'=arg4p7, arg5'=arg5p7, (-6+arg1 > 0 /\ -6+arg1p7 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0), cost: 1
  44: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=5, arg5'=1, (-6+arg2p15 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1p15 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2p15 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg2p15 <= 0 /\ 1+arg3p15 > 0), cost: 1
  47: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=5, arg4'=arg4p18, arg5'=arg5p18, (-6+arg1 > 0 /\ arg1p18-arg2 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ 1+arg2p18 > 0 /\ -6+arg1p18 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ arg1p18-arg1 <= 0), cost: 1
  49: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=5, arg4'=arg4p21, arg5'=arg5p21, (-6+arg1p21 > 0 /\ -6+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p21 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ -arg2+arg1p21 <= 0 /\ 1+arg2p21 > 0), cost: 1
  51: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=5, arg4'=arg4p24, arg5'=arg5p24, (-6+arg1 > 0 /\ -arg2+arg1p24 <= 0 /\ 2+arg3-arg1 <= 0 /\ 5-arg5 == 0 /\ -arg1+arg1p24 <= 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg2 > 0 /\ 1+arg2p24 > 0 /\ -6+arg1p24 > 0), cost: 1
  33: f418_0_merge_Return -> f580_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=5, (-6+arg1 > 0 /\ -6+arg1p4 > 0 /\ 2-arg1+arg2 <= 0 /\ -6+arg2p4 > 0 /\ 5-arg3 == 0), cost: 1
  40: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p11, arg3'=5, arg4'=arg4p11, arg5'=arg5p11, (-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0), cost: 1
  41: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg1'=arg1p12, arg3'=5, arg4'=arg4p12, arg5'=arg5p12, (-arg1+arg1p12 <= 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p12 > 0 /\ 5-arg3 == 0), cost: 1
  48: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=5, arg4'=arg4p19, arg5'=arg5p19, (-6+arg1 > 0 /\ -arg1+arg1p19 <= 0 /\ 1+arg2p19 > 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p19 > 0 /\ 5-arg3 == 0), cost: 1
  50: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p22, arg2'=arg2p22, arg3'=5, arg4'=arg4p22, arg5'=arg5p22, (-6+arg1p22 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ -arg1+arg1p22 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p22 > 0), cost: 1
  38: f747_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg3, arg3'=5, arg4'=arg4p9, arg5'=arg5p9, (5-arg4 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1p9 <= 0 /\ 4-arg1+arg2 <= 0 /\ -6+arg1p9 > 0 /\ 4+arg3-arg1 <= 0), cost: 1
  39: f749_0_append_Return -> f1500_0_main_InvokeMethod : arg1'=arg1p10, arg2'=6, arg3'=5, arg4'=arg4p10, arg5'=arg5p10, (5-arg4 == 0 /\ -9+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ arg1p10-arg1 <= 0 /\ -9+arg1p10 > 0 /\ 6-arg3 == 0), cost: 1
  52: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=5, arg4'=arg4p25, arg5'=arg5p25, (-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0), cost: 1
  46: f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
  57: f1341_0_append_NONNULL -> LoAT_sink : (-arg3p17+arg3 <= 0 /\ arg3 > 0 /\ arg1+arg4p17-arg1p17-arg4 <= 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2-arg2p17 <= 0 /\ arg2-arg2p17 >= 0 /\ arg2 > 0 /\ arg1-arg1p17 <= 0 /\ -2+arg1-arg4 >= 0 /\ arg2p17 > 0 /\ 1+arg3p17 > 0 /\ -2-arg5+arg2 >= 0), cost: NONTERM
  19: f1472_0_iter_NULL -> f1472_0_iter_NULL : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, (arg1p20 > 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2p20 > 0), cost: 1
  22: f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, (arg1p23 > 0 /\ 1+arg2p23 > 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
  25: f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2p26 > 0 /\ arg1p26 > 0), cost: 1
  53: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0), cost: 1
  54: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p28 > 0 /\ -arg1+arg2p28 <= 0 /\ -2+arg1p28 > 0), cost: 1
  55: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg3, (2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ -4+arg1p29 > 0 /\ arg2 > 0 /\ -arg1+arg2p29 <= 0 /\ -1+arg2p29 > 0), cost: 1
  56: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, (arg2p30-arg2 <= 0 /\ -1+arg2 > 0 /\ -2+arg1 > 0 /\ 4+arg3-arg1 <= 0 /\ -1+arg2p30 > 0 /\ 2-arg1+arg4 <= 0 /\ 1+arg3p30 > 0 /\ arg1p30-arg1 <= 0 /\ -2+arg1p30 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
  30: __init -> f1_0_main_New : arg1'=arg1p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (arg3 > 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 2-arg1+arg4 <= 0 /\ arg2p17 > 0 /\ -arg2+arg2p17 <= 0 /\ 1+arg3p17 > 0 /\ 2+arg5-arg2 <= 0), cost: 1
	New rule:
	f1341_0_append_NONNULL -> LoAT_sink : (-arg3p17+arg3 <= 0 /\ arg3 > 0 /\ arg1+arg4p17-arg1p17-arg4 <= 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2-arg2p17 <= 0 /\ arg2-arg2p17 >= 0 /\ arg2 > 0 /\ arg1-arg1p17 <= 0 /\ -2+arg1-arg4 >= 0 /\ arg2p17 > 0 /\ 1+arg3p17 > 0 /\ -2-arg5+arg2 >= 0), cost: NONTERM

		arg3 > 0 [0]: eventual decrease yields (arg3p17 > 0 /\ arg3 > 0)
		
		arg3 > 0 [1]: eventual increase yields (-arg3p17+arg3 <= 0 /\ arg3 > 0)
		
		-2+arg1 > 0 [0]: eventual decrease yields (-2+arg1p17 > 0 /\ -2+arg1 > 0)
		
		-2+arg1 > 0 [1]: eventual increase yields (-2+arg1 > 0 /\ arg1-arg1p17 <= 0)
		
		arg1p17 > 0 [0]: monotonic increase yields arg1p17 > 0
		
		arg2-arg2p17 >= 0 [0]: monotonic increase yields arg2-arg2p17 >= 0
		
		arg2 > 0 [0]: montonic decrease yields arg2p17 > 0, dependencies: arg2-arg2p17 >= 0
		
		arg2 > 0 [1]: eventual increase yields (arg2-arg2p17 <= 0 /\ arg2 > 0)
		
		-2+arg1-arg4 >= 0 [0]: eventual decrease yields (-2-arg4p17+arg1p17 >= 0 /\ -2+arg1-arg4 >= 0)
		
		-2+arg1-arg4 >= 0 [1]: eventual increase yields (arg1+arg4p17-arg1p17-arg4 <= 0 /\ -2+arg1-arg4 >= 0)
		
		arg2p17 > 0 [0]: monotonic increase yields arg2p17 > 0
		
		1+arg3p17 > 0 [0]: monotonic increase yields 1+arg3p17 > 0
		
		-2-arg5+arg2 >= 0 [0]: montonic decrease yields -2-arg5+arg2p17 >= 0, dependencies: arg2-arg2p17 >= 0
		
		-2-arg5+arg2 >= 0 [1]: eventual increase yields (arg2-arg2p17 <= 0 /\ -2-arg5+arg2 >= 0)
		
		Replacement map: {arg3 > 0 -> (-arg3p17+arg3 <= 0 /\ arg3 > 0), -2+arg1 > 0 -> (-2+arg1 > 0 /\ arg1-arg1p17 <= 0), arg1p17 > 0 -> arg1p17 > 0, arg2-arg2p17 >= 0 -> arg2-arg2p17 >= 0, arg2 > 0 -> (arg2-arg2p17 <= 0 /\ arg2 > 0), -2+arg1-arg4 >= 0 -> (arg1+arg4p17-arg1p17-arg4 <= 0 /\ -2+arg1-arg4 >= 0), arg2p17 > 0 -> arg2p17 > 0, 1+arg3p17 > 0 -> 1+arg3p17 > 0, -2-arg5+arg2 >= 0 -> (arg2-arg2p17 <= 0 /\ -2-arg5+arg2 >= 0)}

Step with 57

	Trace

	30[T], 31[(-6+arg2p2 > 0 /\ -4+arg1p2 > 0)], 35[(4+arg3-arg2 <= 0 /\ arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -9+arg1p6 > 0 /\ 2-arg2+arg4 <= 0 /\ -2+arg2 > 0)], 40[(-6+arg1 > 0 /\ -6+arg1p11 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ -arg1+arg1p11 <= 0)], 52[(-6+arg1p25 > 0 /\ -6+arg1 > 0 /\ 4-arg1+arg2 <= 0 /\ 5-arg3 == 0 /\ 1+arg2p25 > 0 /\ arg1p25-arg1 <= 0)], 53[(2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2p27 > 0 /\ -arg1+arg2p27 <= 0 /\ -1+arg1p27 > 0 /\ 1+arg3p27 > 0)], 57[(-arg3p17+arg3 <= 0 /\ arg3 > 0 /\ arg1+arg4p17-arg1p17-arg4 <= 0 /\ -2+arg1 > 0 /\ arg1p17 > 0 /\ arg2-arg2p17 <= 0 /\ arg2-arg2p17 >= 0 /\ arg2 > 0 /\ arg1-arg1p17 <= 0 /\ -2+arg1-arg4 >= 0 /\ arg2p17 > 0 /\ 1+arg3p17 > 0 /\ -2-arg5+arg2 >= 0)]
	
	Blocked

	[{}, {0[T]}, {}, {}, {}, {}, {}, {57[T]}]

Refute

	Counterexample

	[ arg1=0 arg2=0 arg3=0 arg4=0 arg5=0 ] 30 [ arg1=5 arg2=7 arg3=3 arg4=1 arg5=0 ] 31 [ arg1=10 arg2=6 arg3=5 arg4=0 arg5=0 ] 35 [ arg1=10 arg2=6 arg3=5 arg4=0 arg5=0 ] 40 [ arg1=7 arg2=1 arg3=5 arg4=0 arg5=0 ] 52 [ arg1=3 arg2=7 arg3=1 arg4=0 arg5=5 ] 53 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 ] 57
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
