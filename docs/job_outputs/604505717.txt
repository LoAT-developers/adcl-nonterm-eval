WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f672_0_main_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ -arg3P0 == 0 /\ 2-arg5P0 == 0 /\ -1+arg2P0 > 0), cost: 1
   1: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (1+x160 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ -arg4P1+arg4 == 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ 1+arg5-arg5P1 == 0 /\ arg4 > 0 /\ 1-arg3P1+arg3 == 0 /\ arg2-arg1P1 >= 0 /\ arg1 > 0 /\ -1+x60 > 0 /\ -arg1P1+arg1 >= 0 /\ arg4-arg3 > 0 /\ arg5-x60 < 0), cost: 1
   2: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (1+x270 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ -3+arg2P2 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ -arg2+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg1 > 0 /\ arg1P2-arg1 <= 0 /\ -1+x170 > 0 /\ arg4-arg3 > 0 /\ arg5-x170 < 0 /\ 1+arg5-arg5P2 == 0 /\ arg4-arg4P2 == 0 /\ 1-arg3P2+arg3 == 0), cost: 1
   3: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (arg5-x280 < 0 /\ arg4-arg4P3 == 0 /\ arg1P3 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -1+x280 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ 1-arg3P3+arg3 == 0 /\ arg4-arg3 > 0 /\ arg1P3-arg2 <= 0 /\ 1-arg5P3+arg5 == 0 /\ 1+x380 > 0 /\ arg1P3-arg1 <= 0), cost: 1
   4: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg2 > 0 /\ 1+arg5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg1P4-arg1 <= 0 /\ arg4 > 0 /\ 1+x490 > 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg1 > 0 /\ arg5-x390 < 0 /\ arg4-arg3 > 0 /\ -1+x390 > 0 /\ 1+arg5-arg5P4 == 0 /\ -arg4P4+arg4 == 0 /\ -2+arg2P4 > 0 /\ 1-arg3P4+arg3 == 0), cost: 1
   5: f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (-arg2+arg1P5 <= 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0 /\ -1+x500 > 0 /\ -arg3P5+arg6 == 0 /\ arg5-x500 < 0), cost: 1
   6: f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1P6 <= 0 /\ 4+arg3P6-arg1 <= 0 /\ arg2-arg2P6 == 0 /\ arg1P6 > 0 /\ -arg2+arg3 < 0), cost: 1
   7: f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg1P7 > 0 /\ arg2-arg2P7 == 0 /\ 2-arg1+arg1P7 <= 0 /\ 4+arg3P7-arg1 <= 0 /\ -arg2+arg3 >= 0), cost: 1
   8: __init -> f1_0_main_Load : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ -arg3P0 == 0 /\ 2-arg5P0 == 0 /\ -1+arg2P0 > 0), cost: 1
New rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1

Applied preprocessing
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (1+x160 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ -arg4P1+arg4 == 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ 1+arg5-arg5P1 == 0 /\ arg4 > 0 /\ 1-arg3P1+arg3 == 0 /\ arg2-arg1P1 >= 0 /\ arg1 > 0 /\ -1+x60 > 0 /\ -arg1P1+arg1 >= 0 /\ arg4-arg3 > 0 /\ arg5-x60 < 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=1+arg3, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (1+x270 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ -3+arg2P2 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ -arg2+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg1 > 0 /\ arg1P2-arg1 <= 0 /\ -1+x170 > 0 /\ arg4-arg3 > 0 /\ arg5-x170 < 0 /\ 1+arg5-arg5P2 == 0 /\ arg4-arg4P2 == 0 /\ 1-arg3P2+arg3 == 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=1+arg3, (1+arg5 > 0 /\ -3+arg2P2 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ -arg2+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg1P2-arg1 <= 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (arg5-x280 < 0 /\ arg4-arg4P3 == 0 /\ arg1P3 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -1+x280 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ 1-arg3P3+arg3 == 0 /\ arg4-arg3 > 0 /\ arg1P3-arg2 <= 0 /\ 1-arg5P3+arg5 == 0 /\ 1+x380 > 0 /\ arg1P3-arg1 <= 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=1+arg3, (arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg4-arg3 > 0 /\ arg1P3-arg2 <= 0 /\ arg1P3-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg2 > 0 /\ 1+arg5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg1P4-arg1 <= 0 /\ arg4 > 0 /\ 1+x490 > 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg1 > 0 /\ arg5-x390 < 0 /\ arg4-arg3 > 0 /\ -1+x390 > 0 /\ 1+arg5-arg5P4 == 0 /\ -arg4P4+arg4 == 0 /\ -2+arg2P4 > 0 /\ 1-arg3P4+arg3 == 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=1+arg3, (1+arg5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg1P4-arg1 <= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg4-arg3 > 0 /\ -2+arg2P4 > 0), cost: 1

Applied preprocessing
Original rule:
f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (-arg2+arg1P5 <= 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0 /\ -1+x500 > 0 /\ -arg3P5+arg6 == 0 /\ arg5-x500 < 0), cost: 1
New rule:
f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg6, (-arg2+arg1P5 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ 2-arg1+arg1P6 <= 0 /\ 4+arg3P6-arg1 <= 0 /\ arg2-arg2P6 == 0 /\ arg1P6 > 0 /\ -arg2+arg3 < 0), cost: 1
New rule:
f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ 2-arg1+arg1P6 <= 0 /\ arg2-arg3 > 0 /\ 4+arg3P6-arg1 <= 0 /\ arg1P6 > 0), cost: 1

Applied preprocessing
Original rule:
f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg1P7 > 0 /\ arg2-arg2P7 == 0 /\ 2-arg1+arg1P7 <= 0 /\ 4+arg3P7-arg1 <= 0 /\ -arg2+arg3 >= 0), cost: 1
New rule:
f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ arg1P7 > 0 /\ 2-arg1+arg1P7 <= 0 /\ 4+arg3P7-arg1 <= 0 /\ -arg2+arg3 >= 0), cost: 1

Simplified rules
Start location: __init
   9: f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1
  10: f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=1+arg3, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ arg4-arg3 > 0), cost: 1
  11: f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=1+arg3, (1+arg5 > 0 /\ -3+arg2P2 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ -arg2+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg1P2-arg1 <= 0 /\ arg4-arg3 > 0), cost: 1
  12: f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=1+arg3, (arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg4-arg3 > 0 /\ arg1P3-arg2 <= 0 /\ arg1P3-arg1 <= 0), cost: 1
  13: f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=1+arg3, (1+arg5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg1P4-arg1 <= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg4-arg3 > 0 /\ -2+arg2P4 > 0), cost: 1
  14: f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg6, (-arg2+arg1P5 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0), cost: 1
  15: f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ 2-arg1+arg1P6 <= 0 /\ arg2-arg3 > 0 /\ 4+arg3P6-arg1 <= 0 /\ arg1P6 > 0), cost: 1
  16: f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ arg1P7 > 0 /\ 2-arg1+arg1P7 <= 0 /\ 4+arg3P7-arg1 <= 0 /\ -arg2+arg3 >= 0), cost: 1
   8: __init -> f1_0_main_Load : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, TRUE, cost: 1


Applied acceleration
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=1+arg3, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=n+arg5, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=n+arg3, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ arg4 > 0 /\ 1-n+arg4-arg3 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hHjaIK.txt

Applied instantiation
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=n+arg5, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=n+arg3, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ arg4 > 0 /\ 1-n+arg4-arg3 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0 /\ -1+n >= 0), cost: n
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg4, (1 > 0 /\ 1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0), cost: arg4-arg3

Applied acceleration
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=1+arg3, (1+arg5 > 0 /\ -3+arg2P2 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ -arg2+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg1P2-arg1 <= 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+n0, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=n0+arg3, (-2+arg2P2-arg6P2 >= 0 /\ -1+n0 >= 0 /\ 1+arg5 > 0 /\ arg2-arg1P2 >= 0 /\ -3+arg2P2 > 0 /\ -2+arg2-arg6 >= 0 /\ arg4 > 0 /\ arg1P2 > 0 /\ arg2P2-arg1P2 >= 0 /\ 1+arg4-n0-arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PhkbDN.txt

Applied instantiation
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+n0, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=n0+arg3, (-2+arg2P2-arg6P2 >= 0 /\ -1+n0 >= 0 /\ 1+arg5 > 0 /\ arg2-arg1P2 >= 0 /\ -3+arg2P2 > 0 /\ -2+arg2-arg6 >= 0 /\ arg4 > 0 /\ arg1P2 > 0 /\ arg2P2-arg1P2 >= 0 /\ 1+arg4-n0-arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: n0
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg4, (-2+arg2P2-arg6P2 >= 0 /\ 1 > 0 /\ 1+arg5 > 0 /\ arg2-arg1P2 >= 0 /\ -3+arg2P2 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P2 > 0 /\ arg2P2-arg1P2 >= 0 /\ -arg1P2+arg1 >= 0), cost: arg4-arg3

Applied acceleration
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=1+arg3, (arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg4-arg3 > 0 /\ arg1P3-arg2 <= 0 /\ arg1P3-arg1 <= 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+n1, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=n1+arg3, (-2-arg6P3+arg2P3 >= 0 /\ arg1P3 > 0 /\ 1+arg4-n1-arg3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -2+arg2-arg6 >= 0 /\ arg4 > 0 /\ -arg1P3+arg1 >= 0 /\ -1+n1 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ -arg1P3+arg2 >= 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_beDaBp.txt

Applied instantiation
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+n1, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=n1+arg3, (-2-arg6P3+arg2P3 >= 0 /\ arg1P3 > 0 /\ 1+arg4-n1-arg3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -2+arg2-arg6 >= 0 /\ arg4 > 0 /\ -arg1P3+arg1 >= 0 /\ -1+n1 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ -arg1P3+arg2 >= 0), cost: n1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg4, (-2-arg6P3+arg2P3 >= 0 /\ 1 > 0 /\ arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ -arg1P3+arg1 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ -arg1P3+arg2 >= 0), cost: arg4-arg3

Applied acceleration
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=1+arg5, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=1+arg3, (1+arg5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg1P4-arg1 <= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg4-arg3 > 0 /\ -2+arg2P4 > 0), cost: 1
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+n2, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3+n2, (-1+n2 >= 0 /\ -arg1P4+arg1 >= 0 /\ 1+arg5 > 0 /\ 1+arg4-arg3-n2 > 0 /\ -2+arg2-arg6 >= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ arg2P4-arg1P4 >= 0 /\ arg2-arg1P4 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_baDBdo.txt

Applied instantiation
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+n2, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3+n2, (-1+n2 >= 0 /\ -arg1P4+arg1 >= 0 /\ 1+arg5 > 0 /\ 1+arg4-arg3-n2 > 0 /\ -2+arg2-arg6 >= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ arg2P4-arg1P4 >= 0 /\ arg2-arg1P4 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: n2
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg4, (1 > 0 /\ -arg1P4+arg1 >= 0 /\ 1+arg5 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ arg2P4-arg1P4 >= 0 /\ arg2-arg1P4 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: arg4-arg3

Applied simplification
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg4, (1 > 0 /\ 1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0), cost: arg4-arg3
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg4, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0), cost: arg4-arg3

Applied simplification
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg4, (-2+arg2P2-arg6P2 >= 0 /\ 1 > 0 /\ 1+arg5 > 0 /\ arg2-arg1P2 >= 0 /\ -3+arg2P2 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P2 > 0 /\ arg2P2-arg1P2 >= 0 /\ -arg1P2+arg1 >= 0), cost: arg4-arg3
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg4, (-2+arg2P2-arg6P2 >= 0 /\ 1+arg5 > 0 /\ arg2-arg1P2 >= 0 /\ -3+arg2P2 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P2 > 0 /\ arg2P2-arg1P2 >= 0 /\ -arg1P2+arg1 >= 0), cost: arg4-arg3

Applied simplification
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg4, (-2-arg6P3+arg2P3 >= 0 /\ 1 > 0 /\ arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ -arg1P3+arg1 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ -arg1P3+arg2 >= 0), cost: arg4-arg3
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg4, (-2-arg6P3+arg2P3 >= 0 /\ arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ -arg1P3+arg1 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ -arg1P3+arg2 >= 0), cost: arg4-arg3

Applied simplification
Original rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg4, (1 > 0 /\ -arg1P4+arg1 >= 0 /\ 1+arg5 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ arg2P4-arg1P4 >= 0 /\ arg2-arg1P4 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: arg4-arg3
New rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg4, (-arg1P4+arg1 >= 0 /\ 1+arg5 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ arg2P4-arg1P4 >= 0 /\ arg2-arg1P4 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: arg4-arg3

Applied deletion
Removed the following rules: 10 11 12 13

Accelerated simple loops
Start location: __init
   9: f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1
  14: f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg6, (-arg2+arg1P5 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0), cost: 1
  21: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg4, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0), cost: arg4-arg3
  22: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg4, (-2+arg2P2-arg6P2 >= 0 /\ 1+arg5 > 0 /\ arg2-arg1P2 >= 0 /\ -3+arg2P2 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P2 > 0 /\ arg2P2-arg1P2 >= 0 /\ -arg1P2+arg1 >= 0), cost: arg4-arg3
  23: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg4, (-2-arg6P3+arg2P3 >= 0 /\ arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ -arg1P3+arg1 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ -arg1P3+arg2 >= 0), cost: arg4-arg3
  24: f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg4, (-arg1P4+arg1 >= 0 /\ 1+arg5 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ arg2P4-arg1P4 >= 0 /\ arg2-arg1P4 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: arg4-arg3
  15: f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ 2-arg1+arg1P6 <= 0 /\ arg2-arg3 > 0 /\ 4+arg3P6-arg1 <= 0 /\ arg1P6 > 0), cost: 1
  16: f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ arg1P7 > 0 /\ 2-arg1+arg1P7 <= 0 /\ 4+arg3P7-arg1 <= 0 /\ -arg2+arg3 >= 0), cost: 1
   8: __init -> f1_0_main_Load : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1
Second rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg4, (1+arg5 > 0 /\ -3+arg2P1 > 0 /\ -2+arg2-arg6 >= 0 /\ arg1P1 > 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg2-arg1P1 >= 0 /\ -arg1P1+arg1 >= 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0), cost: arg4-arg3
New rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P1, arg4'=arg4P0, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg4P0, (-3+arg2P1 > 0 /\ arg1P1 > 0 /\ -1+arg2 > 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0 /\ -1+arg4P0 >= 0 /\ arg1P1-arg1 <= 0), cost: 1+arg4P0

Applied chaining
First rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1
Second rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg4, (-2+arg2P2-arg6P2 >= 0 /\ 1+arg5 > 0 /\ arg2-arg1P2 >= 0 /\ -3+arg2P2 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P2 > 0 /\ arg2P2-arg1P2 >= 0 /\ -arg1P2+arg1 >= 0), cost: arg4-arg3
New rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P2, arg4'=arg4P0, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg4P0, (-2+arg2P2-arg6P2 >= 0 /\ -3+arg2P2 > 0 /\ arg1P2 > 0 /\ arg1P2-arg1 <= 0 /\ -1+arg2 > 0 /\ arg2P2-arg1P2 >= 0 /\ -1+arg4P0 >= 0), cost: 1+arg4P0

Applied chaining
First rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1
Second rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg4, (-2-arg6P3+arg2P3 >= 0 /\ arg1P3 > 0 /\ 1+arg5 > 0 /\ -2+arg2P3 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ -arg1P3+arg1 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ -arg1P3+arg2 >= 0), cost: arg4-arg3
New rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P3, arg4'=arg4P0, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg4P0, (-2-arg6P3+arg2P3 >= 0 /\ arg1P3 > 0 /\ -2+arg2P3 > 0 /\ -1+arg2 > 0 /\ -1+arg4P0 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ arg1P3-arg1 <= 0), cost: 1+arg4P0

Applied chaining
First rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1
Second rule:
f672_0_main_GE -> f672_0_main_GE : arg5'=arg5+arg4-arg3, arg2'=arg2P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg4, (-arg1P4+arg1 >= 0 /\ 1+arg5 > 0 /\ -2+arg2-arg6 >= 0 /\ -1+arg4-arg3 >= 0 /\ arg4 > 0 /\ arg1P4 > 0 /\ arg2P4-arg1P4 >= 0 /\ arg2-arg1P4 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: arg4-arg3
New rule:
f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P4, arg4'=arg4P0, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg4P0, (arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -1+arg2 > 0 /\ arg2P4-arg1P4 >= 0 /\ -1+arg4P0 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: 1+arg4P0

Applied deletion
Removed the following rules: 21 22 23 24

Applied chaining
First rule:
f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg6, (-arg2+arg1P5 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ 2-arg1+arg1P6 <= 0 /\ arg2-arg3 > 0 /\ 4+arg3P6-arg1 <= 0 /\ arg1P6 > 0), cost: 1
New rule:
f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P6, arg2'=arg2P5, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (1+arg5 > 0 /\ 4-arg2+arg3P6 <= 0 /\ arg2P5-arg6 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg4-arg3 > 0 /\ arg1P6 > 0), cost: 2

Applied chaining
First rule:
f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg6, (-arg2+arg1P5 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f765_0_insert_GT -> f765_0_insert_GT : arg5'=arg5P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ arg1P7 > 0 /\ 2-arg1+arg1P7 <= 0 /\ 4+arg3P7-arg1 <= 0 /\ -arg2+arg3 >= 0), cost: 1
New rule:
f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P7, arg2'=arg2P5, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg2+arg1P7 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ -arg2P5+arg6 >= 0 /\ arg1 > 0 /\ arg1P7 > 0 /\ arg4-arg3 > 0 /\ 4-arg2+arg3P7 <= 0), cost: 2

Applied deletion
Removed the following rules: 15 16

Chained accelerated rules with incoming rules
Start location: __init
   9: f1_0_main_Load -> f672_0_main_GE : arg5'=2, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=0, (arg1P0-arg1 <= 0 /\ 1+arg4P0 > 0 /\ 1+arg6P0 > 0 /\ arg1P0 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0), cost: 1
  25: f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P1, arg4'=arg4P0, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg4P0, (-3+arg2P1 > 0 /\ arg1P1 > 0 /\ -1+arg2 > 0 /\ -2+arg2P1-arg6P1 >= 0 /\ arg2P1-arg1P1 >= 0 /\ -1+arg4P0 >= 0 /\ arg1P1-arg1 <= 0), cost: 1+arg4P0
  26: f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P2, arg4'=arg4P0, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg4P0, (-2+arg2P2-arg6P2 >= 0 /\ -3+arg2P2 > 0 /\ arg1P2 > 0 /\ arg1P2-arg1 <= 0 /\ -1+arg2 > 0 /\ arg2P2-arg1P2 >= 0 /\ -1+arg4P0 >= 0), cost: 1+arg4P0
  27: f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P3, arg4'=arg4P0, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg4P0, (-2-arg6P3+arg2P3 >= 0 /\ arg1P3 > 0 /\ -2+arg2P3 > 0 /\ -1+arg2 > 0 /\ -1+arg4P0 >= 0 /\ -arg1P3+arg2P3 >= 0 /\ arg1P3-arg1 <= 0), cost: 1+arg4P0
  28: f1_0_main_Load -> f672_0_main_GE : arg5'=2+arg4P0, arg2'=arg2P4, arg4'=arg4P0, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg4P0, (arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -1+arg2 > 0 /\ arg2P4-arg1P4 >= 0 /\ -1+arg4P0 >= 0 /\ -2+arg2P4-arg6P4 >= 0 /\ -2+arg2P4 > 0), cost: 1+arg4P0
  14: f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg6, (-arg2+arg1P5 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ arg4-arg3 > 0), cost: 1
  29: f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P6, arg2'=arg2P5, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (1+arg5 > 0 /\ 4-arg2+arg3P6 <= 0 /\ arg2P5-arg6 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg4-arg3 > 0 /\ arg1P6 > 0), cost: 2
  30: f672_0_main_GE -> f765_0_insert_GT : arg5'=arg5P7, arg2'=arg2P5, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (2-arg2+arg1P7 <= 0 /\ 1+arg5 > 0 /\ 1+arg2P5 > 0 /\ 2-arg2+arg6 <= 0 /\ arg4 > 0 /\ -arg2P5+arg6 >= 0 /\ arg1 > 0 /\ arg1P7 > 0 /\ arg4-arg3 > 0 /\ 4-arg2+arg3P7 <= 0), cost: 2
   8: __init -> f1_0_main_Load : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

