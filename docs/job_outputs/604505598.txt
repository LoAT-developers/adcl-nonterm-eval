WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2-arg2P0 == 0 /\ 1+arg2 > 0 /\ arg1-arg1P0 == 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2-5*x160 >= 0 /\ -5-5*x180+arg2 < 0 /\ -4*x170+arg2-arg3P1 == 0 /\ arg2-arg2P1-5*x160 == 0 /\ arg2-arg1P1 == 0 /\ -5+arg2-5*x160 < 0 /\ 1+arg2 > 0 /\ -5*x180+5*arg2-arg4P1-12*x190 == 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ -4+arg2-4*x190 < 0 /\ -4-4*x170+arg2 < 0), cost: 1
   2: f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg2-arg1 < 0 /\ -1+arg1-arg1P2 == 0 /\ 1+arg2-arg1 <= 0 /\ arg3-arg3P2 == 0 /\ -1+arg2+arg1-arg4P2+3*arg3 == 0 /\ arg2-arg2P2 == 0 /\ -1 < 0 /\ 1+arg4 > 0), cost: 1
   3: f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg2-arg2P3 == 0 /\ arg2-arg1 >= 0 /\ -3+arg2+arg1+3*arg3-arg4P3 == 0 /\ arg1-arg1P3 == 0 /\ -1-arg3P3+arg3 == 0 /\ -1 < 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1
   4: f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-arg3P4+arg3 == 0 /\ -2 < 0 /\ arg2-arg1 >= 0 /\ -2+arg2-arg4P4+arg1+3*arg3 == 0 /\ -arg1P4+arg1 == 0 /\ -2+arg2-arg2P4 == 0 /\ -arg2+arg3 < 0 /\ 1+arg4 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2-arg2P0 == 0 /\ 1+arg2 > 0 /\ arg1-arg1P0 == 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f1_0_main_Load\' : arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2-5*x160 >= 0 /\ -5-5*x180+arg2 < 0 /\ -4*x170+arg2-arg3P1 == 0 /\ arg2-arg2P1-5*x160 == 0 /\ arg2-arg1P1 == 0 /\ -5+arg2-5*x160 < 0 /\ 1+arg2 > 0 /\ -5*x180+5*arg2-arg4P1-12*x190 == 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ -4+arg2-4*x190 < 0 /\ -4-4*x170+arg2 < 0), cost: 1
New rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-5*x180+5*arg2-12*x190, arg1'=arg2, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1

Applied preprocessing
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg2-arg1 < 0 /\ -1+arg1-arg1P2 == 0 /\ 1+arg2-arg1 <= 0 /\ arg3-arg3P2 == 0 /\ -1+arg2+arg1-arg4P2+3*arg3 == 0 /\ arg2-arg2P2 == 0 /\ -1 < 0 /\ 1+arg4 > 0), cost: 1
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-1+arg2+arg1+3*arg3, arg1'=-1+arg1, (1+arg2-arg1 <= 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg2-arg2P3 == 0 /\ arg2-arg1 >= 0 /\ -3+arg2+arg1+3*arg3-arg4P3 == 0 /\ arg1-arg1P3 == 0 /\ -1-arg3P3+arg3 == 0 /\ -1 < 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+arg2+arg1+3*arg3, arg3'=-1+arg3, (arg2-arg1 >= 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-arg3P4+arg3 == 0 /\ -2 < 0 /\ arg2-arg1 >= 0 /\ -2+arg2-arg4P4+arg1+3*arg3 == 0 /\ -arg1P4+arg1 == 0 /\ -2+arg2-arg2P4 == 0 /\ -arg2+arg3 < 0 /\ 1+arg4 > 0), cost: 1
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg2'=-2+arg2, arg4'=-2+arg2+arg1+3*arg3, (arg2-arg1 >= 0 /\ arg2-arg3 > 0 /\ 1+arg4 > 0), cost: 1

Simplified rules
Start location: __init
   6: f1_0_main_Load -> f1_0_main_Load\' : arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-5*x180+5*arg2-12*x190, arg1'=arg2, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1
   8: f474_0_rec_GE -> f474_0_rec_GE : arg4'=-1+arg2+arg1+3*arg3, arg1'=-1+arg1, (1+arg2-arg1 <= 0 /\ 1+arg4 > 0), cost: 1
   9: f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+arg2+arg1+3*arg3, arg3'=-1+arg3, (arg2-arg1 >= 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1
  10: f474_0_rec_GE -> f474_0_rec_GE : arg2'=-2+arg2, arg4'=-2+arg2+arg1+3*arg3, (arg2-arg1 >= 0 /\ arg2-arg3 > 0 /\ 1+arg4 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied acceleration
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-1+arg2+arg1+3*arg3, arg1'=-1+arg1, (1+arg2-arg1 <= 0 /\ 1+arg4 > 0), cost: 1
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=arg2+arg1-n+3*arg3, arg1'=arg1-n, (2+arg2+arg1-n+3*arg3 > 0 /\ -arg2+arg1-n >= 0 /\ -1+n >= 0 /\ 1+arg4 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iPcBJD.txt

Applied instantiation
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=arg2+arg1-n+3*arg3, arg1'=arg1-n, (2+arg2+arg1-n+3*arg3 > 0 /\ -arg2+arg1-n >= 0 /\ -1+n >= 0 /\ 1+arg4 > 0), cost: n
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-1, arg1'=-1-arg2-3*arg3, (arg2+arg1+3*arg3 >= 0 /\ 1 > 0 /\ -1-2*arg2-3*arg3 >= 0 /\ 1+arg4 > 0), cost: 1+arg2+arg1+3*arg3

Applied instantiation
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=arg2+arg1-n+3*arg3, arg1'=arg1-n, (2+arg2+arg1-n+3*arg3 > 0 /\ -arg2+arg1-n >= 0 /\ -1+n >= 0 /\ 1+arg4 > 0), cost: n
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=2*arg2+3*arg3, arg1'=arg2, (0 >= 0 /\ -1-arg2+arg1 >= 0 /\ 2+2*arg2+3*arg3 > 0 /\ 1+arg4 > 0), cost: -arg2+arg1

Applied acceleration
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+arg2+arg1+3*arg3, arg3'=-1+arg3, (arg2-arg1 >= 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3*n0+arg2+arg1+3*arg3, arg3'=-n0+arg3, (1-n0-arg2+arg3 >= 0 /\ arg2-arg1 >= 0 /\ 4-3*n0+arg2+arg1+3*arg3 > 0 /\ 1+arg4 > 0 /\ -1+n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_acdCfG.txt

Applied instantiation
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3*n0+arg2+arg1+3*arg3, arg3'=-n0+arg3, (1-n0-arg2+arg3 >= 0 /\ arg2-arg1 >= 0 /\ 4-3*n0+arg2+arg1+3*arg3 > 0 /\ 1+arg4 > 0 /\ -1+n0 >= 0), cost: n0
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+4*arg2+arg1, arg3'=-1+arg2, (0 >= 0 /\ arg2-arg1 >= 0 /\ 1+4*arg2+arg1 > 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1-arg2+arg3

Applied acceleration
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg2'=-2+arg2, arg4'=-2+arg2+arg1+3*arg3, (arg2-arg1 >= 0 /\ arg2-arg3 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2-2*n1, arg4'=arg2-2*n1+arg1+3*arg3, (2+arg2-2*n1-arg3 > 0 /\ -1+n1 >= 0 /\ 2+arg2-2*n1-arg1 >= 0 /\ 3+arg2-2*n1+arg1+3*arg3 > 0 /\ 1+arg4 > 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_kcngKd.txt

Applied simplification
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-1, arg1'=-1-arg2-3*arg3, (arg2+arg1+3*arg3 >= 0 /\ 1 > 0 /\ -1-2*arg2-3*arg3 >= 0 /\ 1+arg4 > 0), cost: 1+arg2+arg1+3*arg3
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-1, arg1'=-1-arg2-3*arg3, (arg2+arg1+3*arg3 >= 0 /\ -1-2*arg2-3*arg3 >= 0 /\ 1+arg4 > 0), cost: 1+arg2+arg1+3*arg3

Applied simplification
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=2*arg2+3*arg3, arg1'=arg2, (0 >= 0 /\ -1-arg2+arg1 >= 0 /\ 2+2*arg2+3*arg3 > 0 /\ 1+arg4 > 0), cost: -arg2+arg1
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=2*arg2+3*arg3, arg1'=arg2, (-1-arg2+arg1 >= 0 /\ 2+2*arg2+3*arg3 > 0 /\ 1+arg4 > 0), cost: -arg2+arg1

Applied simplification
Original rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+4*arg2+arg1, arg3'=-1+arg2, (0 >= 0 /\ arg2-arg1 >= 0 /\ 1+4*arg2+arg1 > 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1-arg2+arg3
New rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+4*arg2+arg1, arg3'=-1+arg2, (arg2-arg1 >= 0 /\ 1+4*arg2+arg1 > 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1-arg2+arg3

Applied deletion
Removed the following rules: 8 9 10

Accelerated simple loops
Start location: __init
   6: f1_0_main_Load -> f1_0_main_Load\' : arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-5*x180+5*arg2-12*x190, arg1'=arg2, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1
  14: f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2-2*n1, arg4'=arg2-2*n1+arg1+3*arg3, (2+arg2-2*n1-arg3 > 0 /\ -1+n1 >= 0 /\ 2+arg2-2*n1-arg1 >= 0 /\ 3+arg2-2*n1+arg1+3*arg3 > 0 /\ 1+arg4 > 0), cost: n1
  15: f474_0_rec_GE -> f474_0_rec_GE : arg4'=-1, arg1'=-1-arg2-3*arg3, (arg2+arg1+3*arg3 >= 0 /\ -1-2*arg2-3*arg3 >= 0 /\ 1+arg4 > 0), cost: 1+arg2+arg1+3*arg3
  16: f474_0_rec_GE -> f474_0_rec_GE : arg4'=2*arg2+3*arg3, arg1'=arg2, (-1-arg2+arg1 >= 0 /\ 2+2*arg2+3*arg3 > 0 /\ 1+arg4 > 0), cost: -arg2+arg1
  17: f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+4*arg2+arg1, arg3'=-1+arg2, (arg2-arg1 >= 0 /\ 1+4*arg2+arg1 > 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1-arg2+arg3
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-5*x180+5*arg2-12*x190, arg1'=arg2, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1
Second rule:
f474_0_rec_GE -> f474_0_rec_GE : arg2'=arg2-2*n1, arg4'=arg2-2*n1+arg1+3*arg3, (2+arg2-2*n1-arg3 > 0 /\ -1+n1 >= 0 /\ 2+arg2-2*n1-arg1 >= 0 /\ 3+arg2-2*n1+arg1+3*arg3 > 0 /\ 1+arg4 > 0), cost: n1
New rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-2*n1-5*x160, arg4'=-12*x170+5*arg2-2*n1-5*x160, arg1'=arg2, arg3'=-4*x170+arg2, (2-2*n1-5*x160 >= 0 /\ -1+n1 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 2+4*x170-2*n1-5*x160 > 0 /\ 5-arg2+5*x160 > 0), cost: 1+n1

Applied chaining
First rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-5*x180+5*arg2-12*x190, arg1'=arg2, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1
Second rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=2*arg2+3*arg3, arg1'=arg2, (-1-arg2+arg1 >= 0 /\ 2+2*arg2+3*arg3 > 0 /\ 1+arg4 > 0), cost: -arg2+arg1
New rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-12*x170+5*arg2-10*x160, arg1'=arg2-5*x160, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ -1+x160 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1+5*x160

Applied chaining
First rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-5*x180+5*arg2-12*x190, arg1'=arg2, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1
Second rule:
f474_0_rec_GE -> f474_0_rec_GE : arg4'=-3+4*arg2+arg1, arg3'=-1+arg2, (arg2-arg1 >= 0 /\ 1+4*arg2+arg1 > 0 /\ -arg2+arg3 >= 0 /\ 1+arg4 > 0), cost: 1-arg2+arg3
New rule:
f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-3+5*arg2-20*x160, arg1'=arg2, arg3'=-1+arg2-5*x160, (1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ x160 <= 0 /\ -4*x170+5*x160 >= 0), cost: 2-4*x170+5*x160

Applied deletion
Removed the following rules: 14 15 16 17

Chained accelerated rules with incoming rules
Start location: __init
   6: f1_0_main_Load -> f1_0_main_Load\' : arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-5*x180+5*arg2-12*x190, arg1'=arg2, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1
  18: f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-2*n1-5*x160, arg4'=-12*x170+5*arg2-2*n1-5*x160, arg1'=arg2, arg3'=-4*x170+arg2, (2-2*n1-5*x160 >= 0 /\ -1+n1 >= 0 /\ 1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 2+4*x170-2*n1-5*x160 > 0 /\ 5-arg2+5*x160 > 0), cost: 1+n1
  19: f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-12*x170+5*arg2-10*x160, arg1'=arg2-5*x160, arg3'=-4*x170+arg2, (arg2-5*x160 >= 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ -1+x160 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ -4*x170+arg2 >= 0 /\ 5-arg2+5*x160 > 0), cost: 1+5*x160
  20: f1_0_main_Load\' -> f474_0_rec_GE : arg2'=arg2-5*x160, arg4'=-3+5*arg2-20*x160, arg1'=arg2, arg3'=-1+arg2-5*x160, (1+arg2 > 0 /\ 4-arg2+4*x190 > 0 /\ 4+4*x170-arg2 > 0 /\ -5*x180+arg2 >= 0 /\ arg1 > 0 /\ 5+5*x180-arg2 > 0 /\ arg2-4*x190 >= 0 /\ x160 <= 0 /\ -4*x170+5*x160 >= 0), cost: 2-4*x170+5*x160
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

