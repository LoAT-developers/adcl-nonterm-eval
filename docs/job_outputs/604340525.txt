YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l11, not((main_x > 0))>
<l2, l3, (main_x > 0)>
<l3, l11, not((main_y > 0))>
<l3, l4, (main_y > 0)>
<l4, l5, true, seq{main_random -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l5, l6, (main_random < 42)>
<l5, l8, not((main_random < 42))>
<l6, l7, true, seq{main_x -> (main_x - 1), main_random -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> main_random}>
<l7, l10, true>
<l8, l9, true, seq{main_y -> (main_y - 1)}>
<l9, l10, true>
<l10, l2, true>
<l11, l12, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l13, true, seq{main__func_return_ -> 0}>
<l13, l14, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l14, l15, true, seq{main_x -> varCall_1}>
<l15, l16, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l16, l1, true, seq{main_y -> varCall_2}>
<l1, l2, true>
<l2, l3, (main_x > 0)>
<l2, l11, not((main_x > 0))>
<l3, l4, (main_y > 0)>
<l3, l11, not((main_y > 0))>
<l4, l17, true, seq{varCall_3 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l17, l5, true, seq{main_random -> varCall_3}>
<l5, l6, (main_random < 42)>
<l5, l8, not((main_random < 42))>
<l6, l18, true, seq{main_x -> (main_x - 1)}>
<l18, l19, true, seq{varCall_4 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l19, l7, true, seq{main_random -> varCall_4, main_y -> main_random}>
<l7, l10, true>
<l8, l9, true, seq{main_y -> (main_y - 1)}>
<l9, l10, true>
<l10, l2, true>
<l11, l12, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
12, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1> | <line: 9, col: 9> <line: 10, col: 9> <line: 13, col: 18> <line: 16, col: 22>
main | function | [integer, ()] | <line: 5, col: 1>
x | local variable | integer | <line: 6, col: 5> | <line: 9, col: 5> <line: 12, col: 12> <line: 15, col: 13> <line: 15, col: 17>
y | local variable | integer | <line: 7, col: 5> | <line: 10, col: 5> <line: 12, col: 21> <line: 17, col: 13> <line: 19, col: 13> <line: 19, col: 17>
random | local variable | integer | <line: 8, col: 5> | <line: 13, col: 9> <line: 14, col: 13> <line: 16, col: 13> <line: 17, col: 17>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef5) /\ (main_y = undef6)>
<l2, l2, (main_x > 0) /\ (main_y > 0) /\ (undef7 < 42), par{main_x -> (main_x - 1), main_y -> undef8}>
<l2, l2, (main_x > 0) /\ (main_y > 0) /\ not((undef7 < 42)), par{main_y -> (main_y - 1)}>
<l2, l12, (main_x > 0) /\ not((main_y > 0))>
<l2, l12, not((main_x > 0))>

Fresh variables:
undef5, undef6, undef7, undef8, 

Undef variables:
undef5, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:
12, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= main_x /\ 1 <= main_y /\ undef7 <= 41, {main_x -> -1 + main_x, main_y -> undef8, rest remain the same}>
<l2, l2, 42 <= undef7 /\ 1 <= main_x /\ 1 <= main_y, {main_y -> -1 + main_y, rest remain the same}>
Variables:
main_x, main_y

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef5 /\ main_y = undef6, {all remain the same}>

Graph 2
<l2, l12, main_y <= 0 /\ 1 <= main_x, {all remain the same}>
<l2, l12, main_x <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 12 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002577

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000896s
[33mRanking function: [36m-1 + main_x[0m
New Graphs: 
Transitions:
<l2, l2, 42 <= undef7 /\ 1 <= main_x /\ 1 <= main_y, {main_y -> -1 + main_y, rest remain the same}>
Variables:
main_x, main_y
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000452s
[33mRanking function: [36m-1 + main_y[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l12}...
No cycles found.

[32mProgram Terminates[0m
