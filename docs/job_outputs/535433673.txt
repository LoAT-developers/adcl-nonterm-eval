NO

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f43_0_loop_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   1: f43_0_loop_InvokeMethod -> f43_0_loop_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, TRUE, cost: 1
   2: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied nonterm
Original rule:
f43_0_loop_InvokeMethod -> f43_0_loop_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, TRUE, cost: 1
New rule:
f43_0_loop_InvokeMethod -> [3] : -1+n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_eBkNEK.txt

Applied deletion
Removed the following rules: 1

Accelerated simple loops
Start location: __init
   0: f1_0_main_ConstantStackPush -> f43_0_loop_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   3: f43_0_loop_InvokeMethod -> [3] : -1+n >= 0, cost: NONTERM
   2: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f43_0_loop_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f43_0_loop_InvokeMethod -> [3] : -1+n >= 0, cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : (1+arg2 > 0 /\ arg1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 3

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_ConstantStackPush -> f43_0_loop_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f1_0_main_ConstantStackPush -> [3] : (1+arg2 > 0 /\ arg1 > 0), cost: NONTERM
   2: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
   4: f1_0_main_ConstantStackPush -> [3] : (1+arg2 > 0 /\ arg1 > 0), cost: NONTERM
   2: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> [3] : (1+arg2 > 0 /\ arg1 > 0), cost: NONTERM
New rule:
__init -> [3] : (arg1P2 > 0 /\ 1+arg2P2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 2 4

Eliminated locations on linear paths
Start location: __init
   5: __init -> [3] : (arg1P2 > 0 /\ 1+arg2P2 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 5 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (arg1P2 > 0 /\ 1+arg2P2 > 0)
