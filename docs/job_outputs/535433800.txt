WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P0, arg2'=arg2P0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, arg8'=arg8P0, (-arg6P0 == 0 /\ -arg5P0 == 0 /\ -arg8P0 == 0 /\ -arg7P0 == 0 /\ -arg4P0 == 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0 /\ -arg3P0 == 0 /\ -arg2P0 == 0), cost: 1
   1: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P1, arg2'=arg2P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, arg8'=arg8P1, (-arg5P1 == 0 /\ 1+arg2P1 > 0 /\ 1-arg8P1 == 0 /\ arg1P1 > 0 /\ -arg4P1 == 0 /\ 1-arg7P1 == 0 /\ arg1P1-arg1 <= 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ -arg3P1 == 0 /\ 1-arg6P1 == 0), cost: 1
   2: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P2, arg2'=arg2P2, arg7'=arg7P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, arg8'=arg8P2, (1+arg2P2 > 0 /\ -arg4P2 == 0 /\ 2-arg7P2 == 0 /\ 2-arg8P2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1 > 0 /\ 2-arg6P2 == 0 /\ arg1P2 > 0 /\ 2-arg2 == 0 /\ -arg5P2 == 0), cost: 1
   3: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=arg7P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, arg8'=arg8P3, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 3-arg7P3 == 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ arg2-arg8P3 == 0 /\ arg1 > 0 /\ -arg1P3+arg1 >= 0 /\ arg2-arg6P3 == 0 /\ arg4P3-arg5P3 == 0 /\ 1+arg4P3 > 0), cost: 1
   4: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg5P4, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, arg8'=arg8P4, (-arg4P4+arg4 == 0 /\ -arg3P4 == 0 /\ -arg2P4 == 0 /\ -arg5+arg4 == 0 /\ 2*arg2 >= 0 /\ 2*arg2-arg3 > 0 /\ -arg8P4+arg6 == 0 /\ arg7-arg6 >= 0 /\ arg7-arg7P4 == 0 /\ -arg5P4+arg4 == 0 /\ 1+arg6 > 0 /\ arg1 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg6P4 == 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
   5: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg5P5, arg2'=arg2P5, arg7'=arg7P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, arg8'=arg8P5, (arg1P5-arg1 <= 0 /\ arg1P5 > 0 /\ -arg5+arg4 == 0 /\ 2*arg2 >= 0 /\ arg4+2*arg2P5-arg4P5 == 0 /\ arg4+2*arg2P5 >= 0 /\ arg7-arg6 < 0 /\ -arg6P5+arg6 == 0 /\ 1+arg7-arg6 >= 0 /\ 1-arg7P5+arg7 == 0 /\ 1+arg6 > 0 /\ arg1 > 0 /\ arg6-arg8P5 == 0 /\ 1+arg3 > 0 /\ 2*arg2P5 >= 0 /\ arg4+2*arg2P5-arg5P5 == 0 /\ arg6-arg8 == 0 /\ 1+arg2P5 > 0 /\ 1+arg4 > 0 /\ -arg3P5 == 0 /\ -2*arg2+2*arg2P5+arg3 < 0 /\ 1+arg7 > 0), cost: 1
   6: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg5P6, arg2'=arg2P6, arg7'=arg7P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, arg8'=arg8P6, (2+arg7-arg7P6 == 0 /\ 2*arg2P6-2*arg2-arg3P6+arg3 < 0 /\ 1+arg3P6 > 0 /\ -arg5+arg4 == 0 /\ 2*arg2 >= 0 /\ 1+arg2P6 > 0 /\ 1+arg7-arg6 < 0 /\ 2*arg2P6 >= 0 /\ 2*arg2P6-arg4P6+arg4-arg3P6 == 0 /\ 1+arg6 > 0 /\ -arg8P6+arg6 == 0 /\ 2*arg2P6+arg4 >= 0 /\ arg1 > 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ 2*arg2P6-arg5P6+arg4-arg3P6 == 0 /\ arg6-arg6P6 == 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, arg8'=arg8P7, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P0, arg2'=arg2P0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, arg8'=arg8P0, (-arg6P0 == 0 /\ -arg5P0 == 0 /\ -arg8P0 == 0 /\ -arg7P0 == 0 /\ -arg4P0 == 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0 /\ -arg3P0 == 0 /\ -arg2P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, arg8'=0, (arg2 == 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P1, arg2'=arg2P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, arg8'=arg8P1, (-arg5P1 == 0 /\ 1+arg2P1 > 0 /\ 1-arg8P1 == 0 /\ arg1P1 > 0 /\ -arg4P1 == 0 /\ 1-arg7P1 == 0 /\ arg1P1-arg1 <= 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ -arg3P1 == 0 /\ 1-arg6P1 == 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P1, arg7'=1, arg4'=0, arg1'=arg1P1, arg6'=1, arg3'=0, arg8'=1, (1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 == 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P2, arg2'=arg2P2, arg7'=arg7P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, arg8'=arg8P2, (1+arg2P2 > 0 /\ -arg4P2 == 0 /\ 2-arg7P2 == 0 /\ 2-arg8P2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1 > 0 /\ 2-arg6P2 == 0 /\ arg1P2 > 0 /\ 2-arg2 == 0 /\ -arg5P2 == 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P2, arg7'=2, arg4'=0, arg1'=arg1P2, arg6'=2, arg3'=arg3P2, arg8'=2, (1+arg2P2 > 0 /\ -2+arg2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=arg7P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, arg8'=arg8P3, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 3-arg7P3 == 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ arg2-arg8P3 == 0 /\ arg1 > 0 /\ -arg1P3+arg1 >= 0 /\ arg2-arg6P3 == 0 /\ arg4P3-arg5P3 == 0 /\ 1+arg4P3 > 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1

Applied preprocessing
Original rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg5P4, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, arg8'=arg8P4, (-arg4P4+arg4 == 0 /\ -arg3P4 == 0 /\ -arg2P4 == 0 /\ -arg5+arg4 == 0 /\ 2*arg2 >= 0 /\ 2*arg2-arg3 > 0 /\ -arg8P4+arg6 == 0 /\ arg7-arg6 >= 0 /\ arg7-arg7P4 == 0 /\ -arg5P4+arg4 == 0 /\ 1+arg6 > 0 /\ arg1 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg6P4 == 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
New rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4, arg2'=0, arg1'=arg1P4, arg3'=0, arg8'=arg6, (-arg5+arg4 == 0 /\ 2*arg2-arg3 > 0 /\ arg7-arg6 >= 0 /\ 1+arg6 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg5P5, arg2'=arg2P5, arg7'=arg7P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, arg8'=arg8P5, (arg1P5-arg1 <= 0 /\ arg1P5 > 0 /\ -arg5+arg4 == 0 /\ 2*arg2 >= 0 /\ arg4+2*arg2P5-arg4P5 == 0 /\ arg4+2*arg2P5 >= 0 /\ arg7-arg6 < 0 /\ -arg6P5+arg6 == 0 /\ 1+arg7-arg6 >= 0 /\ 1-arg7P5+arg7 == 0 /\ 1+arg6 > 0 /\ arg1 > 0 /\ arg6-arg8P5 == 0 /\ 1+arg3 > 0 /\ 2*arg2P5 >= 0 /\ arg4+2*arg2P5-arg5P5 == 0 /\ arg6-arg8 == 0 /\ 1+arg2P5 > 0 /\ 1+arg4 > 0 /\ -arg3P5 == 0 /\ -2*arg2+2*arg2P5+arg3 < 0 /\ 1+arg7 > 0), cost: 1
New rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4+2*arg2P5, arg2'=arg2P5, arg7'=1+arg7, arg4'=arg4+2*arg2P5, arg1'=arg1P5, arg3'=0, arg8'=arg6, (arg1P5-arg1 <= 0 /\ arg1P5 > 0 /\ -arg5+arg4 == 0 /\ 1+arg7-arg6 == 0 /\ 1+arg3 > 0 /\ 2*arg2-2*arg2P5-arg3 > 0 /\ arg6-arg8 == 0 /\ 1+arg2P5 > 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1

Applied preprocessing
Original rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg5P6, arg2'=arg2P6, arg7'=arg7P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, arg8'=arg8P6, (2+arg7-arg7P6 == 0 /\ 2*arg2P6-2*arg2-arg3P6+arg3 < 0 /\ 1+arg3P6 > 0 /\ -arg5+arg4 == 0 /\ 2*arg2 >= 0 /\ 1+arg2P6 > 0 /\ 1+arg7-arg6 < 0 /\ 2*arg2P6 >= 0 /\ 2*arg2P6-arg4P6+arg4-arg3P6 == 0 /\ 1+arg6 > 0 /\ -arg8P6+arg6 == 0 /\ 2*arg2P6+arg4 >= 0 /\ arg1 > 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ 2*arg2P6-arg5P6+arg4-arg3P6 == 0 /\ arg6-arg6P6 == 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
New rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=2*arg2P6+arg4-arg3P6, arg2'=arg2P6, arg7'=2+arg7, arg4'=2*arg2P6+arg4-arg3P6, arg1'=arg1P6, arg3'=arg3P6, arg8'=arg6, (1+arg3P6 > 0 /\ arg2 >= 0 /\ -arg5+arg4 == 0 /\ -2*arg2P6+2*arg2+arg3P6-arg3 > 0 /\ 2*arg2P6 >= 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ -1-arg7+arg6 > 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1

Simplified rules
Start location: __init
   8: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, arg8'=0, (arg2 == 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   9: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P1, arg7'=1, arg4'=0, arg1'=arg1P1, arg6'=1, arg3'=0, arg8'=1, (1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
  10: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P2, arg7'=2, arg4'=0, arg1'=arg1P2, arg6'=2, arg3'=arg3P2, arg8'=2, (1+arg2P2 > 0 /\ -2+arg2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0), cost: 1
  11: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1
  12: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4, arg2'=0, arg1'=arg1P4, arg3'=0, arg8'=arg6, (-arg5+arg4 == 0 /\ 2*arg2-arg3 > 0 /\ arg7-arg6 >= 0 /\ 1+arg6 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
  13: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4+2*arg2P5, arg2'=arg2P5, arg7'=1+arg7, arg4'=arg4+2*arg2P5, arg1'=arg1P5, arg3'=0, arg8'=arg6, (arg1P5-arg1 <= 0 /\ arg1P5 > 0 /\ -arg5+arg4 == 0 /\ 1+arg7-arg6 == 0 /\ 1+arg3 > 0 /\ 2*arg2-2*arg2P5-arg3 > 0 /\ arg6-arg8 == 0 /\ 1+arg2P5 > 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
  14: f1184_0_main_LT -> f1184_0_main_LT : arg5'=2*arg2P6+arg4-arg3P6, arg2'=arg2P6, arg7'=2+arg7, arg4'=2*arg2P6+arg4-arg3P6, arg1'=arg1P6, arg3'=arg3P6, arg8'=arg6, (1+arg3P6 > 0 /\ arg2 >= 0 /\ -arg5+arg4 == 0 /\ -2*arg2P6+2*arg2+arg3P6-arg3 > 0 /\ 2*arg2P6 >= 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ -1-arg7+arg6 > 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, arg8'=arg8P7, TRUE, cost: 1


Applied simplification
Original rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=2*arg2P6+arg4-arg3P6, arg2'=arg2P6, arg7'=2+arg7, arg4'=2*arg2P6+arg4-arg3P6, arg1'=arg1P6, arg3'=arg3P6, arg8'=arg6, (1+arg3P6 > 0 /\ arg2 >= 0 /\ -arg5+arg4 == 0 /\ -2*arg2P6+2*arg2+arg3P6-arg3 > 0 /\ 2*arg2P6 >= 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ -1-arg7+arg6 > 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
New rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=2*arg2P6+arg4-arg3P6, arg2'=arg2P6, arg7'=2+arg7, arg4'=2*arg2P6+arg4-arg3P6, arg1'=arg1P6, arg3'=arg3P6, arg8'=arg6, (arg2P6 >= 0 /\ 1+arg3P6 > 0 /\ arg2 >= 0 /\ -arg5+arg4 == 0 /\ -2*arg2P6+2*arg2+arg3P6-arg3 > 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ -1-arg7+arg6 > 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1

Simplified simple loops
Start location: __init
   8: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, arg8'=0, (arg2 == 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   9: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P1, arg7'=1, arg4'=0, arg1'=arg1P1, arg6'=1, arg3'=0, arg8'=1, (1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
  10: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P2, arg7'=2, arg4'=0, arg1'=arg1P2, arg6'=2, arg3'=arg3P2, arg8'=2, (1+arg2P2 > 0 /\ -2+arg2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0), cost: 1
  11: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1
  12: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4, arg2'=0, arg1'=arg1P4, arg3'=0, arg8'=arg6, (-arg5+arg4 == 0 /\ 2*arg2-arg3 > 0 /\ arg7-arg6 >= 0 /\ 1+arg6 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
  13: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4+2*arg2P5, arg2'=arg2P5, arg7'=1+arg7, arg4'=arg4+2*arg2P5, arg1'=arg1P5, arg3'=0, arg8'=arg6, (arg1P5-arg1 <= 0 /\ arg1P5 > 0 /\ -arg5+arg4 == 0 /\ 1+arg7-arg6 == 0 /\ 1+arg3 > 0 /\ 2*arg2-2*arg2P5-arg3 > 0 /\ arg6-arg8 == 0 /\ 1+arg2P5 > 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
  15: f1184_0_main_LT -> f1184_0_main_LT : arg5'=2*arg2P6+arg4-arg3P6, arg2'=arg2P6, arg7'=2+arg7, arg4'=2*arg2P6+arg4-arg3P6, arg1'=arg1P6, arg3'=arg3P6, arg8'=arg6, (arg2P6 >= 0 /\ 1+arg3P6 > 0 /\ arg2 >= 0 /\ -arg5+arg4 == 0 /\ -2*arg2P6+2*arg2+arg3P6-arg3 > 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ -1-arg7+arg6 > 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, arg8'=arg8P7, TRUE, cost: 1


Accelerated simple loops
Start location: __init
   8: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, arg8'=0, (arg2 == 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   9: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P1, arg7'=1, arg4'=0, arg1'=arg1P1, arg6'=1, arg3'=0, arg8'=1, (1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
  10: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P2, arg7'=2, arg4'=0, arg1'=arg1P2, arg6'=2, arg3'=arg3P2, arg8'=2, (1+arg2P2 > 0 /\ -2+arg2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0), cost: 1
  11: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1
  12: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4, arg2'=0, arg1'=arg1P4, arg3'=0, arg8'=arg6, (-arg5+arg4 == 0 /\ 2*arg2-arg3 > 0 /\ arg7-arg6 >= 0 /\ 1+arg6 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
  13: f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4+2*arg2P5, arg2'=arg2P5, arg7'=1+arg7, arg4'=arg4+2*arg2P5, arg1'=arg1P5, arg3'=0, arg8'=arg6, (arg1P5-arg1 <= 0 /\ arg1P5 > 0 /\ -arg5+arg4 == 0 /\ 1+arg7-arg6 == 0 /\ 1+arg3 > 0 /\ 2*arg2-2*arg2P5-arg3 > 0 /\ arg6-arg8 == 0 /\ 1+arg2P5 > 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
  15: f1184_0_main_LT -> f1184_0_main_LT : arg5'=2*arg2P6+arg4-arg3P6, arg2'=arg2P6, arg7'=2+arg7, arg4'=2*arg2P6+arg4-arg3P6, arg1'=arg1P6, arg3'=arg3P6, arg8'=arg6, (arg2P6 >= 0 /\ 1+arg3P6 > 0 /\ arg2 >= 0 /\ -arg5+arg4 == 0 /\ -2*arg2P6+2*arg2+arg3P6-arg3 > 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ -1-arg7+arg6 > 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, arg8'=arg8P7, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P1, arg7'=1, arg4'=0, arg1'=arg1P1, arg6'=1, arg3'=0, arg8'=1, (1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
Second rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4, arg2'=0, arg1'=arg1P4, arg3'=0, arg8'=arg6, (-arg5+arg4 == 0 /\ 2*arg2-arg3 > 0 /\ arg7-arg6 >= 0 /\ 1+arg6 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=1, arg4'=0, arg1'=arg1P4, arg6'=1, arg3'=0, arg8'=1, (2*arg2P1 > 0 /\ arg1P4 > 0 /\ -1+arg2 == 0 /\ -arg1+arg1P4 <= 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P2, arg7'=2, arg4'=0, arg1'=arg1P2, arg6'=2, arg3'=arg3P2, arg8'=2, (1+arg2P2 > 0 /\ -2+arg2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0), cost: 1
Second rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4, arg2'=0, arg1'=arg1P4, arg3'=0, arg8'=arg6, (-arg5+arg4 == 0 /\ 2*arg2-arg3 > 0 /\ arg7-arg6 >= 0 /\ 1+arg6 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=2, arg4'=0, arg1'=arg1P4, arg6'=2, arg3'=0, arg8'=2, (-2+arg2 == 0 /\ arg1P4 > 0 /\ -1+arg2P2 >= 0 /\ -arg1+arg1P4 <= 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1
Second rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4, arg2'=0, arg1'=arg1P4, arg3'=0, arg8'=arg6, (-arg5+arg4 == 0 /\ 2*arg2-arg3 > 0 /\ arg7-arg6 >= 0 /\ 1+arg6 > 0 /\ arg1P4 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P4 <= 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=0, arg7'=3, arg4'=arg5P3, arg1'=arg1P4, arg6'=arg2, arg3'=0, arg8'=arg2, (-3+arg2 == 0 /\ arg1P4 > 0 /\ 1+arg5P3 > 0 /\ -1+arg2P3 >= 0 /\ -arg1+arg1P4 <= 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1
Second rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=arg4+2*arg2P5, arg2'=arg2P5, arg7'=1+arg7, arg4'=arg4+2*arg2P5, arg1'=arg1P5, arg3'=0, arg8'=arg6, (arg1P5-arg1 <= 0 /\ arg1P5 > 0 /\ -arg5+arg4 == 0 /\ 1+arg7-arg6 == 0 /\ 1+arg3 > 0 /\ 2*arg2-2*arg2P5-arg3 > 0 /\ arg6-arg8 == 0 /\ 1+arg2P5 > 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=2*arg2P5+arg5P3, arg2'=arg2P5, arg7'=4, arg4'=2*arg2P5+arg5P3, arg1'=arg1P5, arg6'=arg2, arg3'=0, arg8'=arg2, (arg1P5-arg1 <= 0 /\ -4+arg2 == 0 /\ 1+2*arg2P5-2*arg2P3 <= 0 /\ arg1P5 > 0 /\ 1+arg5P3 > 0 /\ 1+arg2P5 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1
Second rule:
f1184_0_main_LT -> f1184_0_main_LT : arg5'=2*arg2P6+arg4-arg3P6, arg2'=arg2P6, arg7'=2+arg7, arg4'=2*arg2P6+arg4-arg3P6, arg1'=arg1P6, arg3'=arg3P6, arg8'=arg6, (arg2P6 >= 0 /\ 1+arg3P6 > 0 /\ arg2 >= 0 /\ -arg5+arg4 == 0 /\ -2*arg2P6+2*arg2+arg3P6-arg3 > 0 /\ arg1P6 > 0 /\ 1+arg3 > 0 /\ -arg1+arg1P6 <= 0 /\ -1-arg7+arg6 > 0 /\ arg6-arg8 == 0 /\ 1+arg4 > 0 /\ 1+arg7 > 0), cost: 1
New rule:
f1_0_main_Load -> f1184_0_main_LT : arg5'=2*arg2P6-arg3P6+arg5P3, arg2'=arg2P6, arg7'=5, arg4'=2*arg2P6-arg3P6+arg5P3, arg1'=arg1P6, arg6'=arg2, arg3'=arg3P6, arg8'=arg2, (arg2P6 >= 0 /\ -4+arg2 > 0 /\ 1+arg3P6 > 0 /\ arg2P3 >= 0 /\ arg1P6 > 0 /\ -arg1+arg1P6 <= 0 /\ 1+arg5P3 > 0 /\ 1+2*arg2P6-arg3P6-2*arg2P3 <= 0), cost: 2

Applied deletion
Removed the following rules: 12 13 15

Chained accelerated rules with incoming rules
Start location: __init
   8: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, arg8'=0, (arg2 == 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   9: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P1, arg7'=1, arg4'=0, arg1'=arg1P1, arg6'=1, arg3'=0, arg8'=1, (1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
  10: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=arg2P2, arg7'=2, arg4'=0, arg1'=arg1P2, arg6'=2, arg3'=arg3P2, arg8'=2, (1+arg2P2 > 0 /\ -2+arg2 == 0 /\ 1+arg3P2 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0), cost: 1
  11: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=arg2P3, arg7'=3, arg4'=arg5P3, arg1'=arg1P3, arg6'=arg2, arg3'=arg3P3, arg8'=arg2, (1+arg2P3 > 0 /\ arg1P3 > 0 /\ 1+arg3P3 > 0 /\ -2+arg2 > 0 /\ -arg1P3+arg1 >= 0 /\ 1+arg5P3 > 0), cost: 1
  16: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=1, arg4'=0, arg1'=arg1P4, arg6'=1, arg3'=0, arg8'=1, (2*arg2P1 > 0 /\ arg1P4 > 0 /\ -1+arg2 == 0 /\ -arg1+arg1P4 <= 0), cost: 2
  17: f1_0_main_Load -> f1184_0_main_LT : arg5'=0, arg2'=0, arg7'=2, arg4'=0, arg1'=arg1P4, arg6'=2, arg3'=0, arg8'=2, (-2+arg2 == 0 /\ arg1P4 > 0 /\ -1+arg2P2 >= 0 /\ -arg1+arg1P4 <= 0), cost: 2
  18: f1_0_main_Load -> f1184_0_main_LT : arg5'=arg5P3, arg2'=0, arg7'=3, arg4'=arg5P3, arg1'=arg1P4, arg6'=arg2, arg3'=0, arg8'=arg2, (-3+arg2 == 0 /\ arg1P4 > 0 /\ 1+arg5P3 > 0 /\ -1+arg2P3 >= 0 /\ -arg1+arg1P4 <= 0), cost: 2
  19: f1_0_main_Load -> f1184_0_main_LT : arg5'=2*arg2P5+arg5P3, arg2'=arg2P5, arg7'=4, arg4'=2*arg2P5+arg5P3, arg1'=arg1P5, arg6'=arg2, arg3'=0, arg8'=arg2, (arg1P5-arg1 <= 0 /\ -4+arg2 == 0 /\ 1+2*arg2P5-2*arg2P3 <= 0 /\ arg1P5 > 0 /\ 1+arg5P3 > 0 /\ 1+arg2P5 > 0), cost: 2
  20: f1_0_main_Load -> f1184_0_main_LT : arg5'=2*arg2P6-arg3P6+arg5P3, arg2'=arg2P6, arg7'=5, arg4'=2*arg2P6-arg3P6+arg5P3, arg1'=arg1P6, arg6'=arg2, arg3'=arg3P6, arg8'=arg2, (arg2P6 >= 0 /\ -4+arg2 > 0 /\ 1+arg3P6 > 0 /\ arg2P3 >= 0 /\ arg1P6 > 0 /\ -arg1+arg1P6 <= 0 /\ 1+arg5P3 > 0 /\ 1+2*arg2P6-arg3P6-2*arg2P3 <= 0), cost: 2
   7: __init -> f1_0_main_Load : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, arg8'=arg8P7, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

