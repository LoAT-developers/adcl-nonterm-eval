NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1
   1: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-arg3P1 == 0 /\ -3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ arg1 > 0 /\ -3-arg1+arg1P1 <= 0), cost: 1
   2: f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-3-arg2+arg2P2 <= 0 /\ arg3-arg3P2 == 0 /\ arg2 > 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: 1
   3: f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (arg2P3 > 0 /\ arg2 > 0 /\ -arg3 == 0 /\ -arg3P3 == 0 /\ -3+arg1P3-arg1 <= 0 /\ arg2P3-arg2 <= 0 /\ -3-arg2+arg1P3 <= 0 /\ arg1 > 0 /\ -3+arg1P3 > 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1
New rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-arg3P1 == 0 /\ -3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ arg1 > 0 /\ -3-arg1+arg1P1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ -3-arg1+arg1P1 <= 0), cost: 1

Applied preprocessing
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-3-arg2+arg2P2 <= 0 /\ arg3-arg3P2 == 0 /\ arg2 > 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: 1
New rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (-3-arg2+arg2P2 <= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (arg2P3 > 0 /\ arg2 > 0 /\ -arg3 == 0 /\ -arg3P3 == 0 /\ -3+arg1P3-arg1 <= 0 /\ arg2P3-arg2 <= 0 /\ -3-arg2+arg1P3 <= 0 /\ arg1 > 0 /\ -3+arg1P3 > 0), cost: 1
New rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (arg2P3 > 0 /\ -3+arg1P3-arg1 <= 0 /\ arg2P3-arg2 <= 0 /\ -3-arg2+arg1P3 <= 0 /\ arg3 == 0 /\ -3+arg1P3 > 0), cost: 1

Simplified rules
Start location: __init
   5: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1
   6: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ -3-arg1+arg1P1 <= 0), cost: 1
   7: f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (-3-arg2+arg2P2 <= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: 1
   8: f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (arg2P3 > 0 /\ -3+arg1P3-arg1 <= 0 /\ arg2P3-arg2 <= 0 /\ -3-arg2+arg1P3 <= 0 /\ arg3 == 0 /\ -3+arg1P3 > 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied acceleration
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (-3-arg2+arg2P2 <= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: 1
New rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1P2 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gDLGnB.txt

Applied nonterm
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (-3-arg2+arg2P2 <= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0), cost: 1
New rule:
f192_0_main_NE -> [3] : (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 <= 0 /\ -arg1P2+arg1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BpDfLO.txt

Applied acceleration
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (arg2P3 > 0 /\ -3+arg1P3-arg1 <= 0 /\ arg2P3-arg2 <= 0 /\ -3-arg2+arg1P3 <= 0 /\ arg3 == 0 /\ -3+arg1P3 > 0), cost: 1
New rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (arg2P3 > 0 /\ -arg2P3+arg2 >= 0 /\ -arg3 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2P3-arg1P3 >= 0 /\ -1+n0 >= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BDDbgb.txt

Applied nonterm
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (arg2P3 > 0 /\ -3+arg1P3-arg1 <= 0 /\ arg2P3-arg2 <= 0 /\ -3-arg2+arg1P3 <= 0 /\ arg3 == 0 /\ -3+arg1P3 > 0), cost: 1
New rule:
f192_0_main_NE -> [3] : (arg2P3 > 0 /\ -arg2P3+arg2 <= 0 /\ -arg2P3+arg2 >= 0 /\ -arg3 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2-arg1P3 >= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dlnOHK.txt

Applied simplification
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1P2 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -1+n >= 0), cost: n
New rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1P2 >= 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -1+n >= 0), cost: n

Applied simplification
Original rule:
f192_0_main_NE -> [3] : (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 <= 0 /\ -arg1P2+arg1 >= 0), cost: NONTERM
New rule:
f192_0_main_NE -> [3] : (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg3 > 0 /\ -arg1P2+arg1 <= 0 /\ -arg1P2+arg1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (arg2P3 > 0 /\ -arg2P3+arg2 >= 0 /\ -arg3 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2P3-arg1P3 >= 0 /\ -1+n0 >= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: n0
New rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (-arg2P3+arg2 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2P3-arg1P3 >= 0 /\ -1+n0 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: n0

Applied simplification
Original rule:
f192_0_main_NE -> [3] : (arg2P3 > 0 /\ -arg2P3+arg2 <= 0 /\ -arg2P3+arg2 >= 0 /\ -arg3 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2-arg1P3 >= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: NONTERM
New rule:
f192_0_main_NE -> [3] : (-arg2P3+arg2 <= 0 /\ -arg2P3+arg2 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2-arg1P3 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 7 8

Accelerated simple loops
Start location: __init
   5: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1
   6: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ -3-arg1+arg1P1 <= 0), cost: 1
  13: f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1P2 >= 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -1+n >= 0), cost: n
  14: f192_0_main_NE -> [3] : (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg3 > 0 /\ -arg1P2+arg1 <= 0 /\ -arg1P2+arg1 >= 0), cost: NONTERM
  15: f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (-arg2P3+arg2 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2P3-arg1P3 >= 0 /\ -1+n0 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: n0
  16: f192_0_main_NE -> [3] : (-arg2P3+arg2 <= 0 /\ -arg2P3+arg2 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2-arg1P3 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: NONTERM
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1
Second rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1P2 >= 0 /\ arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -1+n >= 0), cost: n
New rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P0, (-3+arg2P2 > 0 /\ 1+arg2 > 0 /\ -1+arg1P2-arg1 <= 0 /\ 3-arg2P2+arg1P2 >= 0 /\ 1-arg1 <= 0 /\ -1+n >= 0 /\ arg3P0 > 0), cost: 1+n

Applied chaining
First rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1
Second rule:
f192_0_main_NE -> [3] : (3+arg2-arg2P2 >= 0 /\ -3+arg2P2 > 0 /\ 3-arg2P2+arg1 >= 0 /\ arg3 > 0 /\ -arg1P2+arg1 <= 0 /\ -arg1P2+arg1 >= 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (1+arg2 > 0 /\ -1+arg1 >= 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ -3-arg1+arg1P1 <= 0), cost: 1
Second rule:
f192_0_main_NE -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (-arg2P3+arg2 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2P3-arg1P3 >= 0 /\ -1+n0 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: n0
New rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (1+arg2 > 0 /\ 3+arg2P3-arg1P3 >= 0 /\ -1+n0 >= 0 /\ -3+arg1P3 > 0 /\ -1+arg1 >= 0 /\ -1+arg2P3-arg1 <= 0), cost: 1+n0

Applied chaining
First rule:
f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ -3-arg1+arg1P1 <= 0), cost: 1
Second rule:
f192_0_main_NE -> [3] : (-arg2P3+arg2 <= 0 /\ -arg2P3+arg2 >= 0 /\ 3-arg1P3+arg1 >= 0 /\ 3+arg2-arg1P3 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ -3+arg1P3 > 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (1+arg2 > 0 /\ -1+arg1 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 13 14 15 16

Chained accelerated rules with incoming rules
Start location: __init
   5: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-3+arg2P0-arg1 <= 0 /\ -1-arg1+arg1P0 <= 0 /\ 1+arg2 > 0 /\ -1+arg1P0 > 0 /\ -3+arg2P0 > 0 /\ arg3P0 > 0), cost: 1
   6: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ -1+arg2P1 > 0 /\ 1+arg2 > 0 /\ -1+arg2P1-arg1 <= 0 /\ -3-arg1+arg1P1 <= 0), cost: 1
  17: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P0, (-3+arg2P2 > 0 /\ 1+arg2 > 0 /\ -1+arg1P2-arg1 <= 0 /\ 3-arg2P2+arg1P2 >= 0 /\ 1-arg1 <= 0 /\ -1+n >= 0 /\ arg3P0 > 0), cost: 1+n
  18: f1_0_main_Load -> [3] : (1+arg2 > 0 /\ -1+arg1 >= 0), cost: NONTERM
  19: f1_0_main_Load -> f192_0_main_NE : arg2'=arg2P3, arg1'=arg1P3, arg3'=0, (1+arg2 > 0 /\ 3+arg2P3-arg1P3 >= 0 /\ -1+n0 >= 0 /\ -3+arg1P3 > 0 /\ -1+arg1 >= 0 /\ -1+arg2P3-arg1 <= 0), cost: 1+n0
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  18: f1_0_main_Load -> [3] : (1+arg2 > 0 /\ -1+arg1 >= 0), cost: NONTERM
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (1+arg2 > 0 /\ -1+arg1 >= 0), cost: NONTERM
New rule:
__init -> [3] : (1+arg2P4 > 0 /\ -1+arg1P4 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 4 18

Eliminated locations on linear paths
Start location: __init
  20: __init -> [3] : (1+arg2P4 > 0 /\ -1+arg1P4 >= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 20 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (1+arg2P4 > 0 /\ -1+arg1P4 >= 0)
