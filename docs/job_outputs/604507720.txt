unknown

Initial ITS

Start location: l8
Program variables: __cil_tmp2_6^0 __cil_tmp6_12^0 __const_400^0 __disjvr_0^0 maxretries_9^0 result_4^0 retrycount_10^0 selected_11^0 x_5^0
   0: l0 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post1, __cil_tmp6_12^0'=__cil_tmp6_12^post1, __const_400^0'=__const_400^post1, __disjvr_0^0'=__disjvr_0^post1, maxretries_9^0'=maxretries_9^post1, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^post1, selected_11^0'=selected_11^post1, x_5^0'=x_5^post1, (0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post1 == 0 /\ maxretries_9^0-maxretries_9^post1 == 0 /\ __cil_tmp2_6^post1-x_5^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ selected_11^post1-result_4^1 == 0 /\ result_4^1-__cil_tmp2_6^post1 == 0 /\ -__const_400^post1+__const_400^0 == 0 /\ retrycount_10^0-retrycount_10^post1 == 0), cost: 1
   6: l1 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post7, __cil_tmp6_12^0'=__cil_tmp6_12^post7, __const_400^0'=__const_400^post7, __disjvr_0^0'=__disjvr_0^post7, maxretries_9^0'=maxretries_9^post7, result_4^0'=result_4^post7, retrycount_10^0'=retrycount_10^post7, selected_11^0'=selected_11^post7, x_5^0'=x_5^post7, (-1-retrycount_10^0+retrycount_10^post7 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post7 == 0 /\ maxretries_9^0-maxretries_9^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ -selected_11^post7+selected_11^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post7 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ -__const_400^post7+__const_400^0 == 0), cost: 1
   1: l2 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post2, __cil_tmp6_12^0'=__cil_tmp6_12^post2, __const_400^0'=__const_400^post2, __disjvr_0^0'=__disjvr_0^post2, maxretries_9^0'=maxretries_9^post2, result_4^0'=result_4^post2, retrycount_10^0'=retrycount_10^post2, selected_11^0'=selected_11^post2, x_5^0'=x_5^post2, (0 == 0 /\ result_4^1-__cil_tmp2_6^post2 == 0 /\ __cil_tmp2_6^post2-x_5^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post2 == 0 /\ -__const_400^post2+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post2 == 0 /\ -result_4^1+selected_11^post2 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -x_5^post2+x_5^0 == 0 /\ -1+retrycount_10^post2-retrycount_10^0 == 0), cost: 1
   2: l3 -> l5 : __cil_tmp2_6^0'=__cil_tmp2_6^post3, __cil_tmp6_12^0'=__cil_tmp6_12^post3, __const_400^0'=__const_400^post3, __disjvr_0^0'=__disjvr_0^post3, maxretries_9^0'=maxretries_9^post3, result_4^0'=result_4^post3, retrycount_10^0'=retrycount_10^post3, selected_11^0'=selected_11^post3, x_5^0'=x_5^post3, (maxretries_9^0-maxretries_9^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ selected_11^0-selected_11^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post3 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -retrycount_10^post3+retrycount_10^0 == 0 /\ -__const_400^post3+__const_400^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post3 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0), cost: 1
   4: l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^post5, __cil_tmp6_12^0'=__cil_tmp6_12^post5, __const_400^0'=__const_400^post5, __disjvr_0^0'=__disjvr_0^post5, maxretries_9^0'=maxretries_9^post5, result_4^0'=result_4^post5, retrycount_10^0'=retrycount_10^post5, selected_11^0'=selected_11^post5, x_5^0'=x_5^post5, (selected_11^0-selected_11^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ selected_11^0 <= 0 /\ -__cil_tmp6_12^post5+result_4^post5 == 0 /\ -__const_400^post5+__const_400^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post5 == 0 /\ maxretries_9^0-maxretries_9^post5 == 0 /\ -selected_11^0+__cil_tmp6_12^post5 == 0 /\ -retrycount_10^post5+retrycount_10^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0), cost: 1
   5: l3 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post6, __cil_tmp6_12^0'=__cil_tmp6_12^post6, __const_400^0'=__const_400^post6, __disjvr_0^0'=__disjvr_0^post6, maxretries_9^0'=maxretries_9^post6, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^post6, selected_11^0'=selected_11^post6, x_5^0'=x_5^post6, (0 == 0 /\ __cil_tmp2_6^post6-x_5^0 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ selected_11^0 <= 0 /\ -__cil_tmp2_6^post6+result_4^1 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -retrycount_10^post6+retrycount_10^0 == 0 /\ -result_4^1+selected_11^post6 == 0 /\ -selected_11^0 <= 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post6 == 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
   3: l5 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^post4, __cil_tmp6_12^0'=__cil_tmp6_12^post4, __const_400^0'=__const_400^post4, __disjvr_0^0'=__disjvr_0^post4, maxretries_9^0'=maxretries_9^post4, result_4^0'=result_4^post4, retrycount_10^0'=retrycount_10^post4, selected_11^0'=selected_11^post4, x_5^0'=x_5^post4, (-retrycount_10^post4+retrycount_10^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^0 == 0 /\ maxretries_9^0-maxretries_9^post4 == 0 /\ -selected_11^0+__cil_tmp6_12^post4 == 0 /\ -x_5^post4+x_5^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post4 == 0 /\ -__cil_tmp6_12^post4+result_4^post4 == 0 /\ __const_400^0-__const_400^post4 == 0 /\ selected_11^0-selected_11^post4 == 0), cost: 1
   7: l7 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post8, __cil_tmp6_12^0'=__cil_tmp6_12^post8, __const_400^0'=__const_400^post8, __disjvr_0^0'=__disjvr_0^post8, maxretries_9^0'=maxretries_9^post8, result_4^0'=result_4^post8, retrycount_10^0'=retrycount_10^post8, selected_11^0'=selected_11^post8, x_5^0'=x_5^post8, (selected_11^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ -__const_400^post8+__const_400^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post8 == 0 /\ -x_5^post8+x_5^0 == 0 /\ retrycount_10^post8 == 0 /\ maxretries_9^post8-__const_400^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -__cil_tmp6_12^post8+__cil_tmp6_12^0 == 0), cost: 1
   8: l8 -> l7 : __cil_tmp2_6^0'=__cil_tmp2_6^post9, __cil_tmp6_12^0'=__cil_tmp6_12^post9, __const_400^0'=__const_400^post9, __disjvr_0^0'=__disjvr_0^post9, maxretries_9^0'=maxretries_9^post9, result_4^0'=result_4^post9, retrycount_10^0'=retrycount_10^post9, selected_11^0'=selected_11^post9, x_5^0'=x_5^post9, (-result_4^post9+result_4^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post9 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post9 == 0 /\ -retrycount_10^post9+retrycount_10^0 == 0 /\ -__const_400^post9+__const_400^0 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ selected_11^0-selected_11^post9 == 0 /\ maxretries_9^0-maxretries_9^post9 == 0 /\ -x_5^post9+x_5^0 == 0), cost: 1

Chained Linear Paths

Start location: l8
Program variables: __cil_tmp2_6^0 __cil_tmp6_12^0 __const_400^0 __disjvr_0^0 maxretries_9^0 result_4^0 retrycount_10^0 selected_11^0 x_5^0
   0: l0 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post1, __cil_tmp6_12^0'=__cil_tmp6_12^post1, __const_400^0'=__const_400^post1, __disjvr_0^0'=__disjvr_0^post1, maxretries_9^0'=maxretries_9^post1, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^post1, selected_11^0'=selected_11^post1, x_5^0'=x_5^post1, (0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post1 == 0 /\ maxretries_9^0-maxretries_9^post1 == 0 /\ __cil_tmp2_6^post1-x_5^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ selected_11^post1-result_4^1 == 0 /\ result_4^1-__cil_tmp2_6^post1 == 0 /\ -__const_400^post1+__const_400^0 == 0 /\ retrycount_10^0-retrycount_10^post1 == 0), cost: 1
   6: l1 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post7, __cil_tmp6_12^0'=__cil_tmp6_12^post7, __const_400^0'=__const_400^post7, __disjvr_0^0'=__disjvr_0^post7, maxretries_9^0'=maxretries_9^post7, result_4^0'=result_4^post7, retrycount_10^0'=retrycount_10^post7, selected_11^0'=selected_11^post7, x_5^0'=x_5^post7, (-1-retrycount_10^0+retrycount_10^post7 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post7 == 0 /\ maxretries_9^0-maxretries_9^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ -selected_11^post7+selected_11^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post7 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ -__const_400^post7+__const_400^0 == 0), cost: 1
   1: l2 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post2, __cil_tmp6_12^0'=__cil_tmp6_12^post2, __const_400^0'=__const_400^post2, __disjvr_0^0'=__disjvr_0^post2, maxretries_9^0'=maxretries_9^post2, result_4^0'=result_4^post2, retrycount_10^0'=retrycount_10^post2, selected_11^0'=selected_11^post2, x_5^0'=x_5^post2, (0 == 0 /\ result_4^1-__cil_tmp2_6^post2 == 0 /\ __cil_tmp2_6^post2-x_5^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post2 == 0 /\ -__const_400^post2+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post2 == 0 /\ -result_4^1+selected_11^post2 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -x_5^post2+x_5^0 == 0 /\ -1+retrycount_10^post2-retrycount_10^0 == 0), cost: 1
   4: l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^post5, __cil_tmp6_12^0'=__cil_tmp6_12^post5, __const_400^0'=__const_400^post5, __disjvr_0^0'=__disjvr_0^post5, maxretries_9^0'=maxretries_9^post5, result_4^0'=result_4^post5, retrycount_10^0'=retrycount_10^post5, selected_11^0'=selected_11^post5, x_5^0'=x_5^post5, (selected_11^0-selected_11^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ selected_11^0 <= 0 /\ -__cil_tmp6_12^post5+result_4^post5 == 0 /\ -__const_400^post5+__const_400^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post5 == 0 /\ maxretries_9^0-maxretries_9^post5 == 0 /\ -selected_11^0+__cil_tmp6_12^post5 == 0 /\ -retrycount_10^post5+retrycount_10^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0), cost: 1
   5: l3 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post6, __cil_tmp6_12^0'=__cil_tmp6_12^post6, __const_400^0'=__const_400^post6, __disjvr_0^0'=__disjvr_0^post6, maxretries_9^0'=maxretries_9^post6, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^post6, selected_11^0'=selected_11^post6, x_5^0'=x_5^post6, (0 == 0 /\ __cil_tmp2_6^post6-x_5^0 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ selected_11^0 <= 0 /\ -__cil_tmp2_6^post6+result_4^1 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -retrycount_10^post6+retrycount_10^0 == 0 /\ -result_4^1+selected_11^post6 == 0 /\ -selected_11^0 <= 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post6 == 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
  10: l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^post4, __cil_tmp6_12^0'=__cil_tmp6_12^post4, __const_400^0'=__const_400^post4, __disjvr_0^0'=__disjvr_0^post4, maxretries_9^0'=maxretries_9^post4, result_4^0'=result_4^post4, retrycount_10^0'=retrycount_10^post4, selected_11^0'=selected_11^post4, x_5^0'=x_5^post4, (-retrycount_10^post4+retrycount_10^post3 == 0 /\ -maxretries_9^post4+maxretries_9^post3 == 0 /\ maxretries_9^0-maxretries_9^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ selected_11^0-selected_11^post3 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ __cil_tmp6_12^post4-selected_11^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post3 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ __const_400^post3-__const_400^post4 == 0 /\ -selected_11^post4+selected_11^post3 == 0 /\ -retrycount_10^post3+retrycount_10^0 == 0 /\ -__const_400^post3+__const_400^0 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -__cil_tmp2_6^post4+__cil_tmp2_6^post3 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post3 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0 /\ -__cil_tmp6_12^post4+result_4^post4 == 0), cost: 1
   9: l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post8, __cil_tmp6_12^0'=__cil_tmp6_12^post8, __const_400^0'=__const_400^post8, __disjvr_0^0'=__disjvr_0^post8, maxretries_9^0'=maxretries_9^post8, result_4^0'=result_4^post8, retrycount_10^0'=retrycount_10^post8, selected_11^0'=selected_11^post8, x_5^0'=x_5^post8, (__cil_tmp2_6^post9-__cil_tmp2_6^post8 == 0 /\ selected_11^post8 == 0 /\ -result_4^post9+result_4^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post9 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post9 == 0 /\ __disjvr_0^post9-__disjvr_0^post8 == 0 /\ -retrycount_10^post9+retrycount_10^0 == 0 /\ -__const_400^post9+__const_400^0 == 0 /\ -__cil_tmp6_12^post8+__cil_tmp6_12^post9 == 0 /\ __const_400^post9-__const_400^post8 == 0 /\ maxretries_9^post8-__const_400^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ selected_11^0-selected_11^post9 == 0 /\ retrycount_10^post8 == 0 /\ maxretries_9^0-maxretries_9^post9 == 0 /\ -x_5^post9+x_5^0 == 0 /\ x_5^post9-x_5^post8 == 0 /\ result_4^post9-result_4^post8 == 0), cost: 1

	Eliminating location l7 by chaining:

	Applied chaining

	First rule:
	l8 -> l7 : __cil_tmp2_6^0'=__cil_tmp2_6^post9, __cil_tmp6_12^0'=__cil_tmp6_12^post9, __const_400^0'=__const_400^post9, __disjvr_0^0'=__disjvr_0^post9, maxretries_9^0'=maxretries_9^post9, result_4^0'=result_4^post9, retrycount_10^0'=retrycount_10^post9, selected_11^0'=selected_11^post9, x_5^0'=x_5^post9, (-result_4^post9+result_4^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post9 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post9 == 0 /\ -retrycount_10^post9+retrycount_10^0 == 0 /\ -__const_400^post9+__const_400^0 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ selected_11^0-selected_11^post9 == 0 /\ maxretries_9^0-maxretries_9^post9 == 0 /\ -x_5^post9+x_5^0 == 0), cost: 1
	Second rule:
	l7 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post8, __cil_tmp6_12^0'=__cil_tmp6_12^post8, __const_400^0'=__const_400^post8, __disjvr_0^0'=__disjvr_0^post8, maxretries_9^0'=maxretries_9^post8, result_4^0'=result_4^post8, retrycount_10^0'=retrycount_10^post8, selected_11^0'=selected_11^post8, x_5^0'=x_5^post8, (selected_11^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ -__const_400^post8+__const_400^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post8 == 0 /\ -x_5^post8+x_5^0 == 0 /\ retrycount_10^post8 == 0 /\ maxretries_9^post8-__const_400^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -__cil_tmp6_12^post8+__cil_tmp6_12^0 == 0), cost: 1
	New rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post8, __cil_tmp6_12^0'=__cil_tmp6_12^post8, __const_400^0'=__const_400^post8, __disjvr_0^0'=__disjvr_0^post8, maxretries_9^0'=maxretries_9^post8, result_4^0'=result_4^post8, retrycount_10^0'=retrycount_10^post8, selected_11^0'=selected_11^post8, x_5^0'=x_5^post8, (__cil_tmp2_6^post9-__cil_tmp2_6^post8 == 0 /\ selected_11^post8 == 0 /\ -result_4^post9+result_4^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post9 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post9 == 0 /\ __disjvr_0^post9-__disjvr_0^post8 == 0 /\ -retrycount_10^post9+retrycount_10^0 == 0 /\ -__const_400^post9+__const_400^0 == 0 /\ -__cil_tmp6_12^post8+__cil_tmp6_12^post9 == 0 /\ __const_400^post9-__const_400^post8 == 0 /\ maxretries_9^post8-__const_400^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ selected_11^0-selected_11^post9 == 0 /\ retrycount_10^post8 == 0 /\ maxretries_9^0-maxretries_9^post9 == 0 /\ -x_5^post9+x_5^0 == 0 /\ x_5^post9-x_5^post8 == 0 /\ result_4^post9-result_4^post8 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l3 -> l5 : __cil_tmp2_6^0'=__cil_tmp2_6^post3, __cil_tmp6_12^0'=__cil_tmp6_12^post3, __const_400^0'=__const_400^post3, __disjvr_0^0'=__disjvr_0^post3, maxretries_9^0'=maxretries_9^post3, result_4^0'=result_4^post3, retrycount_10^0'=retrycount_10^post3, selected_11^0'=selected_11^post3, x_5^0'=x_5^post3, (maxretries_9^0-maxretries_9^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ selected_11^0-selected_11^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post3 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -retrycount_10^post3+retrycount_10^0 == 0 /\ -__const_400^post3+__const_400^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post3 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0), cost: 1
	Second rule:
	l5 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^post4, __cil_tmp6_12^0'=__cil_tmp6_12^post4, __const_400^0'=__const_400^post4, __disjvr_0^0'=__disjvr_0^post4, maxretries_9^0'=maxretries_9^post4, result_4^0'=result_4^post4, retrycount_10^0'=retrycount_10^post4, selected_11^0'=selected_11^post4, x_5^0'=x_5^post4, (-retrycount_10^post4+retrycount_10^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^0 == 0 /\ maxretries_9^0-maxretries_9^post4 == 0 /\ -selected_11^0+__cil_tmp6_12^post4 == 0 /\ -x_5^post4+x_5^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post4 == 0 /\ -__cil_tmp6_12^post4+result_4^post4 == 0 /\ __const_400^0-__const_400^post4 == 0 /\ selected_11^0-selected_11^post4 == 0), cost: 1
	New rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^post4, __cil_tmp6_12^0'=__cil_tmp6_12^post4, __const_400^0'=__const_400^post4, __disjvr_0^0'=__disjvr_0^post4, maxretries_9^0'=maxretries_9^post4, result_4^0'=result_4^post4, retrycount_10^0'=retrycount_10^post4, selected_11^0'=selected_11^post4, x_5^0'=x_5^post4, (-retrycount_10^post4+retrycount_10^post3 == 0 /\ -maxretries_9^post4+maxretries_9^post3 == 0 /\ maxretries_9^0-maxretries_9^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ selected_11^0-selected_11^post3 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ __cil_tmp6_12^post4-selected_11^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post3 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ __const_400^post3-__const_400^post4 == 0 /\ -selected_11^post4+selected_11^post3 == 0 /\ -retrycount_10^post3+retrycount_10^0 == 0 /\ -__const_400^post3+__const_400^0 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -__cil_tmp2_6^post4+__cil_tmp2_6^post3 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post3 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0 /\ -__cil_tmp6_12^post4+result_4^post4 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3

Simplified Transitions

Start location: l8
Program variables: __cil_tmp2_6^0 __cil_tmp6_12^0 __const_400^0 maxretries_9^0 result_4^0 retrycount_10^0 selected_11^0 x_5^0
  11: l0 -> l1 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post1, selected_11^0'=x_5^0, T, cost: 1
  15: l1 -> l3 : retrycount_10^0'=1+retrycount_10^0, T, cost: 1
  12: l2 -> l3 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, T, cost: 1
  13: l3 -> l6 : __cil_tmp6_12^0'=selected_11^0, result_4^0'=selected_11^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
  14: l3 -> l1 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post6, selected_11^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
  17: l3 -> l4 : __cil_tmp6_12^0'=selected_11^0, result_4^0'=selected_11^0, T, cost: 1
  16: l8 -> l3 : maxretries_9^0'=__const_400^0, retrycount_10^0'=0, selected_11^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post1, __cil_tmp6_12^0'=__cil_tmp6_12^post1, __const_400^0'=__const_400^post1, __disjvr_0^0'=__disjvr_0^post1, maxretries_9^0'=maxretries_9^post1, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^post1, selected_11^0'=selected_11^post1, x_5^0'=x_5^post1, (0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post1 == 0 /\ maxretries_9^0-maxretries_9^post1 == 0 /\ __cil_tmp2_6^post1-x_5^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ selected_11^post1-result_4^1 == 0 /\ result_4^1-__cil_tmp2_6^post1 == 0 /\ -__const_400^post1+__const_400^0 == 0 /\ retrycount_10^0-retrycount_10^post1 == 0), cost: 1
	New rule:
	l0 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^0, selected_11^0'=result_4^1, x_5^0'=x_5^0, (0 == 0 /\ result_4^1-x_5^0 == 0), cost: 1
	
		propagated equality __cil_tmp6_12^post1 = __cil_tmp6_12^0
		
		propagated equality maxretries_9^post1 = maxretries_9^0
		
		propagated equality __cil_tmp2_6^post1 = x_5^0
		
		propagated equality x_5^post1 = x_5^0
		
		propagated equality __disjvr_0^post1 = __disjvr_0^0
		
		propagated equality selected_11^post1 = result_4^1
		
		propagated equality __const_400^post1 = __const_400^0
		
		propagated equality retrycount_10^post1 = retrycount_10^0
		
	Propagated Equalities

	Original rule:
	l0 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^0, selected_11^0'=result_4^1, x_5^0'=x_5^0, (0 == 0 /\ result_4^1-x_5^0 == 0), cost: 1
	New rule:
	l0 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality result_4^1 = x_5^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l0 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post1, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l0 -> l1 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post1, selected_11^0'=x_5^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post2, __cil_tmp6_12^0'=__cil_tmp6_12^post2, __const_400^0'=__const_400^post2, __disjvr_0^0'=__disjvr_0^post2, maxretries_9^0'=maxretries_9^post2, result_4^0'=result_4^post2, retrycount_10^0'=retrycount_10^post2, selected_11^0'=selected_11^post2, x_5^0'=x_5^post2, (0 == 0 /\ result_4^1-__cil_tmp2_6^post2 == 0 /\ __cil_tmp2_6^post2-x_5^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post2 == 0 /\ -__const_400^post2+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post2 == 0 /\ -result_4^1+selected_11^post2 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -x_5^post2+x_5^0 == 0 /\ -1+retrycount_10^post2-retrycount_10^0 == 0), cost: 1
	New rule:
	l2 -> l3 : __cil_tmp2_6^0'=result_4^1, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=result_4^1, x_5^0'=x_5^0, (0 == 0 /\ result_4^1-x_5^0 == 0), cost: 1
	
		propagated equality __cil_tmp2_6^post2 = result_4^1
		
		propagated equality __cil_tmp6_12^post2 = __cil_tmp6_12^0
		
		propagated equality __const_400^post2 = __const_400^0
		
		propagated equality maxretries_9^post2 = maxretries_9^0
		
		propagated equality selected_11^post2 = result_4^1
		
		propagated equality __disjvr_0^post2 = __disjvr_0^0
		
		propagated equality x_5^post2 = x_5^0
		
		propagated equality retrycount_10^post2 = 1+retrycount_10^0
		
	Propagated Equalities

	Original rule:
	l2 -> l3 : __cil_tmp2_6^0'=result_4^1, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=result_4^1, x_5^0'=x_5^0, (0 == 0 /\ result_4^1-x_5^0 == 0), cost: 1
	New rule:
	l2 -> l3 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality result_4^1 = x_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l2 -> l3 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l2 -> l3 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^post5, __cil_tmp6_12^0'=__cil_tmp6_12^post5, __const_400^0'=__const_400^post5, __disjvr_0^0'=__disjvr_0^post5, maxretries_9^0'=maxretries_9^post5, result_4^0'=result_4^post5, retrycount_10^0'=retrycount_10^post5, selected_11^0'=selected_11^post5, x_5^0'=x_5^post5, (selected_11^0-selected_11^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ selected_11^0 <= 0 /\ -__cil_tmp6_12^post5+result_4^post5 == 0 /\ -__const_400^post5+__const_400^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post5 == 0 /\ maxretries_9^0-maxretries_9^post5 == 0 /\ -selected_11^0+__cil_tmp6_12^post5 == 0 /\ -retrycount_10^post5+retrycount_10^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0), cost: 1
	New rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^post5, __cil_tmp6_12^0'=__cil_tmp6_12^post5, __const_400^0'=__const_400^post5, __disjvr_0^0'=__disjvr_0^post5, maxretries_9^0'=maxretries_9^post5, result_4^0'=result_4^post5, retrycount_10^0'=retrycount_10^post5, selected_11^0'=selected_11^post5, x_5^0'=x_5^post5, (selected_11^0-selected_11^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -__cil_tmp6_12^post5+result_4^post5 == 0 /\ -__const_400^post5+__const_400^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post5 == 0 /\ maxretries_9^0-maxretries_9^post5 == 0 /\ -selected_11^0+__cil_tmp6_12^post5 == 0 /\ -retrycount_10^post5+retrycount_10^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^post5, __cil_tmp6_12^0'=__cil_tmp6_12^post5, __const_400^0'=__const_400^post5, __disjvr_0^0'=__disjvr_0^post5, maxretries_9^0'=maxretries_9^post5, result_4^0'=result_4^post5, retrycount_10^0'=retrycount_10^post5, selected_11^0'=selected_11^post5, x_5^0'=x_5^post5, (selected_11^0-selected_11^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -__cil_tmp6_12^post5+result_4^post5 == 0 /\ -__const_400^post5+__const_400^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post5 == 0 /\ maxretries_9^0-maxretries_9^post5 == 0 /\ -selected_11^0+__cil_tmp6_12^post5 == 0 /\ -retrycount_10^post5+retrycount_10^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0), cost: 1
	New rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, (0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
	
		propagated equality selected_11^post5 = selected_11^0
		
		propagated equality x_5^post5 = x_5^0
		
		propagated equality __cil_tmp6_12^post5 = result_4^post5
		
		propagated equality __const_400^post5 = __const_400^0
		
		propagated equality __cil_tmp2_6^post5 = __cil_tmp2_6^0
		
		propagated equality maxretries_9^post5 = maxretries_9^0
		
		propagated equality result_4^post5 = selected_11^0
		
		propagated equality retrycount_10^post5 = retrycount_10^0
		
		propagated equality __disjvr_0^post5 = __disjvr_0^0
		
	Simplified Guard

	Original rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, (0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l6 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : __cil_tmp6_12^0'=selected_11^0, result_4^0'=selected_11^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l3 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post6, __cil_tmp6_12^0'=__cil_tmp6_12^post6, __const_400^0'=__const_400^post6, __disjvr_0^0'=__disjvr_0^post6, maxretries_9^0'=maxretries_9^post6, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^post6, selected_11^0'=selected_11^post6, x_5^0'=x_5^post6, (0 == 0 /\ __cil_tmp2_6^post6-x_5^0 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ selected_11^0 <= 0 /\ -__cil_tmp2_6^post6+result_4^1 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -retrycount_10^post6+retrycount_10^0 == 0 /\ -result_4^1+selected_11^post6 == 0 /\ -selected_11^0 <= 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post6 == 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post6, __cil_tmp6_12^0'=__cil_tmp6_12^post6, __const_400^0'=__const_400^post6, __disjvr_0^0'=__disjvr_0^post6, maxretries_9^0'=maxretries_9^post6, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^post6, selected_11^0'=selected_11^post6, x_5^0'=x_5^post6, (0 == 0 /\ __cil_tmp2_6^post6-x_5^0 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -__cil_tmp2_6^post6+result_4^1 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -retrycount_10^post6+retrycount_10^0 == 0 /\ -result_4^1+selected_11^post6 == 0 /\ -selected_11^0 <= 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post6 == 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l1 : __cil_tmp2_6^0'=__cil_tmp2_6^post6, __cil_tmp6_12^0'=__cil_tmp6_12^post6, __const_400^0'=__const_400^post6, __disjvr_0^0'=__disjvr_0^post6, maxretries_9^0'=maxretries_9^post6, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^post6, selected_11^0'=selected_11^post6, x_5^0'=x_5^post6, (0 == 0 /\ __cil_tmp2_6^post6-x_5^0 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -__cil_tmp2_6^post6+result_4^1 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -retrycount_10^post6+retrycount_10^0 == 0 /\ -result_4^1+selected_11^post6 == 0 /\ -selected_11^0 <= 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ maxretries_9^0-maxretries_9^post6 == 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=result_4^1, x_5^0'=x_5^0, (0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ result_4^1-x_5^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	
		propagated equality __cil_tmp2_6^post6 = x_5^0
		
		propagated equality __disjvr_0^post6 = __disjvr_0^0
		
		propagated equality x_5^post6 = x_5^0
		
		propagated equality retrycount_10^post6 = retrycount_10^0
		
		propagated equality selected_11^post6 = result_4^1
		
		propagated equality __cil_tmp6_12^post6 = __cil_tmp6_12^0
		
		propagated equality __const_400^post6 = __const_400^0
		
		propagated equality maxretries_9^post6 = maxretries_9^0
		
	Propagated Equalities

	Original rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=result_4^1, x_5^0'=x_5^0, (0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ result_4^1-x_5^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, (0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	
		propagated equality result_4^1 = x_5^0
		
	Simplified Guard

	Original rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, (0 == 0 /\ selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^post6, retrycount_10^0'=retrycount_10^0, selected_11^0'=x_5^0, x_5^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post6, selected_11^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post7, __cil_tmp6_12^0'=__cil_tmp6_12^post7, __const_400^0'=__const_400^post7, __disjvr_0^0'=__disjvr_0^post7, maxretries_9^0'=maxretries_9^post7, result_4^0'=result_4^post7, retrycount_10^0'=retrycount_10^post7, selected_11^0'=selected_11^post7, x_5^0'=x_5^post7, (-1-retrycount_10^0+retrycount_10^post7 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post7 == 0 /\ maxretries_9^0-maxretries_9^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ -selected_11^post7+selected_11^0 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post7 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ -__const_400^post7+__const_400^0 == 0), cost: 1
	New rule:
	l1 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^0, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality retrycount_10^post7 = 1+retrycount_10^0
		
		propagated equality __cil_tmp6_12^post7 = __cil_tmp6_12^0
		
		propagated equality maxretries_9^post7 = maxretries_9^0
		
		propagated equality x_5^post7 = x_5^0
		
		propagated equality selected_11^post7 = selected_11^0
		
		propagated equality __cil_tmp2_6^post7 = __cil_tmp2_6^0
		
		propagated equality result_4^post7 = result_4^0
		
		propagated equality __disjvr_0^post7 = __disjvr_0^0
		
		propagated equality __const_400^post7 = __const_400^0
		
	Simplified Guard

	Original rule:
	l1 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^0, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l1 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^0, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=result_4^0, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l1 -> l3 : retrycount_10^0'=1+retrycount_10^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post8, __cil_tmp6_12^0'=__cil_tmp6_12^post8, __const_400^0'=__const_400^post8, __disjvr_0^0'=__disjvr_0^post8, maxretries_9^0'=maxretries_9^post8, result_4^0'=result_4^post8, retrycount_10^0'=retrycount_10^post8, selected_11^0'=selected_11^post8, x_5^0'=x_5^post8, (__cil_tmp2_6^post9-__cil_tmp2_6^post8 == 0 /\ selected_11^post8 == 0 /\ -result_4^post9+result_4^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post9 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post9 == 0 /\ __disjvr_0^post9-__disjvr_0^post8 == 0 /\ -retrycount_10^post9+retrycount_10^0 == 0 /\ -__const_400^post9+__const_400^0 == 0 /\ -__cil_tmp6_12^post8+__cil_tmp6_12^post9 == 0 /\ __const_400^post9-__const_400^post8 == 0 /\ maxretries_9^post8-__const_400^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ selected_11^0-selected_11^post9 == 0 /\ retrycount_10^post8 == 0 /\ maxretries_9^0-maxretries_9^post9 == 0 /\ -x_5^post9+x_5^0 == 0 /\ x_5^post9-x_5^post8 == 0 /\ result_4^post9-result_4^post8 == 0), cost: 1
	New rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post9, __cil_tmp6_12^0'=__cil_tmp6_12^post9, __const_400^0'=__const_400^post9, __disjvr_0^0'=__disjvr_0^post9, maxretries_9^0'=__const_400^post9, result_4^0'=result_4^post9, retrycount_10^0'=0, selected_11^0'=0, x_5^0'=x_5^post9, (0 == 0 /\ -result_4^post9+result_4^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post9 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post9 == 0 /\ -retrycount_10^post9+retrycount_10^0 == 0 /\ -__const_400^post9+__const_400^0 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ selected_11^0-selected_11^post9 == 0 /\ maxretries_9^0-maxretries_9^post9 == 0 /\ -x_5^post9+x_5^0 == 0), cost: 1
	
		propagated equality __cil_tmp2_6^post8 = __cil_tmp2_6^post9
		
		propagated equality selected_11^post8 = 0
		
		propagated equality __disjvr_0^post8 = __disjvr_0^post9
		
		propagated equality __cil_tmp6_12^post8 = __cil_tmp6_12^post9
		
		propagated equality __const_400^post8 = __const_400^post9
		
		propagated equality maxretries_9^post8 = __const_400^post9
		
		propagated equality retrycount_10^post8 = 0
		
		propagated equality x_5^post8 = x_5^post9
		
		propagated equality result_4^post8 = result_4^post9
		
	Propagated Equalities

	Original rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^post9, __cil_tmp6_12^0'=__cil_tmp6_12^post9, __const_400^0'=__const_400^post9, __disjvr_0^0'=__disjvr_0^post9, maxretries_9^0'=__const_400^post9, result_4^0'=result_4^post9, retrycount_10^0'=0, selected_11^0'=0, x_5^0'=x_5^post9, (0 == 0 /\ -result_4^post9+result_4^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post9 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post9 == 0 /\ -retrycount_10^post9+retrycount_10^0 == 0 /\ -__const_400^post9+__const_400^0 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ selected_11^0-selected_11^post9 == 0 /\ maxretries_9^0-maxretries_9^post9 == 0 /\ -x_5^post9+x_5^0 == 0), cost: 1
	New rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=__const_400^0, result_4^0'=result_4^0, retrycount_10^0'=0, selected_11^0'=0, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality result_4^post9 = result_4^0
		
		propagated equality __cil_tmp6_12^post9 = __cil_tmp6_12^0
		
		propagated equality __cil_tmp2_6^post9 = __cil_tmp2_6^0
		
		propagated equality retrycount_10^post9 = retrycount_10^0
		
		propagated equality __const_400^post9 = __const_400^0
		
		propagated equality __disjvr_0^post9 = __disjvr_0^0
		
		propagated equality selected_11^post9 = selected_11^0
		
		propagated equality maxretries_9^post9 = maxretries_9^0
		
		propagated equality x_5^post9 = x_5^0
		
	Simplified Guard

	Original rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=__const_400^0, result_4^0'=result_4^0, retrycount_10^0'=0, selected_11^0'=0, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=__const_400^0, result_4^0'=result_4^0, retrycount_10^0'=0, selected_11^0'=0, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l3 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=__cil_tmp6_12^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=__const_400^0, result_4^0'=result_4^0, retrycount_10^0'=0, selected_11^0'=0, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l8 -> l3 : maxretries_9^0'=__const_400^0, retrycount_10^0'=0, selected_11^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^post4, __cil_tmp6_12^0'=__cil_tmp6_12^post4, __const_400^0'=__const_400^post4, __disjvr_0^0'=__disjvr_0^post4, maxretries_9^0'=maxretries_9^post4, result_4^0'=result_4^post4, retrycount_10^0'=retrycount_10^post4, selected_11^0'=selected_11^post4, x_5^0'=x_5^post4, (-retrycount_10^post4+retrycount_10^post3 == 0 /\ -maxretries_9^post4+maxretries_9^post3 == 0 /\ maxretries_9^0-maxretries_9^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ selected_11^0-selected_11^post3 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ __cil_tmp6_12^post4-selected_11^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post3 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ __const_400^post3-__const_400^post4 == 0 /\ -selected_11^post4+selected_11^post3 == 0 /\ -retrycount_10^post3+retrycount_10^0 == 0 /\ -__const_400^post3+__const_400^0 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -__cil_tmp2_6^post4+__cil_tmp2_6^post3 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post3 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0 /\ -__cil_tmp6_12^post4+result_4^post4 == 0), cost: 1
	New rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^post3, __cil_tmp6_12^0'=selected_11^post3, __const_400^0'=__const_400^post3, __disjvr_0^0'=__disjvr_0^post3, maxretries_9^0'=maxretries_9^post3, result_4^0'=selected_11^post3, retrycount_10^0'=retrycount_10^post3, selected_11^0'=selected_11^post3, x_5^0'=x_5^post3, (0 == 0 /\ maxretries_9^0-maxretries_9^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ selected_11^0-selected_11^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post3 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -retrycount_10^post3+retrycount_10^0 == 0 /\ -__const_400^post3+__const_400^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post3 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0), cost: 1
	
		propagated equality retrycount_10^post4 = retrycount_10^post3
		
		propagated equality maxretries_9^post4 = maxretries_9^post3
		
		propagated equality __disjvr_0^post4 = __disjvr_0^post3
		
		propagated equality __cil_tmp6_12^post4 = selected_11^post3
		
		propagated equality __const_400^post4 = __const_400^post3
		
		propagated equality selected_11^post4 = selected_11^post3
		
		propagated equality x_5^post4 = x_5^post3
		
		propagated equality __cil_tmp2_6^post4 = __cil_tmp2_6^post3
		
		propagated equality result_4^post4 = selected_11^post3
		
	Propagated Equalities

	Original rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^post3, __cil_tmp6_12^0'=selected_11^post3, __const_400^0'=__const_400^post3, __disjvr_0^0'=__disjvr_0^post3, maxretries_9^0'=maxretries_9^post3, result_4^0'=selected_11^post3, retrycount_10^0'=retrycount_10^post3, selected_11^0'=selected_11^post3, x_5^0'=x_5^post3, (0 == 0 /\ maxretries_9^0-maxretries_9^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ selected_11^0-selected_11^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ __cil_tmp2_6^0-__cil_tmp2_6^post3 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -retrycount_10^post3+retrycount_10^0 == 0 /\ -__const_400^post3+__const_400^0 == 0 /\ __cil_tmp6_12^0-__cil_tmp6_12^post3 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0), cost: 1
	New rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality maxretries_9^post3 = maxretries_9^0
		
		propagated equality result_4^post3 = result_4^0
		
		propagated equality selected_11^post3 = selected_11^0
		
		propagated equality x_5^post3 = x_5^0
		
		propagated equality __cil_tmp2_6^post3 = __cil_tmp2_6^0
		
		propagated equality __disjvr_0^post3 = __disjvr_0^0
		
		propagated equality retrycount_10^post3 = retrycount_10^0
		
		propagated equality __const_400^post3 = __const_400^0
		
		propagated equality __cil_tmp6_12^post3 = __cil_tmp6_12^0
		
	Simplified Guard

	Original rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l4 : __cil_tmp2_6^0'=__cil_tmp2_6^0, __cil_tmp6_12^0'=selected_11^0, __const_400^0'=__const_400^0, __disjvr_0^0'=__disjvr_0^0, maxretries_9^0'=maxretries_9^0, result_4^0'=selected_11^0, retrycount_10^0'=retrycount_10^0, selected_11^0'=selected_11^0, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l3 -> l4 : __cil_tmp6_12^0'=selected_11^0, result_4^0'=selected_11^0, T, cost: 1

Step with 16

	Trace

	16[T]
	
	Blocked

	[{}, {}]

Step with 13

	Trace

	16[T], 13[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {13[T]}]

Step with 17

	Trace

	16[T], 17[T]
	
	Blocked

	[{}, {13[T]}, {}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {13[T], 17[T]}]

Step with 14

	Trace

	16[T], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {}]

Step with 15

	Trace

	16[T], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)], 15[T]
	
	Blocked

	[{}, {13[T], 17[T]}, {}, {}]

Accelerate

Start location: l8
Program variables: __cil_tmp2_6^0 __cil_tmp6_12^0 __const_400^0 maxretries_9^0 result_4^0 retrycount_10^0 selected_11^0 x_5^0
  11: l0 -> l1 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post1, selected_11^0'=x_5^0, T, cost: 1
  15: l1 -> l3 : retrycount_10^0'=1+retrycount_10^0, T, cost: 1
  12: l2 -> l3 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post2, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, T, cost: 1
  13: l3 -> l6 : __cil_tmp6_12^0'=selected_11^0, result_4^0'=selected_11^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0), cost: 1
  14: l3 -> l1 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post6, selected_11^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
  17: l3 -> l4 : __cil_tmp6_12^0'=selected_11^0, result_4^0'=selected_11^0, T, cost: 1
  18: l3 -> l3 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post61, retrycount_10^0'=n+retrycount_10^0, selected_11^0'=x_5^0, (-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0), cost: 1
  16: l8 -> l3 : maxretries_9^0'=__const_400^0, retrycount_10^0'=0, selected_11^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l3 -> l3 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post61, retrycount_10^0'=1+retrycount_10^0, selected_11^0'=x_5^0, (selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0), cost: 1
	New rule:
	l3 -> l3 : __cil_tmp2_6^0'=x_5^0, result_4^0'=result_4^post61, retrycount_10^0'=n+retrycount_10^0, selected_11^0'=x_5^0, (-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0), cost: 1

		selected_11^0 >= 0 [0]: eventual decrease yields (selected_11^0 >= 0 /\ x_5^0 >= 0)
		
		selected_11^0 >= 0 [1]: eventual increase yields (selected_11^0 >= 0 /\ selected_11^0-x_5^0 <= 0)
		
		-1+maxretries_9^0-retrycount_10^0 >= 0 [0]: montonic decrease yields -n+maxretries_9^0-retrycount_10^0 >= 0
		
		-1+maxretries_9^0-retrycount_10^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+maxretries_9^0-retrycount_10^0 >= 0)
		
		-selected_11^0 >= 0 [0]: eventual decrease yields (-selected_11^0 >= 0 /\ -x_5^0 >= 0)
		
		-selected_11^0 >= 0 [1]: eventual increase yields (-selected_11^0+x_5^0 <= 0 /\ -selected_11^0 >= 0)
		
		Replacement map: {selected_11^0 >= 0 -> (selected_11^0 >= 0 /\ x_5^0 >= 0), -1+maxretries_9^0-retrycount_10^0 >= 0 -> -n+maxretries_9^0-retrycount_10^0 >= 0, -selected_11^0 >= 0 -> (-selected_11^0 >= 0 /\ -x_5^0 >= 0)}

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {18[T]}]

Step with 13

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)], 13[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ maxretries_9^0-retrycount_10^0 <= 0 /\ -selected_11^0 <= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {18[T]}, {}]

Backtrack

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {13[T], 18[T]}]

Step with 17

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)], 17[T]
	
	Blocked

	[{}, {13[T], 17[T]}, {13[T], 18[T]}, {}]

Backtrack

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {13[T], 17[T], 18[T]}]

Step with 14

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {13[T], 17[T], 18[T]}, {}]

Step with 15

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)], 15[T]
	
	Blocked

	[{}, {13[T], 17[T]}, {13[T], 17[T], 18[T]}, {}, {}]

Covered

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {13[T], 17[T], 18[T]}, {15[T]}]

Backtrack

	Trace

	16[T], 18[(-1+n >= 0 /\ selected_11^0 >= 0 /\ -n+maxretries_9^0-retrycount_10^0 >= 0 /\ -selected_11^0 >= 0 /\ x_5^0 >= 0 /\ -x_5^0 >= 0)]
	
	Blocked

	[{}, {13[T], 17[T]}, {13[T], 14[T], 17[T], 18[T]}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {13[T], 17[T], 18[T]}]

Step with 14

	Trace

	16[T], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)]
	
	Blocked

	[{}, {13[T], 17[T], 18[T]}, {}]

Step with 15

	Trace

	16[T], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)], 15[T]
	
	Blocked

	[{}, {13[T], 17[T], 18[T]}, {}, {}]

Covered

	Trace

	16[T], 14[(selected_11^0 <= 0 /\ selected_11^0 == 0 /\ -selected_11^0 <= 0 /\ 1-maxretries_9^0+retrycount_10^0 <= 0)]
	
	Blocked

	[{}, {13[T], 17[T], 18[T]}, {15[T]}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {13[T], 14[T], 17[T], 18[T]}]

Backtrack

	Trace

	Blocked

	[{16[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
