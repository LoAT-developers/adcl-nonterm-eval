unknown

Initial ITS

Start location: [1]
Program variables: i j n
   0: [1] -> [2] : j'=nondet, T, cost: 1
   1: [2] -> [3] : n'=nondet1, T, cost: 1
   2: [3] -> [4] : i'=n, T, cost: 1
   3: [4] -> [5] : i > 0, cost: 1
  12: [4] -> [12] : i <= 0, cost: 1
   4: [5] -> [7] : j > 0, cost: 1
   7: [5] -> [9] : j <= 0, cost: 1
  11: [6] -> [4] : T, cost: 1
   5: [7] -> [8] : j'=-1+j, T, cost: 1
   6: [8] -> [6] : T, cost: 1
   8: [9] -> [10] : j'=n, T, cost: 1
   9: [10] -> [11] : i'=-1+i, T, cost: 1
  10: [11] -> [6] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: i j n
  14: [1] -> [4] : i'=nondet1, j'=nondet, n'=nondet1, T, cost: 1
   3: [4] -> [5] : i > 0, cost: 1
  12: [4] -> [12] : i <= 0, cost: 1
  17: [5] -> [6] : j'=-1+j, j > 0, cost: 1
  19: [5] -> [6] : i'=-1+i, j'=n, j <= 0, cost: 1
  11: [6] -> [4] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : j'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : n'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : j'=nondet, n'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : j'=nondet, n'=nondet1, T, cost: 1
	Second rule:
	[3] -> [4] : i'=n, T, cost: 1
	New rule:
	[1] -> [4] : i'=nondet1, j'=nondet, n'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 13
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[5] -> [7] : j > 0, cost: 1
	Second rule:
	[7] -> [8] : j'=-1+j, T, cost: 1
	New rule:
	[5] -> [8] : j'=-1+j, j > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[5] -> [9] : j <= 0, cost: 1
	Second rule:
	[9] -> [10] : j'=n, T, cost: 1
	New rule:
	[5] -> [10] : j'=n, j <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[5] -> [8] : j'=-1+j, j > 0, cost: 1
	Second rule:
	[8] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : j'=-1+j, j > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 15
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[5] -> [10] : j'=n, j <= 0, cost: 1
	Second rule:
	[10] -> [11] : i'=-1+i, T, cost: 1
	New rule:
	[5] -> [11] : i'=-1+i, j'=n, j <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 16
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[5] -> [11] : i'=-1+i, j'=n, j <= 0, cost: 1
	Second rule:
	[11] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : i'=-1+i, j'=n, j <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 10 18

Step with 14

	Trace

	14[T]
	
	Blocked

	[{}, {}]

Step with 12

	Trace

	14[T], 12[(i <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {12[T]}]

Step with 3

	Trace

	14[T], 3[(i > 0)]
	
	Blocked

	[{}, {12[T]}, {}]

Step with 17

	Trace

	14[T], 3[(i > 0)], 17[(j > 0)]
	
	Blocked

	[{}, {12[T]}, {}, {}]

Step with 11

	Trace

	14[T], 3[(i > 0)], 17[(j > 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: i j n
  14: [1] -> [4] : i'=nondet1, j'=nondet, n'=nondet1, T, cost: 1
   3: [4] -> [5] : i > 0, cost: 1
  12: [4] -> [12] : i <= 0, cost: 1
  20: [4] -> [4] : j'=-n6+j, (i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0), cost: 1
  17: [5] -> [6] : j'=-1+j, j > 0, cost: 1
  19: [5] -> [6] : i'=-1+i, j'=n, j <= 0, cost: 1
  11: [6] -> [4] : T, cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : j'=-1+j, (i > 0 /\ j > 0), cost: 1
	New rule:
	[4] -> [4] : j'=-n6+j, (i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0), cost: 1

		i > 0 [0]: monotonic increase yields i > 0
		
		j > 0 [0]: montonic decrease yields 1-n6+j > 0
		
		j > 0 [1]: eventual increase yields (1 <= 0 /\ j > 0)
		
		Replacement map: {i > 0 -> i > 0, j > 0 -> 1-n6+j > 0}

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)]
	
	Blocked

	[{}, {12[T]}, {20[T]}]

Step with 3

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}]

Step with 17

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 17[(j > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {}]

Step with 11

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 17[(j > 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 17[(j > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {11[T]}]

Backtrack

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {17[T]}]

Step with 19

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 19[(j <= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {17[T]}, {}]

Step with 11

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 19[(j <= 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {17[T]}, {}, {}]

Accelerate and Drop

Start location: [1]
Program variables: i j n
  14: [1] -> [4] : i'=nondet1, j'=nondet, n'=nondet1, T, cost: 1
   3: [4] -> [5] : i > 0, cost: 1
  12: [4] -> [12] : i <= 0, cost: 1
  20: [4] -> [4] : j'=-n6+j, (i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0), cost: 1
  21: [4] -> [4] : i'=i-n13, j'=n, (-1+n13 >= 0 /\ 1+i-n13 > 0 /\ -n >= 0 /\ -j >= 0), cost: 1
  17: [5] -> [6] : j'=-1+j, j > 0, cost: 1
  19: [5] -> [6] : i'=-1+i, j'=n, j <= 0, cost: 1
  11: [6] -> [4] : T, cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : i'=-1+i, j'=n, (i > 0 /\ j <= 0), cost: 1
	New rule:
	[4] -> [4] : i'=i-n13, j'=n, (-1+n13 >= 0 /\ 1+i-n13 > 0 /\ -n >= 0 /\ -j >= 0), cost: 1

		i > 0 [0]: montonic decrease yields 1+i-n13 > 0
		
		i > 0 [1]: eventual increase yields (1 <= 0 /\ i > 0)
		
		-j >= 0 [0]: eventual decrease yields (-n >= 0 /\ -j >= 0)
		
		-j >= 0 [1]: eventual increase yields (n-j <= 0 /\ -j >= 0)
		
		Replacement map: {i > 0 -> 1+i-n13 > 0, -j >= 0 -> (-n >= 0 /\ -j >= 0)}

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}]

Step with 3

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}]

Step with 19

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 19[(j <= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {}]

Step with 11

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 19[(j <= 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 19[(j <= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {11[T]}]

Backtrack

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {19[T]}]

Step with 17

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 17[(j > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {19[T]}, {}]

Step with 11

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 17[(j > 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {19[T]}, {}, {}]

Covered

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)], 17[(j > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {19[T]}, {11[T]}]

Backtrack

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)], 3[(i > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {17[T], 19[T]}]

Backtrack

	Trace

	14[T], 20[(i > 0 /\ -1+n6 >= 0 /\ 1-n6+j > 0)]
	
	Blocked

	[{}, {12[T]}, {3[T], 12[T], 20[T]}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {12[T], 20[T]}]

Step with 3

	Trace

	14[T], 3[(i > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {}]

Step with 17

	Trace

	14[T], 3[(i > 0)], 17[(j > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {}, {}]

Step with 11

	Trace

	14[T], 3[(i > 0)], 17[(j > 0)], 11[T]
	
	Blocked

	[{}, {12[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 3[(i > 0)], 17[(j > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {}, {11[T]}]

Backtrack

	Trace

	14[T], 3[(i > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {17[T]}]

Step with 19

	Trace

	14[T], 3[(i > 0)], 19[(j <= 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {17[T]}, {}]

Step with 11

	Trace

	14[T], 3[(i > 0)], 19[(j <= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 20[T]}, {17[T]}, {}, {}]

Covered

	Trace

	14[T], 3[(i > 0)], 19[(j <= 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {17[T]}, {11[T]}]

Backtrack

	Trace

	14[T], 3[(i > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {17[T], 19[T]}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {3[T], 12[T], 20[T]}]

Backtrack

	Trace

	Blocked

	[{14[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
