unknown

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : (y > 0 /\ x > 0), cost: 1
  16: [3] -> [14] : (y <= 0 \/ x <= 0), cost: 1
   3: [4] -> [6] : -y+x > 0, cost: 1
   9: [4] -> [10] : -y+x <= 0, cost: 1
  15: [5] -> [3] : T, cost: 1
   4: [6] -> [7] : x > 0, cost: 1
   7: [6] -> [9] : x <= 0, cost: 1
   5: [7] -> [8] : x'=-1+x, T, cost: 1
   6: [8] -> [6] : T, cost: 1
   8: [9] -> [5] : T, cost: 1
  10: [10] -> [11] : y > 0, cost: 1
  13: [10] -> [13] : y <= 0, cost: 1
  11: [11] -> [12] : y'=-1+y, T, cost: 1
  12: [12] -> [10] : T, cost: 1
  14: [13] -> [5] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
  17: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [4] : (y > 0 /\ x > 0), cost: 1
  16: [3] -> [14] : (y <= 0 \/ x <= 0), cost: 1
   3: [4] -> [6] : -y+x > 0, cost: 1
   9: [4] -> [10] : -y+x <= 0, cost: 1
  15: [5] -> [3] : T, cost: 1
  19: [6] -> [5] : x <= 0, cost: 1
  20: [6] -> [6] : x'=-1+x, x > 0, cost: 1
  22: [10] -> [5] : y <= 0, cost: 1
  23: [10] -> [10] : y'=-1+y, y > 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[6] -> [7] : x > 0, cost: 1
	Second rule:
	[7] -> [8] : x'=-1+x, T, cost: 1
	New rule:
	[6] -> [8] : x'=-1+x, x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[6] -> [9] : x <= 0, cost: 1
	Second rule:
	[9] -> [5] : T, cost: 1
	New rule:
	[6] -> [5] : x <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[6] -> [8] : x'=-1+x, x > 0, cost: 1
	Second rule:
	[8] -> [6] : T, cost: 1
	New rule:
	[6] -> [6] : x'=-1+x, x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 18
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[10] -> [11] : y > 0, cost: 1
	Second rule:
	[11] -> [12] : y'=-1+y, T, cost: 1
	New rule:
	[10] -> [12] : y'=-1+y, y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 10 11
	
	Eliminating location [13] by chaining:

	Applied chaining

	First rule:
	[10] -> [13] : y <= 0, cost: 1
	Second rule:
	[13] -> [5] : T, cost: 1
	New rule:
	[10] -> [5] : y <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 13 14
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[10] -> [12] : y'=-1+y, y > 0, cost: 1
	Second rule:
	[12] -> [10] : T, cost: 1
	New rule:
	[10] -> [10] : y'=-1+y, y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 12 21

Step with 17

	Trace

	17[T]
	
	Blocked

	[{}, {}]

Step with 16

	Trace

	17[T], 16[(y <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	17[T]
	
	Blocked

	[{}, {16[y <= 0]}]

Step with 16

	Trace

	17[T], 16[(x <= 0)]
	
	Blocked

	[{}, {16[y <= 0]}, {}]

Backtrack

	Trace

	17[T]
	
	Blocked

	[{}, {16[(y <= 0 /\ x <= 0)]}]

Step with 2

	Trace

	17[T], 2[(y > 0 /\ x > 0)]
	
	Blocked

	[{}, {16[T]}, {}]

Step with 3

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}]

Step with 20

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 20[(x > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {}]

Accelerate

Start location: [1]
Program variables: x y
  17: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [4] : (y > 0 /\ x > 0), cost: 1
  16: [3] -> [14] : (y <= 0 \/ x <= 0), cost: 1
   3: [4] -> [6] : -y+x > 0, cost: 1
   9: [4] -> [10] : -y+x <= 0, cost: 1
  15: [5] -> [3] : T, cost: 1
  19: [6] -> [5] : x <= 0, cost: 1
  20: [6] -> [6] : x'=-1+x, x > 0, cost: 1
  24: [6] -> [6] : x'=-n+x, (-1+n >= 0 /\ 1-n+x > 0), cost: 1
  22: [10] -> [5] : y <= 0, cost: 1
  23: [10] -> [10] : y'=-1+y, y > 0, cost: 1

	Loop Acceleration

	Original rule:
	[6] -> [6] : x'=-1+x, (x > 0), cost: 1
	New rule:
	[6] -> [6] : x'=-n+x, (-1+n >= 0 /\ 1-n+x > 0), cost: 1

		x > 0 [0]: montonic decrease yields 1-n+x > 0
		
		x > 0 [1]: eventual increase yields (1 <= 0 /\ x > 0)
		
		Replacement map: {x > 0 -> 1-n+x > 0}

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 24[(-1+n >= 0 /\ 1-n+x > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {20[T], 24[T]}]

Step with 19

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 24[(-1+n >= 0 /\ 1-n+x > 0)], 19[(x <= 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {20[T], 24[T]}, {}]

Step with 15

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 24[(-1+n >= 0 /\ 1-n+x > 0)], 19[(x <= 0)], 15[T]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {20[T], 24[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 16

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 24[(-1+n >= 0 /\ 1-n+x > 0)], 19[(x <= 0)], 15[T], 16[(x <= 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {20[T], 24[T]}, {}, {2[T]}, {}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 24[(-1+n >= 0 /\ 1-n+x > 0)], 19[(x <= 0)], 15[T]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {20[T], 24[T]}, {}, {2[T], 16[x <= 0]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 24[(-1+n >= 0 /\ 1-n+x > 0)], 19[(x <= 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {20[T], 24[T]}, {15[T]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 24[(-1+n >= 0 /\ 1-n+x > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T]}, {19[T], 20[T], 24[T]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T], 24[T]}]

Step with 20

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)], 20[(x > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T], 24[T]}, {}]

Covered

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 3[(-y+x > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {19[T], 20[T], 24[T]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}]

Step with 9

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {}]

Step with 23

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 23[(y > 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {}]

Accelerate

Start location: [1]
Program variables: x y
  17: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [4] : (y > 0 /\ x > 0), cost: 1
  16: [3] -> [14] : (y <= 0 \/ x <= 0), cost: 1
   3: [4] -> [6] : -y+x > 0, cost: 1
   9: [4] -> [10] : -y+x <= 0, cost: 1
  15: [5] -> [3] : T, cost: 1
  19: [6] -> [5] : x <= 0, cost: 1
  20: [6] -> [6] : x'=-1+x, x > 0, cost: 1
  24: [6] -> [6] : x'=-n+x, (-1+n >= 0 /\ 1-n+x > 0), cost: 1
  22: [10] -> [5] : y <= 0, cost: 1
  23: [10] -> [10] : y'=-1+y, y > 0, cost: 1
  25: [10] -> [10] : y'=-n2+y, (-1+n2 >= 0 /\ 1-n2+y > 0), cost: 1

	Loop Acceleration

	Original rule:
	[10] -> [10] : y'=-1+y, (y > 0), cost: 1
	New rule:
	[10] -> [10] : y'=-n2+y, (-1+n2 >= 0 /\ 1-n2+y > 0), cost: 1

		y > 0 [0]: montonic decrease yields 1-n2+y > 0
		
		y > 0 [1]: eventual increase yields (1 <= 0 /\ y > 0)
		
		Replacement map: {y > 0 -> 1-n2+y > 0}

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 25[(-1+n2 >= 0 /\ 1-n2+y > 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {23[T], 25[T]}]

Step with 22

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 25[(-1+n2 >= 0 /\ 1-n2+y > 0)], 22[(y <= 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {23[T], 25[T]}, {}]

Step with 15

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 25[(-1+n2 >= 0 /\ 1-n2+y > 0)], 22[(y <= 0)], 15[T]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {23[T], 25[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 16

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 25[(-1+n2 >= 0 /\ 1-n2+y > 0)], 22[(y <= 0)], 15[T], 16[(y <= 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {23[T], 25[T]}, {}, {}, {}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 25[(-1+n2 >= 0 /\ 1-n2+y > 0)], 22[(y <= 0)], 15[T]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {23[T], 25[T]}, {}, {16[y <= 0]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 25[(-1+n2 >= 0 /\ 1-n2+y > 0)], 22[(y <= 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {23[T], 25[T]}, {15[T]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 25[(-1+n2 >= 0 /\ 1-n2+y > 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T]}, {22[T], 23[T], 25[T]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T], 25[T]}]

Step with 23

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)], 23[(y > 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T], 25[T]}, {}]

Covered

	Trace

	17[T], 2[(y > 0 /\ x > 0)], 9[(-y+x <= 0)]
	
	Blocked

	[{}, {16[T]}, {3[T]}, {22[T], 23[T], 25[T]}]

Backtrack

	Trace

	17[T], 2[(y > 0 /\ x > 0)]
	
	Blocked

	[{}, {16[T]}, {3[T], 9[T]}]

Backtrack

	Trace

	17[T]
	
	Blocked

	[{}, {2[T], 16[T]}]

Backtrack

	Trace

	Blocked

	[{17[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
