YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_M -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, (main_M > 0)>
<l1, l11, not((main_M > 0))>
<l2, l3, true>
<l3, l10, (main_x = main_M)>
<l3, l4, not((main_x = main_M))>
<l4, l5, (main_x > main_M)>
<l4, l7, not((main_x > main_M))>
<l5, l6, true, seq{main_x -> 0}>
<l6, l9, true>
<l7, l8, true, seq{main_x -> (main_x + 1)}>
<l8, l9, true>
<l9, l3, true>
<l10, l11, true>
<l11, l12, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l13, true, seq{main__func_return_ -> 0}>
<l13, l14, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l14, l15, true, seq{main_x -> varCall_1}>
<l15, l16, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l16, l1, true, seq{main_M -> varCall_2}>
<l1, l2, (main_M > 0)>
<l1, l11, not((main_M > 0))>
<l2, l3, true>
<l3, l10, (main_x = main_M)>
<l3, l4, not((main_x = main_M))>
<l4, l5, (main_x > main_M)>
<l4, l7, not((main_x > main_M))>
<l5, l6, true, seq{main_x -> 0}>
<l6, l9, true>
<l7, l8, true, seq{main_x -> (main_x + 1)}>
<l8, l9, true>
<l9, l3, true>
<l10, l11, true>
<l11, l12, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
12, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 6> <line: 16, col: 6>
main | function | [integer, ()] | <line: 13, col: 1>
x | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2> <line: 18, col: 10> <line: 19, col: 8> <line: 20, col: 5> <line: 22, col: 5> <line: 22, col: 9>
M | local variable | integer | <line: 14, col: 5> | <line: 16, col: 2> <line: 17, col: 6> <line: 18, col: 15> <line: 19, col: 12>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (main_x = undef3) /\ (main_M = undef4) /\ (undef4 > 0)>
<l0, l12, (main_x = undef3) /\ (main_M = undef4) /\ not((undef4 > 0))>
<l3, l12, (main_x = main_M)>
<l3, l3, (main_x < main_M) /\ not((main_x > main_M)), par{main_x -> (main_x + 1)}>
<l3, l3, (main_x > main_M) /\ (main_x > main_M), par{main_x -> 0}>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
12, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 + main_x <= main_M, {main_x -> 1 + main_x, rest remain the same}>
<l3, l3, 1 + main_M <= main_x, {main_x -> 0, rest remain the same}>
Variables:
main_x, main_M

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 <= undef4 /\ main_x = undef3 /\ main_M = undef4, {all remain the same}>

Graph 2
<l0, l12, undef4 <= 0 /\ main_x = undef3 /\ main_M = undef4, {all remain the same}>
<l3, l12, main_x = main_M, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )
( 12 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002899

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000768s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002835s
[31836 : 31838]
[31836 : 31839]
Successful child: 31839
[33mRanking function: [36m-main_x + main_M
[33mRanking function and negation of Quasi-Invariant applied[0m
New Graphs: 
Transitions:
<l3, l3, 1 + main_M <= main_x, {main_x -> 0, rest remain the same}>
Variables:
main_x, main_M
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000618s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001524s
[31836 : 31843]
[31836 : 31844]
Successful child: 31843
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= main_M /\ 1 + main_x <= main_M, {main_x -> 1 + main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= main_M /\ 1 + main_M <= main_x, {main_x -> 0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= main_M /\ 1 + main_M <= main_x, {main_x -> 0, rest remain the same}>
[33mRanking function: [36mmain_x - main_M[0m
New Graphs: 
INVARIANTS: 
3: 0 <= main_M , 
Quasi-INVARIANTS to narrow Graph: 
3: 
Proving termination of subgraph 2
Analyzing SCC {l12}...
No cycles found.

[32mProgram Terminates[0m
