NO

Initial ITS
Start location: l8
   0: l0 -> l1 : x^0'=x^post0, tmp2^0'=tmp2^post0, (-tmp2^post0+tmp2^0 == 0 /\ -x^post0+x^0 == 0), cost: 1
   4: l1 -> l2 : x^0'=x^post4, tmp2^0'=tmp2^post4, (0 == 0 /\ x^0-x^post4 == 0), cost: 1
   1: l2 -> l3 : x^0'=x^post1, tmp2^0'=tmp2^post1, (-1+x^post1 == 0 /\ tmp2^0-tmp2^post1 == 0 /\ tmp2^0 <= 0 /\ x^10 == 0 /\ -tmp2^0 <= 0), cost: 1
   2: l2 -> l0 : x^0'=x^post2, tmp2^0'=tmp2^post2, (tmp2^0-tmp2^post2 == 0 /\ x^0-x^post2 == 0 /\ 1-tmp2^0 <= 0), cost: 1
   3: l2 -> l0 : x^0'=x^post3, tmp2^0'=tmp2^post3, (1+tmp2^0 <= 0 /\ -tmp2^post3+tmp2^0 == 0 /\ x^0-x^post3 == 0), cost: 1
   5: l3 -> l4 : x^0'=x^post5, tmp2^0'=tmp2^post5, (-tmp2^post5+tmp2^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
   6: l4 -> l3 : x^0'=x^post6, tmp2^0'=tmp2^post6, (-tmp2^post6+tmp2^0 == 0 /\ x^0-x^post6 == 0), cost: 1
   7: l5 -> l6 : x^0'=x^post7, tmp2^0'=tmp2^post7, (tmp2^0-tmp2^post7 == 0 /\ x^0-x^post7 == 0), cost: 1
   8: l7 -> l1 : x^0'=x^post8, tmp2^0'=tmp2^post8, (-tmp2^post8+tmp2^0 == 0 /\ -1+x^post8 == 0), cost: 1
   9: l8 -> l7 : x^0'=x^post9, tmp2^0'=tmp2^post9, (tmp2^0-tmp2^post9 == 0 /\ x^0-x^post9 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l8
   0: l0 -> l1 : x^0'=x^post0, tmp2^0'=tmp2^post0, (-tmp2^post0+tmp2^0 == 0 /\ -x^post0+x^0 == 0), cost: 1
   4: l1 -> l2 : x^0'=x^post4, tmp2^0'=tmp2^post4, (0 == 0 /\ x^0-x^post4 == 0), cost: 1
   1: l2 -> l3 : x^0'=x^post1, tmp2^0'=tmp2^post1, (-1+x^post1 == 0 /\ tmp2^0-tmp2^post1 == 0 /\ tmp2^0 <= 0 /\ x^10 == 0 /\ -tmp2^0 <= 0), cost: 1
   2: l2 -> l0 : x^0'=x^post2, tmp2^0'=tmp2^post2, (tmp2^0-tmp2^post2 == 0 /\ x^0-x^post2 == 0 /\ 1-tmp2^0 <= 0), cost: 1
   3: l2 -> l0 : x^0'=x^post3, tmp2^0'=tmp2^post3, (1+tmp2^0 <= 0 /\ -tmp2^post3+tmp2^0 == 0 /\ x^0-x^post3 == 0), cost: 1
   5: l3 -> l4 : x^0'=x^post5, tmp2^0'=tmp2^post5, (-tmp2^post5+tmp2^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
   6: l4 -> l3 : x^0'=x^post6, tmp2^0'=tmp2^post6, (-tmp2^post6+tmp2^0 == 0 /\ x^0-x^post6 == 0), cost: 1
   8: l7 -> l1 : x^0'=x^post8, tmp2^0'=tmp2^post8, (-tmp2^post8+tmp2^0 == 0 /\ -1+x^post8 == 0), cost: 1
   9: l8 -> l7 : x^0'=x^post9, tmp2^0'=tmp2^post9, (tmp2^0-tmp2^post9 == 0 /\ x^0-x^post9 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, tmp2^0'=tmp2^post0, (-tmp2^post0+tmp2^0 == 0 /\ -x^post0+x^0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : x^0'=x^post1, tmp2^0'=tmp2^post1, (-1+x^post1 == 0 /\ tmp2^0-tmp2^post1 == 0 /\ tmp2^0 <= 0 /\ x^10 == 0 /\ -tmp2^0 <= 0), cost: 1
New rule:
l2 -> l3 : x^0'=1, tmp2^0 == 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post2, tmp2^0'=tmp2^post2, (tmp2^0-tmp2^post2 == 0 /\ x^0-x^post2 == 0 /\ 1-tmp2^0 <= 0), cost: 1
New rule:
l2 -> l0 : -1+tmp2^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post3, tmp2^0'=tmp2^post3, (1+tmp2^0 <= 0 /\ -tmp2^post3+tmp2^0 == 0 /\ x^0-x^post3 == 0), cost: 1
New rule:
l2 -> l0 : 1+tmp2^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : x^0'=x^post4, tmp2^0'=tmp2^post4, (0 == 0 /\ x^0-x^post4 == 0), cost: 1
New rule:
l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l4 : x^0'=x^post5, tmp2^0'=tmp2^post5, (-tmp2^post5+tmp2^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
New rule:
l3 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : x^0'=x^post6, tmp2^0'=tmp2^post6, (-tmp2^post6+tmp2^0 == 0 /\ x^0-x^post6 == 0), cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l1 : x^0'=x^post8, tmp2^0'=tmp2^post8, (-tmp2^post8+tmp2^0 == 0 /\ -1+x^post8 == 0), cost: 1
New rule:
l7 -> l1 : x^0'=1, TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : x^0'=x^post9, tmp2^0'=tmp2^post9, (tmp2^0-tmp2^post9 == 0 /\ x^0-x^post9 == 0), cost: 1
New rule:
l8 -> l7 : TRUE, cost: 1

Simplified rules
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  14: l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
  11: l2 -> l3 : x^0'=1, tmp2^0 == 0, cost: 1
  12: l2 -> l0 : -1+tmp2^0 >= 0, cost: 1
  13: l2 -> l0 : 1+tmp2^0 <= 0, cost: 1
  15: l3 -> l4 : TRUE, cost: 1
  16: l4 -> l3 : TRUE, cost: 1
  17: l7 -> l1 : x^0'=1, TRUE, cost: 1
  18: l8 -> l7 : TRUE, cost: 1


Eliminating location l7 by chaining:

Applied chaining
First rule:
l8 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l1 : x^0'=1, TRUE, cost: 1
New rule:
l8 -> l1 : x^0'=1, TRUE, cost: 2

Applied deletion
Removed the following rules: 17 18

Eliminating location l4 by chaining:

Applied chaining
First rule:
l3 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l3 : TRUE, cost: 1
New rule:
l3 -> l3 : TRUE, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminated locations on linear paths
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  14: l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
  11: l2 -> l3 : x^0'=1, tmp2^0 == 0, cost: 1
  12: l2 -> l0 : -1+tmp2^0 >= 0, cost: 1
  13: l2 -> l0 : 1+tmp2^0 <= 0, cost: 1
  20: l3 -> l3 : TRUE, cost: 2
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2


Applied nonterm
Original rule:
l3 -> l3 : TRUE, cost: 2
New rule:
l3 -> [9] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AEegdl.txt

Applied deletion
Removed the following rules: 20

Accelerated simple loops
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  14: l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
  11: l2 -> l3 : x^0'=1, tmp2^0 == 0, cost: 1
  12: l2 -> l0 : -1+tmp2^0 >= 0, cost: 1
  13: l2 -> l0 : 1+tmp2^0 <= 0, cost: 1
  21: l3 -> [9] : n >= 0, cost: NONTERM
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2


Applied chaining
First rule:
l2 -> l3 : x^0'=1, tmp2^0 == 0, cost: 1
Second rule:
l3 -> [9] : n >= 0, cost: NONTERM
New rule:
l2 -> [9] : tmp2^0 == 0, cost: NONTERM

Applied deletion
Removed the following rules: 21

Chained accelerated rules with incoming rules
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  14: l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
  11: l2 -> l3 : x^0'=1, tmp2^0 == 0, cost: 1
  12: l2 -> l0 : -1+tmp2^0 >= 0, cost: 1
  13: l2 -> l0 : 1+tmp2^0 <= 0, cost: 1
  22: l2 -> [9] : tmp2^0 == 0, cost: NONTERM
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  14: l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
  12: l2 -> l0 : -1+tmp2^0 >= 0, cost: 1
  13: l2 -> l0 : 1+tmp2^0 <= 0, cost: 1
  22: l2 -> [9] : tmp2^0 == 0, cost: NONTERM
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
Second rule:
l2 -> l0 : -1+tmp2^0 >= 0, cost: 1
New rule:
l1 -> l0 : tmp2^0'=tmp2^post4, (0 == 0 /\ -1+tmp2^post4 >= 0), cost: 2

Applied simplification
Original rule:
l1 -> l0 : tmp2^0'=tmp2^post4, (0 == 0 /\ -1+tmp2^post4 >= 0), cost: 2
New rule:
l1 -> l0 : tmp2^0'=tmp2^post4, -1+tmp2^post4 >= 0, cost: 2

Applied chaining
First rule:
l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
Second rule:
l2 -> l0 : 1+tmp2^0 <= 0, cost: 1
New rule:
l1 -> l0 : tmp2^0'=tmp2^post4, (0 == 0 /\ 1+tmp2^post4 <= 0), cost: 2

Applied simplification
Original rule:
l1 -> l0 : tmp2^0'=tmp2^post4, (0 == 0 /\ 1+tmp2^post4 <= 0), cost: 2
New rule:
l1 -> l0 : tmp2^0'=tmp2^post4, 1+tmp2^post4 <= 0, cost: 2

Applied chaining
First rule:
l1 -> l2 : tmp2^0'=tmp2^post4, 0 == 0, cost: 1
Second rule:
l2 -> [9] : tmp2^0 == 0, cost: NONTERM
New rule:
l1 -> [9] : (0 == 0 /\ tmp2^post4 == 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 == 0 /\ tmp2^post4 == 0), cost: NONTERM
New rule:
l1 -> [9] : tmp2^post4 == 0, cost: NONTERM

Applied deletion
Removed the following rules: 12 13 14 22

Eliminated locations on tree-shaped paths
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  23: l1 -> l0 : tmp2^0'=tmp2^post4, -1+tmp2^post4 >= 0, cost: 2
  24: l1 -> l0 : tmp2^0'=tmp2^post4, 1+tmp2^post4 <= 0, cost: 2
  25: l1 -> [9] : tmp2^post4 == 0, cost: NONTERM
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : tmp2^0'=tmp2^post4, -1+tmp2^post4 >= 0, cost: 2
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : tmp2^0'=tmp2^post4, -1+tmp2^post4 >= 0, cost: 3

Applied chaining
First rule:
l1 -> l0 : tmp2^0'=tmp2^post4, 1+tmp2^post4 <= 0, cost: 2
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : tmp2^0'=tmp2^post4, 1+tmp2^post4 <= 0, cost: 3

Applied deletion
Removed the following rules: 10 23 24

Eliminated locations on tree-shaped paths
Start location: l8
  25: l1 -> [9] : tmp2^post4 == 0, cost: NONTERM
  26: l1 -> l1 : tmp2^0'=tmp2^post4, -1+tmp2^post4 >= 0, cost: 3
  27: l1 -> l1 : tmp2^0'=tmp2^post4, 1+tmp2^post4 <= 0, cost: 3
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2


Applied nonterm
Original rule:
l1 -> l1 : tmp2^0'=tmp2^post4, -1+tmp2^post4 >= 0, cost: 3
New rule:
l1 -> [10] : (-1+n0 >= 0 /\ -1+tmp2^post4 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mBDCBb.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp2^0'=tmp2^post4, 1+tmp2^post4 <= 0, cost: 3
New rule:
l1 -> [10] : (-1+n1 >= 0 /\ -1-tmp2^post4 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_eEhNHj.txt

Applied simplification
Original rule:
l1 -> [10] : (-1+n1 >= 0 /\ -1-tmp2^post4 >= 0), cost: NONTERM
New rule:
l1 -> [10] : (-1+n1 >= 0 /\ 1+tmp2^post4 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 26 27

Accelerated simple loops
Start location: l8
  25: l1 -> [9] : tmp2^post4 == 0, cost: NONTERM
  28: l1 -> [10] : (-1+n0 >= 0 /\ -1+tmp2^post4 >= 0), cost: NONTERM
  30: l1 -> [10] : (-1+n1 >= 0 /\ 1+tmp2^post4 <= 0), cost: NONTERM
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2


Applied chaining
First rule:
l8 -> l1 : x^0'=1, TRUE, cost: 2
Second rule:
l1 -> [10] : (-1+n0 >= 0 /\ -1+tmp2^post4 >= 0), cost: NONTERM
New rule:
l8 -> [10] : TRUE, cost: NONTERM

Applied chaining
First rule:
l8 -> l1 : x^0'=1, TRUE, cost: 2
Second rule:
l1 -> [10] : (-1+n1 >= 0 /\ 1+tmp2^post4 <= 0), cost: NONTERM
New rule:
l8 -> [10] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 28 30

Chained accelerated rules with incoming rules
Start location: l8
  25: l1 -> [9] : tmp2^post4 == 0, cost: NONTERM
  19: l8 -> l1 : x^0'=1, TRUE, cost: 2
  31: l8 -> [10] : TRUE, cost: NONTERM


Eliminating location l1 by chaining:

Applied chaining
First rule:
l8 -> l1 : x^0'=1, TRUE, cost: 2
Second rule:
l1 -> [9] : tmp2^post4 == 0, cost: NONTERM
New rule:
l8 -> [9] : tmp2^post4 == 0, cost: NONTERM

Applied deletion
Removed the following rules: 19 25

Eliminated locations on linear paths
Start location: l8
  31: l8 -> [10] : TRUE, cost: NONTERM
  32: l8 -> [9] : tmp2^post4 == 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 31 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
