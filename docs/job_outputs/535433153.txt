NO

Initial ITS
Start location: l7
   0: l0 -> l1 : n0^0'=n0^post0, x_next^0'=x_next^post0, fair^0'=fair^post0, y_next^0'=y_next^post0, pc_Plan^0'=pc_Plan^post0, pc_Drive^0'=pc_Drive^post0, is_aborted_next^0'=is_aborted_next^post0, x^0'=x^post0, executed_Drive^0'=executed_Drive^post0, pc_Loop^0'=pc_Loop^post0, n1^0'=n1^post0, y^0'=y^post0, is_aborted^0'=is_aborted^post0, pc_Plan_next^0'=pc_Plan_next^post0, pc_Drive_next^0'=pc_Drive_next^post0, (0 == 0 /\ -1+executed_Drive^post0 == 0 /\ -7+pc_Drive_next^post0 <= 0 /\ y^post0-y_next^post0 == 0 /\ -is_aborted_next^post0 <= 0 /\ is_aborted^post0-is_aborted_next^post0 == 0 /\ 1-pc_Plan_next^post0 <= 0 /\ -4+pc_Drive_next^post0 <= 0 /\ 4-pc_Drive_next^post0 <= 0 /\ 1-is_aborted_next^post0 <= 0 /\ -1+is_aborted_next^post0 <= 0 /\ -1+pc_Loop^post0 == 0 /\ 2-pc_Plan^post0 <= 0 /\ 3-pc_Plan_next^post0 <= 0 /\ -1+y_next^post0-y^0 <= 0 /\ 1-x_next^post0+x^0 <= 0 /\ fair^0-fair^post0 == 0 /\ -pc_Plan_next^post0+pc_Plan^post0 == 0 /\ 1-pc_Drive_next^post0 <= 0 /\ -7+pc_Plan_next^post0 <= 0 /\ -n0^post0+n0^0 == 0 /\ -2+pc_Plan^post0 <= 0 /\ pc_Drive^post0-pc_Drive_next^post0 == 0 /\ x^post0-x_next^post0 == 0 /\ -n1^post0+n1^0 == 0 /\ 1-y_next^post0+y^0 <= 0 /\ -1+x_next^post0-x^0 <= 0), cost: 1
   1: l0 -> l1 : n0^0'=n0^post1, x_next^0'=x_next^post1, fair^0'=fair^post1, y_next^0'=y_next^post1, pc_Plan^0'=pc_Plan^post1, pc_Drive^0'=pc_Drive^post1, is_aborted_next^0'=is_aborted_next^post1, x^0'=x^post1, executed_Drive^0'=executed_Drive^post1, pc_Loop^0'=pc_Loop^post1, n1^0'=n1^post1, y^0'=y^post1, is_aborted^0'=is_aborted^post1, pc_Plan_next^0'=pc_Plan_next^post1, pc_Drive_next^0'=pc_Drive_next^post1, (0 == 0 /\ 1-pc_Drive_next^post1 <= 0 /\ x_next^post1-x^0 <= 0 /\ -executed_Drive^post1+executed_Drive^0 == 0 /\ n0^0-n0^post1 == 0 /\ -7+pc_Plan_next^post1 <= 0 /\ -pc_Plan_next^post1+pc_Plan^post1 == 0 /\ -is_aborted_next^post1+is_aborted^post1 == 0 /\ -x_next^post1+x^post1 == 0 /\ -x_next^post1+x^0 <= 0 /\ pc_Drive^post1-pc_Drive_next^post1 == 0 /\ -2+pc_Plan^post1 <= 0 /\ -7+pc_Drive_next^post1 <= 0 /\ y^post1-y_next^post1 == 0 /\ -is_aborted_next^post1 <= 0 /\ 5-pc_Drive_next^post1 <= 0 /\ n1^0-n1^post1 == 0 /\ y_next^post1-y^0 <= 0 /\ 1-pc_Plan_next^post1 <= 0 /\ 1-is_aborted_next^post1 <= 0 /\ -1+is_aborted_next^post1 <= 0 /\ -1+pc_Loop^post1 == 0 /\ 2-pc_Plan^post1 <= 0 /\ -y_next^post1+y^0 <= 0 /\ 3-pc_Plan_next^post1 <= 0 /\ fair^0-fair^post1 == 0), cost: 1
   2: l0 -> l1 : n0^0'=n0^post2, x_next^0'=x_next^post2, fair^0'=fair^post2, y_next^0'=y_next^post2, pc_Plan^0'=pc_Plan^post2, pc_Drive^0'=pc_Drive^post2, is_aborted_next^0'=is_aborted_next^post2, x^0'=x^post2, executed_Drive^0'=executed_Drive^post2, pc_Loop^0'=pc_Loop^post2, n1^0'=n1^post2, y^0'=y^post2, is_aborted^0'=is_aborted^post2, pc_Plan_next^0'=pc_Plan_next^post2, pc_Drive_next^0'=pc_Drive_next^post2, (0 == 0 /\ 1-pc_Drive_next^post2 <= 0 /\ -n1^post2+n1^0 == 0 /\ -x^0+x_next^post2 <= 0 /\ executed_Drive^0-executed_Drive^post2 == 0 /\ 3-pc_Plan_next^post2 <= 0 /\ n0^0-n0^post2 == 0 /\ x^0-x_next^post2 <= 0 /\ pc_Drive^post2-pc_Drive_next^post2 == 0 /\ x^post2-x_next^post2 == 0 /\ 1-pc_Plan_next^post2 <= 0 /\ -2+pc_Plan^post2 <= 0 /\ -is_aborted_next^post2 <= 0 /\ -7+pc_Drive_next^post2 <= 0 /\ -is_aborted_next^post2+is_aborted^post2 == 0 /\ 1-is_aborted_next^post2 <= 0 /\ -1+is_aborted_next^post2 <= 0 /\ -y^0+y_next^post2 <= 0 /\ -1+pc_Loop^post2 == 0 /\ -3+pc_Drive_next^post2 <= 0 /\ y^post2-y_next^post2 == 0 /\ fair^0-fair^post2 == 0 /\ -7+pc_Plan_next^post2 <= 0 /\ pc_Plan^post2-pc_Plan_next^post2 == 0 /\ y^0-y_next^post2 <= 0 /\ 2-pc_Plan^post2 <= 0), cost: 1
   3: l0 -> l1 : n0^0'=n0^post3, x_next^0'=x_next^post3, fair^0'=fair^post3, y_next^0'=y_next^post3, pc_Plan^0'=pc_Plan^post3, pc_Drive^0'=pc_Drive^post3, is_aborted_next^0'=is_aborted_next^post3, x^0'=x^post3, executed_Drive^0'=executed_Drive^post3, pc_Loop^0'=pc_Loop^post3, n1^0'=n1^post3, y^0'=y^post3, is_aborted^0'=is_aborted^post3, pc_Plan_next^0'=pc_Plan_next^post3, pc_Drive_next^0'=pc_Drive_next^post3, (0 == 0 /\ -n1^post3+n1^0 == 0 /\ -is_aborted_next^post3 <= 0 /\ -1+is_aborted_next^post3 <= 0 /\ 1-x_next^post3+x^0 <= 0 /\ is_aborted^post3-is_aborted_next^post3 == 0 /\ -1+pc_Loop^post3 == 0 /\ 1-pc_Plan_next^post3 <= 0 /\ -1+pc_Plan_next^post3 <= 0 /\ -7+pc_Drive_next^post3 <= 0 /\ -1+y_next^post3-y^0 <= 0 /\ -4+pc_Drive_next^post3 <= 0 /\ 4-pc_Drive_next^post3 <= 0 /\ fair^0-fair^post3 == 0 /\ y^post3-y_next^post3 == 0 /\ -pc_Plan_next^post3+pc_Plan^post3 == 0 /\ 2-pc_Plan^post3 <= 0 /\ pc_Drive^post3-pc_Drive_next^post3 == 0 /\ n0^0-n0^post3 == 0 /\ 1-pc_Drive_next^post3 <= 0 /\ -7+pc_Plan_next^post3 <= 0 /\ -1+x_next^post3-x^0 <= 0 /\ 1-y_next^post3+y^0 <= 0 /\ x^post3-x_next^post3 == 0 /\ -1+executed_Drive^post3 == 0 /\ -2+pc_Plan^post3 <= 0), cost: 1
   4: l0 -> l1 : n0^0'=n0^post4, x_next^0'=x_next^post4, fair^0'=fair^post4, y_next^0'=y_next^post4, pc_Plan^0'=pc_Plan^post4, pc_Drive^0'=pc_Drive^post4, is_aborted_next^0'=is_aborted_next^post4, x^0'=x^post4, executed_Drive^0'=executed_Drive^post4, pc_Loop^0'=pc_Loop^post4, n1^0'=n1^post4, y^0'=y^post4, is_aborted^0'=is_aborted^post4, pc_Plan_next^0'=pc_Plan_next^post4, pc_Drive_next^0'=pc_Drive_next^post4, (0 == 0 /\ -is_aborted_next^post4+is_aborted^post4 == 0 /\ -pc_Plan_next^post4+pc_Plan^post4 == 0 /\ 1-pc_Drive_next^post4 <= 0 /\ 2-pc_Plan^post4 <= 0 /\ -1+is_aborted_next^post4 <= 0 /\ executed_Drive^0-executed_Drive^post4 == 0 /\ x^post4-x_next^post4 == 0 /\ -y_next^post4+y^post4 == 0 /\ -is_aborted_next^post4 <= 0 /\ -7+pc_Plan_next^post4 <= 0 /\ -1+pc_Loop^post4 == 0 /\ -y_next^post4+y^0 <= 0 /\ -x^0+x_next^post4 <= 0 /\ -n1^post4+n1^0 == 0 /\ -2+pc_Plan^post4 <= 0 /\ -fair^post4+fair^0 == 0 /\ -pc_Drive_next^post4+pc_Drive^post4 == 0 /\ -7+pc_Drive_next^post4 <= 0 /\ 1-pc_Plan_next^post4 <= 0 /\ -1+pc_Plan_next^post4 <= 0 /\ y_next^post4-y^0 <= 0 /\ x^0-x_next^post4 <= 0 /\ 5-pc_Drive_next^post4 <= 0 /\ n0^0-n0^post4 == 0), cost: 1
   5: l0 -> l1 : n0^0'=n0^post5, x_next^0'=x_next^post5, fair^0'=fair^post5, y_next^0'=y_next^post5, pc_Plan^0'=pc_Plan^post5, pc_Drive^0'=pc_Drive^post5, is_aborted_next^0'=is_aborted_next^post5, x^0'=x^post5, executed_Drive^0'=executed_Drive^post5, pc_Loop^0'=pc_Loop^post5, n1^0'=n1^post5, y^0'=y^post5, is_aborted^0'=is_aborted^post5, pc_Plan_next^0'=pc_Plan_next^post5, pc_Drive_next^0'=pc_Drive_next^post5, (0 == 0 /\ -1+pc_Loop^post5 == 0 /\ 1-pc_Plan_next^post5 <= 0 /\ -1+pc_Plan_next^post5 <= 0 /\ x^post5-x_next^post5 == 0 /\ -2+pc_Plan^post5 <= 0 /\ y^post5-y_next^post5 == 0 /\ 1-pc_Drive_next^post5 <= 0 /\ n0^0-n0^post5 == 0 /\ -7+pc_Plan_next^post5 <= 0 /\ -y^0+y_next^post5 <= 0 /\ fair^0-fair^post5 == 0 /\ -n1^post5+n1^0 == 0 /\ -x_next^post5+x^0 <= 0 /\ -is_aborted_next^post5+is_aborted^post5 == 0 /\ -3+pc_Drive_next^post5 <= 0 /\ -is_aborted_next^post5 <= 0 /\ 2-pc_Plan^post5 <= 0 /\ pc_Drive^post5-pc_Drive_next^post5 == 0 /\ y^0-y_next^post5 <= 0 /\ -1+is_aborted_next^post5 <= 0 /\ executed_Drive^0-executed_Drive^post5 == 0 /\ x_next^post5-x^0 <= 0 /\ -7+pc_Drive_next^post5 <= 0 /\ pc_Plan^post5-pc_Plan_next^post5 == 0), cost: 1
  30: l1 -> l0 : n0^0'=n0^post30, x_next^0'=x_next^post30, fair^0'=fair^post30, y_next^0'=y_next^post30, pc_Plan^0'=pc_Plan^post30, pc_Drive^0'=pc_Drive^post30, is_aborted_next^0'=is_aborted_next^post30, x^0'=x^post30, executed_Drive^0'=executed_Drive^post30, pc_Loop^0'=pc_Loop^post30, n1^0'=n1^post30, y^0'=y^post30, is_aborted^0'=is_aborted^post30, pc_Plan_next^0'=pc_Plan_next^post30, pc_Drive_next^0'=pc_Drive_next^post30, (0 == 0 /\ 1-fair^0+fair^post30 == 0 /\ 1-pc_Plan_next^post30 <= 0 /\ -1+is_aborted_next^post30 <= 0 /\ -y_next^post30+y^0 <= 0 /\ -n1^post30+n1^0 == 0 /\ -is_aborted_next^post30 <= 0 /\ pc_Drive^post30-pc_Drive_next^post30 == 0 /\ pc_Plan^post30-pc_Plan_next^post30 == 0 /\ y_next^post30-y^0 <= 0 /\ 1-pc_Drive_next^post30 <= 0 /\ executed_Drive^post30 == 0 /\ -7+pc_Plan_next^post30 <= 0 /\ n0^0-n0^post30 == 0 /\ 1-fair^0 <= 0 /\ y^post30-y_next^post30 == 0 /\ -x_next^post30+x^0 <= 0 /\ -3+pc_Drive_next^post30 <= 0 /\ 1-is_aborted^post30 <= 0 /\ x^post30-x_next^post30 == 0 /\ is_aborted^post30-is_aborted_next^post30 == 0 /\ -7+pc_Loop^post30 == 0 /\ x_next^post30-x^0 <= 0 /\ -7+pc_Drive_next^post30 <= 0), cost: 1
  31: l1 -> l4 : n0^0'=n0^post31, x_next^0'=x_next^post31, fair^0'=fair^post31, y_next^0'=y_next^post31, pc_Plan^0'=pc_Plan^post31, pc_Drive^0'=pc_Drive^post31, is_aborted_next^0'=is_aborted_next^post31, x^0'=x^post31, executed_Drive^0'=executed_Drive^post31, pc_Loop^0'=pc_Loop^post31, n1^0'=n1^post31, y^0'=y^post31, is_aborted^0'=is_aborted^post31, pc_Plan_next^0'=pc_Plan_next^post31, pc_Drive_next^0'=pc_Drive_next^post31, (0 == 0 /\ n0^0-n0^post31 == 0 /\ -7+pc_Plan_next^post31 <= 0 /\ 3-pc_Plan^post31 <= 0 /\ -1+x_next^post31-x^0 <= 0 /\ -2+pc_Loop^post31 == 0 /\ 1-y_next^post31+y^0 <= 0 /\ -4+pc_Drive_next^post31 <= 0 /\ 4-pc_Drive_next^post31 <= 0 /\ -1+executed_Drive^post31 == 0 /\ -7+pc_Drive_next^post31 <= 0 /\ -is_aborted_next^post31 <= 0 /\ 1-pc_Plan_next^post31 <= 0 /\ -pc_Plan_next^post31+pc_Plan^post31 == 0 /\ -1+is_aborted_next^post31 <= 0 /\ -3+pc_Plan^post31 <= 0 /\ y^post31-y_next^post31 == 0 /\ -x_next^post31+x^post31 == 0 /\ 1-x_next^post31+x^0 <= 0 /\ -is_aborted_next^post31+is_aborted^post31 == 0 /\ -1+y_next^post31-y^0 <= 0 /\ pc_Drive^post31-pc_Drive_next^post31 == 0 /\ n1^0-n1^post31 == 0 /\ fair^0-fair^post31 == 0 /\ is_aborted^post31 <= 0 /\ 1-pc_Drive_next^post31 <= 0), cost: 1
  32: l1 -> l4 : n0^0'=n0^post32, x_next^0'=x_next^post32, fair^0'=fair^post32, y_next^0'=y_next^post32, pc_Plan^0'=pc_Plan^post32, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=is_aborted_next^post32, x^0'=x^post32, executed_Drive^0'=executed_Drive^post32, pc_Loop^0'=pc_Loop^post32, n1^0'=n1^post32, y^0'=y^post32, is_aborted^0'=is_aborted^post32, pc_Plan_next^0'=pc_Plan_next^post32, pc_Drive_next^0'=pc_Drive_next^post32, (0 == 0 /\ n0^0-n0^post32 == 0 /\ -7+pc_Plan_next^post32 <= 0 /\ x^0-x_next^post32 <= 0 /\ 3-pc_Plan^post32 <= 0 /\ -n1^post32+n1^0 == 0 /\ -2+pc_Loop^post32 == 0 /\ y^post32-y_next^post32 == 0 /\ 5-pc_Drive_next^post32 <= 0 /\ is_aborted^post32 <= 0 /\ -x^0+x_next^post32 <= 0 /\ -7+pc_Drive_next^post32 <= 0 /\ 1-pc_Plan_next^post32 <= 0 /\ -1+is_aborted_next^post32 <= 0 /\ y^0-y_next^post32 <= 0 /\ -3+pc_Plan^post32 <= 0 /\ -is_aborted_next^post32 <= 0 /\ x^post32-x_next^post32 == 0 /\ fair^0-fair^post32 == 0 /\ -pc_Drive_next^post32+pc_Drive^post32 == 0 /\ -is_aborted_next^post32+is_aborted^post32 == 0 /\ executed_Drive^post32 == 0 /\ -y^0+y_next^post32 <= 0 /\ pc_Plan^post32-pc_Plan_next^post32 == 0 /\ 1-pc_Drive_next^post32 <= 0), cost: 1
  33: l1 -> l4 : n0^0'=n0^post33, x_next^0'=x_next^post33, fair^0'=fair^post33, y_next^0'=y_next^post33, pc_Plan^0'=pc_Plan^post33, pc_Drive^0'=pc_Drive^post33, is_aborted_next^0'=is_aborted_next^post33, x^0'=x^post33, executed_Drive^0'=executed_Drive^post33, pc_Loop^0'=pc_Loop^post33, n1^0'=n1^post33, y^0'=y^post33, is_aborted^0'=is_aborted^post33, pc_Plan_next^0'=pc_Plan_next^post33, pc_Drive_next^0'=pc_Drive_next^post33, (0 == 0 /\ 1-pc_Plan_next^post33 <= 0 /\ is_aborted^post33 <= 0 /\ -1+is_aborted_next^post33 <= 0 /\ is_aborted^post33-is_aborted_next^post33 == 0 /\ -3+pc_Plan^post33 <= 0 /\ -is_aborted_next^post33 <= 0 /\ -y_next^post33+y^0 <= 0 /\ fair^0-fair^post33 == 0 /\ pc_Drive^post33-pc_Drive_next^post33 == 0 /\ -n1^post33+n1^0 == 0 /\ x^post33-x_next^post33 == 0 /\ 1-pc_Drive_next^post33 <= 0 /\ pc_Plan^post33-pc_Plan_next^post33 == 0 /\ y_next^post33-y^0 <= 0 /\ n0^0-n0^post33 == 0 /\ -x_next^post33+x^0 <= 0 /\ executed_Drive^post33 == 0 /\ -7+pc_Plan_next^post33 <= 0 /\ 3-pc_Plan^post33 <= 0 /\ -3+pc_Drive_next^post33 <= 0 /\ -2+pc_Loop^post33 == 0 /\ y^post33-y_next^post33 == 0 /\ x_next^post33-x^0 <= 0 /\ -7+pc_Drive_next^post33 <= 0), cost: 1
  34: l1 -> l0 : n0^0'=n0^post34, x_next^0'=x_next^post34, fair^0'=fair^post34, y_next^0'=y_next^post34, pc_Plan^0'=pc_Plan^post34, pc_Drive^0'=pc_Drive^post34, is_aborted_next^0'=is_aborted_next^post34, x^0'=x^post34, executed_Drive^0'=executed_Drive^post34, pc_Loop^0'=pc_Loop^post34, n1^0'=n1^post34, y^0'=y^post34, is_aborted^0'=is_aborted^post34, pc_Plan_next^0'=pc_Plan_next^post34, pc_Drive_next^0'=pc_Drive_next^post34, (0 == 0 /\ -1+is_aborted_next^post34 <= 0 /\ 1-y_next^post34+y^0 <= 0 /\ -is_aborted_next^post34 <= 0 /\ -1-x^0+x_next^post34 <= 0 /\ -pc_Drive_next^post34+pc_Drive^post34 == 0 /\ fair^0-fair^post34 == 0 /\ 1-pc_Drive_next^post34 <= 0 /\ -7+pc_Plan_next^post34 <= 0 /\ 1-is_aborted^post34 <= 0 /\ n1^0-n1^post34 == 0 /\ x^post34-x_next^post34 == 0 /\ -1+y_next^post34-y^0 <= 0 /\ -pc_Plan_next^post34+pc_Plan^post34 == 0 /\ 1+x^0-x_next^post34 <= 0 /\ -7+pc_Loop^post34 == 0 /\ -is_aborted_next^post34+is_aborted^post34 == 0 /\ 1-pc_Plan_next^post34 <= 0 /\ -7+pc_Drive_next^post34 <= 0 /\ y^post34-y_next^post34 == 0 /\ -1+executed_Drive^post34 == 0 /\ n0^0-n0^post34 == 0 /\ -4+pc_Drive_next^post34 <= 0 /\ 4-pc_Drive_next^post34 <= 0), cost: 1
  35: l1 -> l0 : n0^0'=n0^post35, x_next^0'=x_next^post35, fair^0'=fair^post35, y_next^0'=y_next^post35, pc_Plan^0'=pc_Plan^post35, pc_Drive^0'=pc_Drive^post35, is_aborted_next^0'=is_aborted_next^post35, x^0'=x^post35, executed_Drive^0'=executed_Drive^post35, pc_Loop^0'=pc_Loop^post35, n1^0'=n1^post35, y^0'=y^post35, is_aborted^0'=is_aborted^post35, pc_Plan_next^0'=pc_Plan_next^post35, pc_Drive_next^0'=pc_Drive_next^post35, (0 == 0 /\ pc_Drive^post35-pc_Drive_next^post35 == 0 /\ 1-pc_Drive_next^post35 <= 0 /\ n0^0-n0^post35 == 0 /\ -7+pc_Plan_next^post35 <= 0 /\ -7+pc_Loop^post35 == 0 /\ x^0-x_next^post35 <= 0 /\ y^post35-y_next^post35 == 0 /\ -n1^post35+n1^0 == 0 /\ 1-is_aborted^post35 <= 0 /\ -x^0+x_next^post35 <= 0 /\ y^0-y_next^post35 <= 0 /\ -is_aborted_next^post35+is_aborted^post35 == 0 /\ -7+pc_Drive_next^post35 <= 0 /\ -1+is_aborted_next^post35 <= 0 /\ -is_aborted_next^post35 <= 0 /\ 5-pc_Drive_next^post35 <= 0 /\ 1-pc_Plan_next^post35 <= 0 /\ -y^0+y_next^post35 <= 0 /\ fair^0-fair^post35 == 0 /\ executed_Drive^post35 == 0 /\ x^post35-x_next^post35 == 0 /\ pc_Plan^post35-pc_Plan_next^post35 == 0), cost: 1
   6: l2 -> l3 : n0^0'=n0^post6, x_next^0'=x_next^post6, fair^0'=fair^post6, y_next^0'=y_next^post6, pc_Plan^0'=pc_Plan^post6, pc_Drive^0'=pc_Drive^post6, is_aborted_next^0'=is_aborted_next^post6, x^0'=x^post6, executed_Drive^0'=executed_Drive^post6, pc_Loop^0'=pc_Loop^post6, n1^0'=n1^post6, y^0'=y^post6, is_aborted^0'=is_aborted^post6, pc_Plan_next^0'=pc_Plan_next^post6, pc_Drive_next^0'=pc_Drive_next^post6, (0 == 0 /\ n0^0-n0^post6 == 0 /\ -pc_Drive_next^post6+pc_Drive^post6 == 0 /\ -7+pc_Plan_next^post6 <= 0 /\ -1+y_next^post6-y^0 <= 0 /\ -1+x_next^post6-x^0 <= 0 /\ -is_aborted_next^post6+is_aborted^post6 == 0 /\ -4+pc_Drive_next^post6 <= 0 /\ 4-pc_Drive_next^post6 <= 0 /\ -4+pc_Loop^post6 == 0 /\ -7+pc_Drive_next^post6 <= 0 /\ -pc_Plan_next^post6+pc_Plan^post6 == 0 /\ y^post6-y_next^post6 == 0 /\ 1-pc_Plan_next^post6 <= 0 /\ -7+pc_Drive^post6 <= 0 /\ 7-pc_Drive^post6 <= 0 /\ -x_next^post6+x^post6 == 0 /\ 1-executed_Drive^post6 <= 0 /\ -1+executed_Drive^post6 <= 0 /\ -1+executed_Drive^post6 == 0 /\ 1-y_next^post6+y^0 <= 0 /\ 1-x_next^post6+x^0 <= 0 /\ n1^0-n1^post6 == 0 /\ -1+is_aborted_next^post6 <= 0 /\ fair^0-fair^post6 == 0 /\ 1-pc_Drive_next^post6 <= 0 /\ -is_aborted_next^post6 <= 0), cost: 1
   7: l2 -> l3 : n0^0'=n0^post7, x_next^0'=x_next^post7, fair^0'=fair^post7, y_next^0'=y_next^post7, pc_Plan^0'=pc_Plan^post7, pc_Drive^0'=pc_Drive^post7, is_aborted_next^0'=is_aborted_next^post7, x^0'=x^post7, executed_Drive^0'=executed_Drive^post7, pc_Loop^0'=pc_Loop^post7, n1^0'=n1^post7, y^0'=y^post7, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=pc_Drive_next^post7, (0 == 0 /\ -7+pc_Drive^post7 <= 0 /\ 7-pc_Drive^post7 <= 0 /\ -y_next^post7+y^post7 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ n0^0-n0^post7 == 0 /\ x^0-x_next^post7 <= 0 /\ 5-pc_Drive_next^post7 <= 0 /\ x^post7-x_next^post7 == 0 /\ -1+is_aborted_next^post7 <= 0 /\ executed_Drive^0-executed_Drive^post7 == 0 /\ -is_aborted_next^post7+is_aborted^post7 == 0 /\ -is_aborted_next^post7 <= 0 /\ -7+pc_Drive_next^post7 <= 0 /\ -x^0+x_next^post7 <= 0 /\ 1-pc_Plan_next^post7 <= 0 /\ -pc_Drive_next^post7+pc_Drive^post7 == 0 /\ -y_next^post7+y^0 <= 0 /\ fair^0-fair^post7 == 0 /\ -n1^post7+n1^0 == 0 /\ pc_Plan^post7-pc_Plan_next^post7 == 0 /\ -4+pc_Loop^post7 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ 1-pc_Drive_next^post7 <= 0 /\ y_next^post7-y^0 <= 0), cost: 1
   8: l2 -> l3 : n0^0'=n0^post8, x_next^0'=x_next^post8, fair^0'=fair^post8, y_next^0'=y_next^post8, pc_Plan^0'=pc_Plan^post8, pc_Drive^0'=pc_Drive^post8, is_aborted_next^0'=is_aborted_next^post8, x^0'=x^post8, executed_Drive^0'=executed_Drive^post8, pc_Loop^0'=pc_Loop^post8, n1^0'=n1^post8, y^0'=y^post8, is_aborted^0'=is_aborted^post8, pc_Plan_next^0'=pc_Plan_next^post8, pc_Drive_next^0'=pc_Drive_next^post8, (0 == 0 /\ 1-pc_Plan_next^post8 <= 0 /\ y^post8-y_next^post8 == 0 /\ -executed_Drive^post8+executed_Drive^0 == 0 /\ fair^0-fair^post8 == 0 /\ -1+is_aborted_next^post8 <= 0 /\ pc_Plan^post8-pc_Plan_next^post8 == 0 /\ 1-pc_Drive_next^post8 <= 0 /\ -is_aborted_next^post8 <= 0 /\ pc_Drive^post8-pc_Drive_next^post8 == 0 /\ -y_next^post8+y^0 <= 0 /\ is_aborted^post8-is_aborted_next^post8 == 0 /\ -x_next^post8+x^0 <= 0 /\ n0^0-n0^post8 == 0 /\ -7+pc_Plan_next^post8 <= 0 /\ -3+pc_Drive_next^post8 <= 0 /\ y_next^post8-y^0 <= 0 /\ -4+pc_Loop^post8 == 0 /\ -7+pc_Drive^post8 <= 0 /\ 7-pc_Drive^post8 <= 0 /\ -n1^post8+n1^0 == 0 /\ x_next^post8-x^0 <= 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x^post8-x_next^post8 == 0 /\ -7+pc_Drive_next^post8 <= 0), cost: 1
   9: l2 -> l3 : n0^0'=n0^post9, x_next^0'=x_next^post9, fair^0'=fair^post9, y_next^0'=y_next^post9, pc_Plan^0'=pc_Plan^post9, pc_Drive^0'=pc_Drive^post9, is_aborted_next^0'=is_aborted_next^post9, x^0'=x^post9, executed_Drive^0'=executed_Drive^post9, pc_Loop^0'=pc_Loop^post9, n1^0'=n1^post9, y^0'=y^post9, is_aborted^0'=is_aborted^post9, pc_Plan_next^0'=pc_Plan_next^post9, pc_Drive_next^0'=pc_Drive_next^post9, (0 == 0 /\ 1-y_next^post9+y^0 <= 0 /\ -1-x^0+x_next^post9 <= 0 /\ 2-pc_Drive^post9 <= 0 /\ -pc_Drive_next^post9+pc_Drive^post9 == 0 /\ y^post9-y_next^post9 == 0 /\ -4+pc_Loop^post9 == 0 /\ 1-pc_Drive_next^post9 <= 0 /\ -7+pc_Plan_next^post9 <= 0 /\ -1+y_next^post9-y^0 <= 0 /\ -1+executed_Drive^post9 == 0 /\ 1+x^0-x_next^post9 <= 0 /\ n1^0-n1^post9 == 0 /\ -2+pc_Drive^post9 <= 0 /\ fair^0-fair^post9 == 0 /\ x^post9-x_next^post9 == 0 /\ -is_aborted_next^post9+is_aborted^post9 == 0 /\ -7+pc_Drive_next^post9 <= 0 /\ -1+is_aborted_next^post9 <= 0 /\ n0^0-n0^post9 == 0 /\ -is_aborted_next^post9 <= 0 /\ 1-pc_Plan_next^post9 <= 0 /\ -pc_Plan_next^post9+pc_Plan^post9 == 0 /\ -4+pc_Drive_next^post9 <= 0 /\ 4-pc_Drive_next^post9 <= 0), cost: 1
  10: l2 -> l3 : n0^0'=n0^post10, x_next^0'=x_next^post10, fair^0'=fair^post10, y_next^0'=y_next^post10, pc_Plan^0'=pc_Plan^post10, pc_Drive^0'=pc_Drive^post10, is_aborted_next^0'=is_aborted_next^post10, x^0'=x^post10, executed_Drive^0'=executed_Drive^post10, pc_Loop^0'=pc_Loop^post10, n1^0'=n1^post10, y^0'=y^post10, is_aborted^0'=is_aborted^post10, pc_Plan_next^0'=pc_Plan_next^post10, pc_Drive_next^0'=pc_Drive_next^post10, (0 == 0 /\ x^0-x_next^post10 <= 0 /\ -2+pc_Drive^post10 <= 0 /\ pc_Plan^post10-pc_Plan_next^post10 == 0 /\ -7+pc_Drive_next^post10 <= 0 /\ -x^0+x_next^post10 <= 0 /\ -4+pc_Loop^post10 == 0 /\ x^post10-x_next^post10 == 0 /\ n0^0-n0^post10 == 0 /\ 5-pc_Drive_next^post10 <= 0 /\ 1-pc_Plan_next^post10 <= 0 /\ -1+is_aborted_next^post10 <= 0 /\ y^0-y_next^post10 <= 0 /\ -fair^post10+fair^0 == 0 /\ -is_aborted_next^post10 <= 0 /\ 2-pc_Drive^post10 <= 0 /\ -pc_Drive_next^post10+pc_Drive^post10 == 0 /\ executed_Drive^post10 == 0 /\ -y^0+y_next^post10 <= 0 /\ 1-pc_Drive_next^post10 <= 0 /\ -is_aborted_next^post10+is_aborted^post10 == 0 /\ -7+pc_Plan_next^post10 <= 0 /\ y^post10-y_next^post10 == 0 /\ -n1^post10+n1^0 == 0), cost: 1
  11: l2 -> l3 : n0^0'=n0^post11, x_next^0'=x_next^post11, fair^0'=fair^post11, y_next^0'=y_next^post11, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=pc_Drive^post11, is_aborted_next^0'=is_aborted_next^post11, x^0'=x^post11, executed_Drive^0'=executed_Drive^post11, pc_Loop^0'=pc_Loop^post11, n1^0'=n1^post11, y^0'=y^post11, is_aborted^0'=is_aborted^post11, pc_Plan_next^0'=pc_Plan_next^post11, pc_Drive_next^0'=pc_Drive_next^post11, (0 == 0 /\ -3+pc_Drive_next^post11 <= 0 /\ y_next^post11-y^0 <= 0 /\ pc_Drive^post11-pc_Drive_next^post11 == 0 /\ -is_aborted_next^post11+is_aborted^post11 == 0 /\ fair^0-fair^post11 == 0 /\ -2+pc_Drive^post11 <= 0 /\ -pc_Plan_next^post11+pc_Plan^post11 == 0 /\ -7+pc_Drive_next^post11 <= 0 /\ -is_aborted_next^post11 <= 0 /\ -y_next^post11+y^0 <= 0 /\ 1-pc_Plan_next^post11 <= 0 /\ n0^0-n0^post11 == 0 /\ 1-is_aborted_next^post11 <= 0 /\ -1+is_aborted_next^post11 <= 0 /\ executed_Drive^post11 == 0 /\ x_next^post11-x^0 <= 0 /\ x^post11-x_next^post11 == 0 /\ -4+pc_Loop^post11 == 0 /\ 2-pc_Drive^post11 <= 0 /\ y^post11-y_next^post11 == 0 /\ 1-pc_Drive_next^post11 <= 0 /\ -n1^post11+n1^0 == 0 /\ -x_next^post11+x^0 <= 0 /\ -7+pc_Plan_next^post11 <= 0), cost: 1
  12: l3 -> l0 : n0^0'=n0^post12, x_next^0'=x_next^post12, fair^0'=fair^post12, y_next^0'=y_next^post12, pc_Plan^0'=pc_Plan^post12, pc_Drive^0'=pc_Drive^post12, is_aborted_next^0'=is_aborted_next^post12, x^0'=x^post12, executed_Drive^0'=executed_Drive^post12, pc_Loop^0'=pc_Loop^post12, n1^0'=n1^post12, y^0'=y^post12, is_aborted^0'=is_aborted^post12, pc_Plan_next^0'=pc_Plan_next^post12, pc_Drive_next^0'=pc_Drive_next^post12, (0 == 0 /\ -1-x^0+x_next^post12 <= 0 /\ x^post12-x_next^post12 == 0 /\ 1-pc_Drive_next^post12 <= 0 /\ -pc_Drive_next^post12+pc_Drive^post12 == 0 /\ n1^0-n1^post12 == 0 /\ 1-y_next^post12+y^0 <= 0 /\ -7+pc_Plan_next^post12 <= 0 /\ 1-is_aborted^post12 <= 0 /\ 1+x^0-x_next^post12 <= 0 /\ -is_aborted_next^post12+is_aborted^post12 == 0 /\ fair^0-fair^post12 == 0 /\ -7+pc_Loop^post12 == 0 /\ -1+executed_Drive^post12 == 0 /\ -pc_Plan_next^post12+pc_Plan^post12 == 0 /\ -7+pc_Drive_next^post12 <= 0 /\ y^post12-y_next^post12 == 0 /\ -is_aborted_next^post12 <= 0 /\ n0^0-n0^post12 == 0 /\ 1-pc_Plan_next^post12 <= 0 /\ -4+pc_Drive_next^post12 <= 0 /\ 4-pc_Drive_next^post12 <= 0 /\ -1+y_next^post12-y^0 <= 0 /\ -1+is_aborted_next^post12 <= 0), cost: 1
  13: l3 -> l0 : n0^0'=n0^post13, x_next^0'=x_next^post13, fair^0'=fair^post13, y_next^0'=y_next^post13, pc_Plan^0'=pc_Plan^post13, pc_Drive^0'=pc_Drive^post13, is_aborted_next^0'=is_aborted_next^post13, x^0'=x^post13, executed_Drive^0'=executed_Drive^post13, pc_Loop^0'=pc_Loop^post13, n1^0'=n1^post13, y^0'=y^post13, is_aborted^0'=is_aborted^post13, pc_Plan_next^0'=pc_Plan_next^post13, pc_Drive_next^0'=pc_Drive_next^post13, (0 == 0 /\ y^post13-y_next^post13 == 0 /\ pc_Plan^post13-pc_Plan_next^post13 == 0 /\ 1-pc_Drive_next^post13 <= 0 /\ -x^0+x_next^post13 <= 0 /\ -7+pc_Plan_next^post13 <= 0 /\ n0^0-n0^post13 == 0 /\ executed_Drive^0-executed_Drive^post13 == 0 /\ -7+pc_Loop^post13 == 0 /\ 1-is_aborted^post13 <= 0 /\ x^0-x_next^post13 <= 0 /\ pc_Drive^post13-pc_Drive_next^post13 == 0 /\ -n1^post13+n1^0 == 0 /\ x^post13-x_next^post13 == 0 /\ -7+pc_Drive_next^post13 <= 0 /\ -is_aborted_next^post13 <= 0 /\ 1-pc_Plan_next^post13 <= 0 /\ -1+is_aborted_next^post13 <= 0 /\ 5-pc_Drive_next^post13 <= 0 /\ -y^0+y_next^post13 <= 0 /\ -is_aborted_next^post13+is_aborted^post13 == 0 /\ fair^0-fair^post13 == 0 /\ y^0-y_next^post13 <= 0), cost: 1
  14: l3 -> l0 : n0^0'=n0^post14, x_next^0'=x_next^post14, fair^0'=fair^post14, y_next^0'=y_next^post14, pc_Plan^0'=pc_Plan^post14, pc_Drive^0'=pc_Drive^post14, is_aborted_next^0'=is_aborted_next^post14, x^0'=x^post14, executed_Drive^0'=executed_Drive^post14, pc_Loop^0'=pc_Loop^post14, n1^0'=n1^post14, y^0'=y^post14, is_aborted^0'=is_aborted^post14, pc_Plan_next^0'=pc_Plan_next^post14, pc_Drive_next^0'=pc_Drive_next^post14, (0 == 0 /\ -7+pc_Drive_next^post14 <= 0 /\ -is_aborted_next^post14 <= 0 /\ x_next^post14-x^0 <= 0 /\ is_aborted^post14-is_aborted_next^post14 == 0 /\ 1-pc_Plan_next^post14 <= 0 /\ -1+is_aborted_next^post14 <= 0 /\ -3+pc_Drive_next^post14 <= 0 /\ -x_next^post14+x^0 <= 0 /\ fair^0-fair^post14 == 0 /\ -pc_Plan_next^post14+pc_Plan^post14 == 0 /\ 1-pc_Drive_next^post14 <= 0 /\ y_next^post14-y^0 <= 0 /\ n0^0-n0^post14 == 0 /\ -7+pc_Plan_next^post14 <= 0 /\ -7+pc_Loop^post14 == 0 /\ 1-is_aborted^post14 <= 0 /\ -executed_Drive^post14+executed_Drive^0 == 0 /\ x^post14-x_next^post14 == 0 /\ -y_next^post14+y^0 <= 0 /\ pc_Drive^post14-pc_Drive_next^post14 == 0 /\ y^post14-y_next^post14 == 0 /\ -n1^post14+n1^0 == 0), cost: 1
  15: l3 -> l0 : n0^0'=n0^post15, x_next^0'=x_next^post15, fair^0'=fair^post15, y_next^0'=y_next^post15, pc_Plan^0'=pc_Plan^post15, pc_Drive^0'=pc_Drive^post15, is_aborted_next^0'=is_aborted_next^post15, x^0'=x^post15, executed_Drive^0'=executed_Drive^post15, pc_Loop^0'=pc_Loop^post15, n1^0'=n1^post15, y^0'=y^post15, is_aborted^0'=is_aborted^post15, pc_Plan_next^0'=pc_Plan_next^post15, pc_Drive_next^0'=pc_Drive_next^post15, (0 == 0 /\ -is_aborted_next^post15 <= 0 /\ -n1^post15+n1^0 == 0 /\ -7+pc_Drive_next^post15 <= 0 /\ 1-pc_Plan_next^post15 <= 0 /\ -is_aborted_next^post15+is_aborted^post15 == 0 /\ -4+pc_Drive_next^post15 <= 0 /\ 4-pc_Drive_next^post15 <= 0 /\ -fair^post15+fair^0 == 0 /\ -1+is_aborted_next^post15 <= 0 /\ -1-x^0+x_next^post15 <= 0 /\ -y_next^post15+y^post15 == 0 /\ -1+y_next^post15-y^0 <= 0 /\ -7+pc_Plan_next^post15 <= 0 /\ 1-pc_Drive_next^post15 <= 0 /\ pc_Plan^post15-pc_Plan_next^post15 == 0 /\ is_aborted^post15 <= 0 /\ -pc_Drive_next^post15+pc_Drive^post15 == 0 /\ n0^0-n0^post15 == 0 /\ 1+x^0-x_next^post15 <= 0 /\ -7+pc_Loop^post15 == 0 /\ n0^0-x^post15 <= 0 /\ 1-y_next^post15+y^0 <= 0 /\ x^post15-x_next^post15 == 0 /\ -1+executed_Drive^post15 == 0 /\ n1^0-y^post15 <= 0), cost: 1
  16: l3 -> l0 : n0^0'=n0^post16, x_next^0'=x_next^post16, fair^0'=fair^post16, y_next^0'=y_next^post16, pc_Plan^0'=pc_Plan^post16, pc_Drive^0'=pc_Drive^post16, is_aborted_next^0'=is_aborted_next^post16, x^0'=x^post16, executed_Drive^0'=executed_Drive^post16, pc_Loop^0'=pc_Loop^post16, n1^0'=n1^post16, y^0'=y^post16, is_aborted^0'=is_aborted^post16, pc_Plan_next^0'=pc_Plan_next^post16, pc_Drive_next^0'=pc_Drive_next^post16, (0 == 0 /\ 1-pc_Drive_next^post16 <= 0 /\ -n1^post16+n1^0 == 0 /\ -x^0+x_next^post16 <= 0 /\ pc_Plan^post16-pc_Plan_next^post16 == 0 /\ executed_Drive^0-executed_Drive^post16 == 0 /\ -7+pc_Plan_next^post16 <= 0 /\ n0^0-n0^post16 == 0 /\ n0^0-x^post16 <= 0 /\ -7+pc_Loop^post16 == 0 /\ x^0-x_next^post16 <= 0 /\ pc_Drive^post16-pc_Drive_next^post16 == 0 /\ is_aborted^post16 <= 0 /\ x^post16-x_next^post16 == 0 /\ n1^0-y^post16 <= 0 /\ -is_aborted_next^post16 <= 0 /\ -7+pc_Drive_next^post16 <= 0 /\ 1-pc_Plan_next^post16 <= 0 /\ -is_aborted_next^post16+is_aborted^post16 == 0 /\ -y^0+y_next^post16 <= 0 /\ -1+is_aborted_next^post16 <= 0 /\ 5-pc_Drive_next^post16 <= 0 /\ y^0-y_next^post16 <= 0 /\ fair^0-fair^post16 == 0 /\ y^post16-y_next^post16 == 0), cost: 1
  17: l3 -> l0 : n0^0'=n0^post17, x_next^0'=x_next^post17, fair^0'=fair^post17, y_next^0'=y_next^post17, pc_Plan^0'=pc_Plan^post17, pc_Drive^0'=pc_Drive^post17, is_aborted_next^0'=is_aborted_next^post17, x^0'=x^post17, executed_Drive^0'=executed_Drive^post17, pc_Loop^0'=pc_Loop^post17, n1^0'=n1^post17, y^0'=y^post17, is_aborted^0'=is_aborted^post17, pc_Plan_next^0'=pc_Plan_next^post17, pc_Drive_next^0'=pc_Drive_next^post17, (0 == 0 /\ is_aborted^post17 <= 0 /\ n0^0-n0^post17 == 0 /\ -7+pc_Plan_next^post17 <= 0 /\ -3+pc_Drive_next^post17 <= 0 /\ -7+pc_Loop^post17 == 0 /\ n0^0-x^post17 <= 0 /\ -7+pc_Drive_next^post17 <= 0 /\ -y^post17+n1^0 <= 0 /\ -is_aborted_next^post17 <= 0 /\ -pc_Plan_next^post17+pc_Plan^post17 == 0 /\ y_next^post17-y^0 <= 0 /\ 1-pc_Plan_next^post17 <= 0 /\ -1+is_aborted_next^post17 <= 0 /\ -x_next^post17+x^post17 == 0 /\ -x_next^post17+x^0 <= 0 /\ n1^0-n1^post17 == 0 /\ pc_Drive^post17-pc_Drive_next^post17 == 0 /\ -y_next^post17+y^0 <= 0 /\ fair^0-fair^post17 == 0 /\ is_aborted^post17-is_aborted_next^post17 == 0 /\ y^post17-y_next^post17 == 0 /\ -executed_Drive^post17+executed_Drive^0 == 0 /\ 1-pc_Drive_next^post17 <= 0 /\ x_next^post17-x^0 <= 0), cost: 1
  18: l3 -> l4 : n0^0'=n0^post18, x_next^0'=x_next^post18, fair^0'=fair^post18, y_next^0'=y_next^post18, pc_Plan^0'=pc_Plan^post18, pc_Drive^0'=pc_Drive^post18, is_aborted_next^0'=is_aborted_next^post18, x^0'=x^post18, executed_Drive^0'=executed_Drive^post18, pc_Loop^0'=pc_Loop^post18, n1^0'=n1^post18, y^0'=y^post18, is_aborted^0'=is_aborted^post18, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=pc_Drive_next^post18, (0 == 0 /\ -is_aborted_next^post18 <= 0 /\ -1+is_aborted_next^post18 <= 0 /\ -1-x^0+x_next^post18 <= 0 /\ pc_Plan^post18-pc_Plan_next^post18 == 0 /\ -1+y_next^post18-y^0 <= 0 /\ -y_next^post18+y^post18 == 0 /\ 1-pc_Plan_next^post18 <= 0 /\ n1^0-n1^post18 == 0 /\ fair^0-fair^post18 == 0 /\ -pc_Drive_next^post18+pc_Drive^post18 == 0 /\ -is_aborted_next^post18+is_aborted^post18 == 0 /\ 1-pc_Drive_next^post18 <= 0 /\ n0^0-n0^post18 == 0 /\ is_aborted^post18 <= 0 /\ 1-n0^0+x^post18 <= 0 /\ 1+x^0-x_next^post18 <= 0 /\ 1-n1^0 <= 0 /\ x^post18-x_next^post18 == 0 /\ -2+pc_Loop^post18 == 0 /\ 1-n1^0+y^post18 <= 0 /\ 1-y_next^post18+y^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -4+pc_Drive_next^post18 <= 0 /\ 4-pc_Drive_next^post18 <= 0 /\ -7+pc_Drive_next^post18 <= 0 /\ 1-executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 == 0 /\ 1-n0^0 <= 0), cost: 1
  19: l3 -> l4 : n0^0'=n0^post19, x_next^0'=x_next^post19, fair^0'=fair^post19, y_next^0'=y_next^post19, pc_Plan^0'=pc_Plan^post19, pc_Drive^0'=pc_Drive^post19, is_aborted_next^0'=is_aborted_next^post19, x^0'=x^post19, executed_Drive^0'=executed_Drive^post19, pc_Loop^0'=pc_Loop^post19, n1^0'=n1^post19, y^0'=y^post19, is_aborted^0'=is_aborted^post19, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -1+is_aborted_next^post19 <= 0 /\ pc_Drive^post19-pc_Drive_next^post19 == 0 /\ 1+y^post19-n1^0 <= 0 /\ y^post19-y_next^post19 == 0 /\ 1-pc_Drive_next^post19 <= 0 /\ -n1^post19+n1^0 == 0 /\ -is_aborted_next^post19 <= 0 /\ -y_next^post19+y^0 <= 0 /\ x^post19-x_next^post19 == 0 /\ is_aborted^post19-is_aborted_next^post19 == 0 /\ is_aborted^post19 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ fair^0-fair^post19 == 0 /\ 1-n0^0+x^post19 <= 0 /\ y_next^post19-y^0 <= 0 /\ 5-pc_Drive_next^post19 <= 0 /\ n0^0-n0^post19 == 0 /\ executed_Drive^0-executed_Drive^post19 == 0 /\ -x_next^post19+x^0 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ pc_Plan^post19-pc_Plan_next^post19 == 0 /\ 1-n1^0 <= 0 /\ -2+pc_Loop^post19 == 0 /\ 1-pc_Plan_next^post19 <= 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post19-x^0 <= 0 /\ 1-n0^0 <= 0), cost: 1
  20: l3 -> l4 : n0^0'=n0^post20, x_next^0'=x_next^post20, fair^0'=fair^post20, y_next^0'=y_next^post20, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive^post20, is_aborted_next^0'=is_aborted_next^post20, x^0'=x^post20, executed_Drive^0'=executed_Drive^post20, pc_Loop^0'=pc_Loop^post20, n1^0'=n1^post20, y^0'=y^post20, is_aborted^0'=is_aborted^post20, pc_Plan_next^0'=pc_Plan_next^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ pc_Drive^post20-pc_Drive_next^post20 == 0 /\ -y_next^post20+y^0 <= 0 /\ 1+y^post20-n1^0 <= 0 /\ 1-pc_Drive_next^post20 <= 0 /\ -2+pc_Loop^post20 == 0 /\ -pc_Plan_next^post20+pc_Plan^post20 == 0 /\ -7+pc_Plan_next^post20 <= 0 /\ y_next^post20-y^0 <= 0 /\ 1+x^post20-n0^0 <= 0 /\ -is_aborted_next^post20+is_aborted^post20 == 0 /\ -executed_Drive^post20+executed_Drive^0 == 0 /\ -1+is_aborted_next^post20 <= 0 /\ -x_next^post20+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Drive_next^post20 <= 0 /\ -is_aborted_next^post20 <= 0 /\ y^post20-y_next^post20 == 0 /\ n1^0-n1^post20 == 0 /\ 1-pc_Plan_next^post20 <= 0 /\ x^post20-x_next^post20 == 0 /\ is_aborted^post20 <= 0 /\ n0^0-n0^post20 == 0 /\ fair^0-fair^post20 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post20-x^0 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1
  24: l4 -> l5 : n0^0'=n0^post24, x_next^0'=x_next^post24, fair^0'=fair^post24, y_next^0'=y_next^post24, pc_Plan^0'=pc_Plan^post24, pc_Drive^0'=pc_Drive^post24, is_aborted_next^0'=is_aborted_next^post24, x^0'=x^post24, executed_Drive^0'=executed_Drive^post24, pc_Loop^0'=pc_Loop^post24, n1^0'=n1^post24, y^0'=y^post24, is_aborted^0'=is_aborted^post24, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=pc_Drive_next^post24, (0 == 0 /\ -1-x^0+x_next^post24 <= 0 /\ -is_aborted_next^post24+is_aborted^post24 == 0 /\ -3+pc_Loop^post24 == 0 /\ is_aborted^post24 <= 0 /\ 1-pc_Drive_next^post24 <= 0 /\ -1-y^0+y_next^post24 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+executed_Drive^post24 == 0 /\ 1+x^0-x_next^post24 <= 0 /\ y^post24-y_next^post24 == 0 /\ -is_aborted_next^post24 <= 0 /\ fair^0-fair^post24 == 0 /\ pc_Drive^post24-pc_Drive_next^post24 == 0 /\ x^post24-x_next^post24 == 0 /\ -1+is_aborted_next^post24 <= 0 /\ pc_Plan^post24-pc_Plan_next^post24 == 0 /\ -7+pc_Drive_next^post24 <= 0 /\ 1+y^0-y_next^post24 <= 0 /\ 1-pc_Plan_next^post24 <= 0 /\ -4+pc_Drive_next^post24 <= 0 /\ 4-pc_Drive_next^post24 <= 0 /\ n0^0-n0^post24 == 0 /\ -n1^post24+n1^0 == 0), cost: 1
  25: l4 -> l5 : n0^0'=n0^post25, x_next^0'=x_next^post25, fair^0'=fair^post25, y_next^0'=y_next^post25, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive^post25, is_aborted_next^0'=is_aborted_next^post25, x^0'=x^post25, executed_Drive^0'=executed_Drive^post25, pc_Loop^0'=pc_Loop^post25, n1^0'=n1^post25, y^0'=y^post25, is_aborted^0'=is_aborted^post25, pc_Plan_next^0'=pc_Plan_next^post25, pc_Drive_next^0'=pc_Drive_next^post25, (0 == 0 /\ -3+pc_Loop^post25 == 0 /\ pc_Drive^post25-pc_Drive_next^post25 == 0 /\ y_next^post25-y^0 <= 0 /\ fair^0-fair^post25 == 0 /\ -pc_Plan_next^post25+pc_Plan^post25 == 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 1-pc_Plan_next^post25 <= 0 /\ n0^0-n0^post25 == 0 /\ 5-pc_Drive_next^post25 <= 0 /\ -y_next^post25+y^0 <= 0 /\ -is_aborted_next^post25 <= 0 /\ x_next^post25-x^0 <= 0 /\ y^post25-y_next^post25 == 0 /\ -is_aborted_next^post25+is_aborted^post25 == 0 /\ -1+is_aborted_next^post25 <= 0 /\ 1-pc_Drive_next^post25 <= 0 /\ -x_next^post25+x^post25 == 0 /\ -executed_Drive^post25+executed_Drive^0 == 0 /\ -x_next^post25+x^0 <= 0 /\ n1^0-n1^post25 == 0 /\ -7+pc_Plan_next^post25 <= 0 /\ is_aborted^post25 <= 0), cost: 1
  26: l4 -> l5 : n0^0'=n0^post26, x_next^0'=x_next^post26, fair^0'=fair^post26, y_next^0'=y_next^post26, pc_Plan^0'=pc_Plan^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=is_aborted_next^post26, x^0'=x^post26, executed_Drive^0'=executed_Drive^post26, pc_Loop^0'=pc_Loop^post26, n1^0'=n1^post26, y^0'=y^post26, is_aborted^0'=is_aborted^post26, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive_next^post26, (0 == 0 /\ -n1^post26+n1^0 == 0 /\ -pc_Drive_next^post26+pc_Drive^post26 == 0 /\ x^0-x_next^post26 <= 0 /\ -7+pc_Drive_next^post26 <= 0 /\ x^post26-x_next^post26 == 0 /\ -is_aborted_next^post26 <= 0 /\ pc_Plan^post26-pc_Plan_next^post26 == 0 /\ -x^0+x_next^post26 <= 0 /\ 1-pc_Plan_next^post26 <= 0 /\ -3+pc_Drive_next^post26 <= 0 /\ -1+is_aborted_next^post26 <= 0 /\ n0^0-n0^post26 == 0 /\ is_aborted^post26 <= 0 /\ -3+pc_Loop^post26 == 0 /\ y^0-y_next^post26 <= 0 /\ -fair^post26+fair^0 == 0 /\ y^post26-y_next^post26 == 0 /\ 1-pc_Drive_next^post26 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -executed_Drive^post26+executed_Drive^0 == 0 /\ -y^0+y_next^post26 <= 0 /\ -is_aborted_next^post26+is_aborted^post26 == 0), cost: 1
  27: l4 -> l0 : n0^0'=n0^post27, x_next^0'=x_next^post27, fair^0'=fair^post27, y_next^0'=y_next^post27, pc_Plan^0'=pc_Plan^post27, pc_Drive^0'=pc_Drive^post27, is_aborted_next^0'=is_aborted_next^post27, x^0'=x^post27, executed_Drive^0'=executed_Drive^post27, pc_Loop^0'=pc_Loop^post27, n1^0'=n1^post27, y^0'=y^post27, is_aborted^0'=is_aborted^post27, pc_Plan_next^0'=pc_Plan_next^post27, pc_Drive_next^0'=pc_Drive_next^post27, (0 == 0 /\ -1-x^0+x_next^post27 <= 0 /\ y^post27-y_next^post27 == 0 /\ x^post27-x_next^post27 == 0 /\ -n1^post27+n1^0 == 0 /\ 1+y^0-y_next^post27 <= 0 /\ 1-pc_Drive_next^post27 <= 0 /\ -7+pc_Plan_next^post27 <= 0 /\ -is_aborted_next^post27+is_aborted^post27 == 0 /\ 1-is_aborted^post27 <= 0 /\ 1+x^0-x_next^post27 <= 0 /\ pc_Drive^post27-pc_Drive_next^post27 == 0 /\ fair^0-fair^post27 == 0 /\ -1-y^0+y_next^post27 <= 0 /\ pc_Plan^post27-pc_Plan_next^post27 == 0 /\ -is_aborted_next^post27 <= 0 /\ -7+pc_Loop^post27 == 0 /\ -7+pc_Drive_next^post27 <= 0 /\ 1-pc_Plan_next^post27 <= 0 /\ -4+pc_Drive_next^post27 <= 0 /\ 4-pc_Drive_next^post27 <= 0 /\ -1+executed_Drive^post27 == 0 /\ -1+is_aborted_next^post27 <= 0 /\ n0^0-n0^post27 == 0), cost: 1
  28: l4 -> l0 : n0^0'=n0^post28, x_next^0'=x_next^post28, fair^0'=fair^post28, y_next^0'=y_next^post28, pc_Plan^0'=pc_Plan^post28, pc_Drive^0'=pc_Drive^post28, is_aborted_next^0'=is_aborted_next^post28, x^0'=x^post28, executed_Drive^0'=executed_Drive^post28, pc_Loop^0'=pc_Loop^post28, n1^0'=n1^post28, y^0'=y^post28, is_aborted^0'=is_aborted^post28, pc_Plan_next^0'=pc_Plan_next^post28, pc_Drive_next^0'=pc_Drive_next^post28, (0 == 0 /\ 1-pc_Drive_next^post28 <= 0 /\ -x_next^post28+x^0 <= 0 /\ -7+pc_Plan_next^post28 <= 0 /\ -7+pc_Loop^post28 == 0 /\ -executed_Drive^post28+executed_Drive^0 == 0 /\ 1-is_aborted^post28 <= 0 /\ -x_next^post28+x^post28 == 0 /\ -is_aborted_next^post28+is_aborted^post28 == 0 /\ x_next^post28-x^0 <= 0 /\ 5-pc_Drive_next^post28 <= 0 /\ fair^0-fair^post28 == 0 /\ -7+pc_Drive_next^post28 <= 0 /\ -y_next^post28+y^0 <= 0 /\ -pc_Drive_next^post28+pc_Drive^post28 == 0 /\ -is_aborted_next^post28 <= 0 /\ n1^0-n1^post28 == 0 /\ n0^0-n0^post28 == 0 /\ 1-pc_Plan_next^post28 <= 0 /\ y^post28-y_next^post28 == 0 /\ -pc_Plan_next^post28+pc_Plan^post28 == 0 /\ -1+is_aborted_next^post28 <= 0 /\ y_next^post28-y^0 <= 0), cost: 1
  29: l4 -> l0 : n0^0'=n0^post29, x_next^0'=x_next^post29, fair^0'=fair^post29, y_next^0'=y_next^post29, pc_Plan^0'=pc_Plan^post29, pc_Drive^0'=pc_Drive^post29, is_aborted_next^0'=is_aborted_next^post29, x^0'=x^post29, executed_Drive^0'=executed_Drive^post29, pc_Loop^0'=pc_Loop^post29, n1^0'=n1^post29, y^0'=y^post29, is_aborted^0'=is_aborted^post29, pc_Plan_next^0'=pc_Plan_next^post29, pc_Drive_next^0'=pc_Drive_next^post29, (0 == 0 /\ -7+pc_Loop^post29 == 0 /\ y^post29-y_next^post29 == 0 /\ -7+pc_Drive_next^post29 <= 0 /\ -pc_Drive_next^post29+pc_Drive^post29 == 0 /\ n0^0-n0^post29 == 0 /\ -is_aborted_next^post29 <= 0 /\ 1-pc_Plan_next^post29 <= 0 /\ executed_Drive^0-executed_Drive^post29 == 0 /\ -1+is_aborted_next^post29 <= 0 /\ -3+pc_Drive_next^post29 <= 0 /\ x^post29-x_next^post29 == 0 /\ -n1^post29+n1^0 == 0 /\ -x^0+x_next^post29 <= 0 /\ y^0-y_next^post29 <= 0 /\ pc_Plan^post29-pc_Plan_next^post29 == 0 /\ 1-pc_Drive_next^post29 <= 0 /\ -7+pc_Plan_next^post29 <= 0 /\ -fair^post29+fair^0 == 0 /\ x^0-x_next^post29 <= 0 /\ -y^0+y_next^post29 <= 0 /\ 1-is_aborted^post29 <= 0 /\ -is_aborted_next^post29+is_aborted^post29 == 0), cost: 1
  21: l5 -> l2 : n0^0'=n0^post21, x_next^0'=x_next^post21, fair^0'=fair^post21, y_next^0'=y_next^post21, pc_Plan^0'=pc_Plan^post21, pc_Drive^0'=pc_Drive^post21, is_aborted_next^0'=is_aborted_next^post21, x^0'=x^post21, executed_Drive^0'=executed_Drive^post21, pc_Loop^0'=pc_Loop^post21, n1^0'=n1^post21, y^0'=y^post21, is_aborted^0'=is_aborted^post21, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=pc_Drive_next^post21, (0 == 0 /\ -4+pc_Drive_next^post21 <= 0 /\ 4-pc_Drive_next^post21 <= 0 /\ -7+pc_Drive_next^post21 <= 0 /\ 1-pc_Plan_next^post21 <= 0 /\ n0^0-n0^post21 == 0 /\ -1-y^0+y_next^post21 <= 0 /\ -1-x^0+x_next^post21 <= 0 /\ -6+pc_Loop^post21 == 0 /\ pc_Plan^post21-pc_Plan_next^post21 == 0 /\ -1+executed_Drive^post21 == 0 /\ -pc_Drive_next^post21+pc_Drive^post21 == 0 /\ x^post21-x_next^post21 == 0 /\ 1-pc_Drive_next^post21 <= 0 /\ -is_aborted_next^post21+is_aborted^post21 == 0 /\ y^post21-y_next^post21 == 0 /\ -1+is_aborted_next^post21 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1+y^0-y_next^post21 <= 0 /\ 1+x^0-x_next^post21 <= 0 /\ -is_aborted_next^post21 <= 0 /\ 1-is_aborted^post21 <= 0 /\ -n1^post21+n1^0 == 0 /\ fair^0-fair^post21 == 0), cost: 1
  22: l5 -> l2 : n0^0'=n0^post22, x_next^0'=x_next^post22, fair^0'=fair^post22, y_next^0'=y_next^post22, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive^post22, is_aborted_next^0'=is_aborted_next^post22, x^0'=x^post22, executed_Drive^0'=executed_Drive^post22, pc_Loop^0'=pc_Loop^post22, n1^0'=n1^post22, y^0'=y^post22, is_aborted^0'=is_aborted^post22, pc_Plan_next^0'=pc_Plan_next^post22, pc_Drive_next^0'=pc_Drive_next^post22, (0 == 0 /\ y^post22-y_next^post22 == 0 /\ -pc_Plan_next^post22+pc_Plan^post22 == 0 /\ 1-is_aborted^post22 <= 0 /\ -executed_Drive^post22+executed_Drive^0 == 0 /\ fair^0-fair^post22 == 0 /\ x^post22-x_next^post22 == 0 /\ -1+is_aborted_next^post22 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ pc_Drive^post22-pc_Drive_next^post22 == 0 /\ -is_aborted_next^post22+is_aborted^post22 == 0 /\ -is_aborted_next^post22 <= 0 /\ 5-pc_Drive_next^post22 <= 0 /\ n0^0-n0^post22 == 0 /\ 1-pc_Plan_next^post22 <= 0 /\ -y_next^post22+y^0 <= 0 /\ x_next^post22-x^0 <= 0 /\ 1-pc_Drive_next^post22 <= 0 /\ y_next^post22-y^0 <= 0 /\ -x_next^post22+x^0 <= 0 /\ -n1^post22+n1^0 == 0 /\ -7+pc_Plan_next^post22 <= 0 /\ -6+pc_Loop^post22 == 0), cost: 1
  23: l5 -> l2 : n0^0'=n0^post23, x_next^0'=x_next^post23, fair^0'=fair^post23, y_next^0'=y_next^post23, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=is_aborted_next^post23, x^0'=x^post23, executed_Drive^0'=executed_Drive^post23, pc_Loop^0'=pc_Loop^post23, n1^0'=n1^post23, y^0'=y^post23, is_aborted^0'=is_aborted^post23, pc_Plan_next^0'=pc_Plan_next^post23, pc_Drive_next^0'=pc_Drive_next^post23, (0 == 0 /\ -pc_Drive_next^post23+pc_Drive^post23 == 0 /\ -is_aborted_next^post23 <= 0 /\ -is_aborted_next^post23+is_aborted^post23 == 0 /\ -1+is_aborted_next^post23 <= 0 /\ -y_next^post23+y^post23 == 0 /\ 1-pc_Drive_next^post23 <= 0 /\ -7+pc_Plan_next^post23 <= 0 /\ x^0-x_next^post23 <= 0 /\ -3+pc_Drive_next^post23 <= 0 /\ 1-is_aborted^post23 <= 0 /\ y_next^post23-y^0 <= 0 /\ x^post23-x_next^post23 == 0 /\ fair^0-fair^post23 == 0 /\ -x^0+x_next^post23 <= 0 /\ -7+pc_Drive_next^post23 <= 0 /\ -executed_Drive^post23+executed_Drive^0 == 0 /\ -y_next^post23+y^0 <= 0 /\ -6+pc_Loop^post23 == 0 /\ n0^0-n0^post23 == 0 /\ -pc_Plan_next^post23+pc_Plan^post23 == 0 /\ -n1^post23+n1^0 == 0 /\ 1-pc_Plan_next^post23 <= 0), cost: 1
  36: l6 -> l1 : n0^0'=n0^post36, x_next^0'=x_next^post36, fair^0'=fair^post36, y_next^0'=y_next^post36, pc_Plan^0'=pc_Plan^post36, pc_Drive^0'=pc_Drive^post36, is_aborted_next^0'=is_aborted_next^post36, x^0'=x^post36, executed_Drive^0'=executed_Drive^post36, pc_Loop^0'=pc_Loop^post36, n1^0'=n1^post36, y^0'=y^post36, is_aborted^0'=is_aborted^post36, pc_Plan_next^0'=pc_Plan_next^post36, pc_Drive_next^0'=pc_Drive_next^post36, (-is_aborted^post36+is_aborted^0 == 0 /\ -x^post36+x^0 == 0 /\ fair^0-fair^post36 == 0 /\ -pc_Drive^post36+pc_Drive^0 == 0 /\ -y^post36+y^0 == 0 /\ -executed_Drive^post36+executed_Drive^0 == 0 /\ is_aborted_next^0-is_aborted_next^post36 == 0 /\ pc_Loop^0-pc_Loop^post36 == 0 /\ x_next^0-x_next^post36 == 0 /\ y_next^0-y_next^post36 == 0 /\ pc_Plan^0-pc_Plan^post36 == 0 /\ -n0^post36+n0^0 == 0 /\ n1^0-n1^post36 == 0 /\ -pc_Drive_next^post36+pc_Drive_next^0 == 0 /\ -pc_Plan_next^post36+pc_Plan_next^0 == 0), cost: 1
  37: l7 -> l6 : n0^0'=n0^post37, x_next^0'=x_next^post37, fair^0'=fair^post37, y_next^0'=y_next^post37, pc_Plan^0'=pc_Plan^post37, pc_Drive^0'=pc_Drive^post37, is_aborted_next^0'=is_aborted_next^post37, x^0'=x^post37, executed_Drive^0'=executed_Drive^post37, pc_Loop^0'=pc_Loop^post37, n1^0'=n1^post37, y^0'=y^post37, is_aborted^0'=is_aborted^post37, pc_Plan_next^0'=pc_Plan_next^post37, pc_Drive_next^0'=pc_Drive_next^post37, (pc_Plan_next^0-pc_Plan_next^post37 == 0 /\ -is_aborted^post37+is_aborted^0 == 0 /\ pc_Plan^0-pc_Plan^post37 == 0 /\ -pc_Loop^post37+pc_Loop^0 == 0 /\ -y_next^post37+y_next^0 == 0 /\ n1^0-n1^post37 == 0 /\ x_next^0-x_next^post37 == 0 /\ -y^post37+y^0 == 0 /\ -executed_Drive^post37+executed_Drive^0 == 0 /\ fair^0-fair^post37 == 0 /\ n0^0-n0^post37 == 0 /\ pc_Drive^0-pc_Drive^post37 == 0 /\ is_aborted_next^0-is_aborted_next^post37 == 0 /\ -pc_Drive_next^post37+pc_Drive_next^0 == 0 /\ x^0-x^post37 == 0), cost: 1


Removed rules with unsatisfiable guard
Start location: l7
  30: l1 -> l0 : n0^0'=n0^post30, x_next^0'=x_next^post30, fair^0'=fair^post30, y_next^0'=y_next^post30, pc_Plan^0'=pc_Plan^post30, pc_Drive^0'=pc_Drive^post30, is_aborted_next^0'=is_aborted_next^post30, x^0'=x^post30, executed_Drive^0'=executed_Drive^post30, pc_Loop^0'=pc_Loop^post30, n1^0'=n1^post30, y^0'=y^post30, is_aborted^0'=is_aborted^post30, pc_Plan_next^0'=pc_Plan_next^post30, pc_Drive_next^0'=pc_Drive_next^post30, (0 == 0 /\ 1-fair^0+fair^post30 == 0 /\ 1-pc_Plan_next^post30 <= 0 /\ -1+is_aborted_next^post30 <= 0 /\ -y_next^post30+y^0 <= 0 /\ -n1^post30+n1^0 == 0 /\ -is_aborted_next^post30 <= 0 /\ pc_Drive^post30-pc_Drive_next^post30 == 0 /\ pc_Plan^post30-pc_Plan_next^post30 == 0 /\ y_next^post30-y^0 <= 0 /\ 1-pc_Drive_next^post30 <= 0 /\ executed_Drive^post30 == 0 /\ -7+pc_Plan_next^post30 <= 0 /\ n0^0-n0^post30 == 0 /\ 1-fair^0 <= 0 /\ y^post30-y_next^post30 == 0 /\ -x_next^post30+x^0 <= 0 /\ -3+pc_Drive_next^post30 <= 0 /\ 1-is_aborted^post30 <= 0 /\ x^post30-x_next^post30 == 0 /\ is_aborted^post30-is_aborted_next^post30 == 0 /\ -7+pc_Loop^post30 == 0 /\ x_next^post30-x^0 <= 0 /\ -7+pc_Drive_next^post30 <= 0), cost: 1
  31: l1 -> l4 : n0^0'=n0^post31, x_next^0'=x_next^post31, fair^0'=fair^post31, y_next^0'=y_next^post31, pc_Plan^0'=pc_Plan^post31, pc_Drive^0'=pc_Drive^post31, is_aborted_next^0'=is_aborted_next^post31, x^0'=x^post31, executed_Drive^0'=executed_Drive^post31, pc_Loop^0'=pc_Loop^post31, n1^0'=n1^post31, y^0'=y^post31, is_aborted^0'=is_aborted^post31, pc_Plan_next^0'=pc_Plan_next^post31, pc_Drive_next^0'=pc_Drive_next^post31, (0 == 0 /\ n0^0-n0^post31 == 0 /\ -7+pc_Plan_next^post31 <= 0 /\ 3-pc_Plan^post31 <= 0 /\ -1+x_next^post31-x^0 <= 0 /\ -2+pc_Loop^post31 == 0 /\ 1-y_next^post31+y^0 <= 0 /\ -4+pc_Drive_next^post31 <= 0 /\ 4-pc_Drive_next^post31 <= 0 /\ -1+executed_Drive^post31 == 0 /\ -7+pc_Drive_next^post31 <= 0 /\ -is_aborted_next^post31 <= 0 /\ 1-pc_Plan_next^post31 <= 0 /\ -pc_Plan_next^post31+pc_Plan^post31 == 0 /\ -1+is_aborted_next^post31 <= 0 /\ -3+pc_Plan^post31 <= 0 /\ y^post31-y_next^post31 == 0 /\ -x_next^post31+x^post31 == 0 /\ 1-x_next^post31+x^0 <= 0 /\ -is_aborted_next^post31+is_aborted^post31 == 0 /\ -1+y_next^post31-y^0 <= 0 /\ pc_Drive^post31-pc_Drive_next^post31 == 0 /\ n1^0-n1^post31 == 0 /\ fair^0-fair^post31 == 0 /\ is_aborted^post31 <= 0 /\ 1-pc_Drive_next^post31 <= 0), cost: 1
  32: l1 -> l4 : n0^0'=n0^post32, x_next^0'=x_next^post32, fair^0'=fair^post32, y_next^0'=y_next^post32, pc_Plan^0'=pc_Plan^post32, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=is_aborted_next^post32, x^0'=x^post32, executed_Drive^0'=executed_Drive^post32, pc_Loop^0'=pc_Loop^post32, n1^0'=n1^post32, y^0'=y^post32, is_aborted^0'=is_aborted^post32, pc_Plan_next^0'=pc_Plan_next^post32, pc_Drive_next^0'=pc_Drive_next^post32, (0 == 0 /\ n0^0-n0^post32 == 0 /\ -7+pc_Plan_next^post32 <= 0 /\ x^0-x_next^post32 <= 0 /\ 3-pc_Plan^post32 <= 0 /\ -n1^post32+n1^0 == 0 /\ -2+pc_Loop^post32 == 0 /\ y^post32-y_next^post32 == 0 /\ 5-pc_Drive_next^post32 <= 0 /\ is_aborted^post32 <= 0 /\ -x^0+x_next^post32 <= 0 /\ -7+pc_Drive_next^post32 <= 0 /\ 1-pc_Plan_next^post32 <= 0 /\ -1+is_aborted_next^post32 <= 0 /\ y^0-y_next^post32 <= 0 /\ -3+pc_Plan^post32 <= 0 /\ -is_aborted_next^post32 <= 0 /\ x^post32-x_next^post32 == 0 /\ fair^0-fair^post32 == 0 /\ -pc_Drive_next^post32+pc_Drive^post32 == 0 /\ -is_aborted_next^post32+is_aborted^post32 == 0 /\ executed_Drive^post32 == 0 /\ -y^0+y_next^post32 <= 0 /\ pc_Plan^post32-pc_Plan_next^post32 == 0 /\ 1-pc_Drive_next^post32 <= 0), cost: 1
  33: l1 -> l4 : n0^0'=n0^post33, x_next^0'=x_next^post33, fair^0'=fair^post33, y_next^0'=y_next^post33, pc_Plan^0'=pc_Plan^post33, pc_Drive^0'=pc_Drive^post33, is_aborted_next^0'=is_aborted_next^post33, x^0'=x^post33, executed_Drive^0'=executed_Drive^post33, pc_Loop^0'=pc_Loop^post33, n1^0'=n1^post33, y^0'=y^post33, is_aborted^0'=is_aborted^post33, pc_Plan_next^0'=pc_Plan_next^post33, pc_Drive_next^0'=pc_Drive_next^post33, (0 == 0 /\ 1-pc_Plan_next^post33 <= 0 /\ is_aborted^post33 <= 0 /\ -1+is_aborted_next^post33 <= 0 /\ is_aborted^post33-is_aborted_next^post33 == 0 /\ -3+pc_Plan^post33 <= 0 /\ -is_aborted_next^post33 <= 0 /\ -y_next^post33+y^0 <= 0 /\ fair^0-fair^post33 == 0 /\ pc_Drive^post33-pc_Drive_next^post33 == 0 /\ -n1^post33+n1^0 == 0 /\ x^post33-x_next^post33 == 0 /\ 1-pc_Drive_next^post33 <= 0 /\ pc_Plan^post33-pc_Plan_next^post33 == 0 /\ y_next^post33-y^0 <= 0 /\ n0^0-n0^post33 == 0 /\ -x_next^post33+x^0 <= 0 /\ executed_Drive^post33 == 0 /\ -7+pc_Plan_next^post33 <= 0 /\ 3-pc_Plan^post33 <= 0 /\ -3+pc_Drive_next^post33 <= 0 /\ -2+pc_Loop^post33 == 0 /\ y^post33-y_next^post33 == 0 /\ x_next^post33-x^0 <= 0 /\ -7+pc_Drive_next^post33 <= 0), cost: 1
  34: l1 -> l0 : n0^0'=n0^post34, x_next^0'=x_next^post34, fair^0'=fair^post34, y_next^0'=y_next^post34, pc_Plan^0'=pc_Plan^post34, pc_Drive^0'=pc_Drive^post34, is_aborted_next^0'=is_aborted_next^post34, x^0'=x^post34, executed_Drive^0'=executed_Drive^post34, pc_Loop^0'=pc_Loop^post34, n1^0'=n1^post34, y^0'=y^post34, is_aborted^0'=is_aborted^post34, pc_Plan_next^0'=pc_Plan_next^post34, pc_Drive_next^0'=pc_Drive_next^post34, (0 == 0 /\ -1+is_aborted_next^post34 <= 0 /\ 1-y_next^post34+y^0 <= 0 /\ -is_aborted_next^post34 <= 0 /\ -1-x^0+x_next^post34 <= 0 /\ -pc_Drive_next^post34+pc_Drive^post34 == 0 /\ fair^0-fair^post34 == 0 /\ 1-pc_Drive_next^post34 <= 0 /\ -7+pc_Plan_next^post34 <= 0 /\ 1-is_aborted^post34 <= 0 /\ n1^0-n1^post34 == 0 /\ x^post34-x_next^post34 == 0 /\ -1+y_next^post34-y^0 <= 0 /\ -pc_Plan_next^post34+pc_Plan^post34 == 0 /\ 1+x^0-x_next^post34 <= 0 /\ -7+pc_Loop^post34 == 0 /\ -is_aborted_next^post34+is_aborted^post34 == 0 /\ 1-pc_Plan_next^post34 <= 0 /\ -7+pc_Drive_next^post34 <= 0 /\ y^post34-y_next^post34 == 0 /\ -1+executed_Drive^post34 == 0 /\ n0^0-n0^post34 == 0 /\ -4+pc_Drive_next^post34 <= 0 /\ 4-pc_Drive_next^post34 <= 0), cost: 1
  35: l1 -> l0 : n0^0'=n0^post35, x_next^0'=x_next^post35, fair^0'=fair^post35, y_next^0'=y_next^post35, pc_Plan^0'=pc_Plan^post35, pc_Drive^0'=pc_Drive^post35, is_aborted_next^0'=is_aborted_next^post35, x^0'=x^post35, executed_Drive^0'=executed_Drive^post35, pc_Loop^0'=pc_Loop^post35, n1^0'=n1^post35, y^0'=y^post35, is_aborted^0'=is_aborted^post35, pc_Plan_next^0'=pc_Plan_next^post35, pc_Drive_next^0'=pc_Drive_next^post35, (0 == 0 /\ pc_Drive^post35-pc_Drive_next^post35 == 0 /\ 1-pc_Drive_next^post35 <= 0 /\ n0^0-n0^post35 == 0 /\ -7+pc_Plan_next^post35 <= 0 /\ -7+pc_Loop^post35 == 0 /\ x^0-x_next^post35 <= 0 /\ y^post35-y_next^post35 == 0 /\ -n1^post35+n1^0 == 0 /\ 1-is_aborted^post35 <= 0 /\ -x^0+x_next^post35 <= 0 /\ y^0-y_next^post35 <= 0 /\ -is_aborted_next^post35+is_aborted^post35 == 0 /\ -7+pc_Drive_next^post35 <= 0 /\ -1+is_aborted_next^post35 <= 0 /\ -is_aborted_next^post35 <= 0 /\ 5-pc_Drive_next^post35 <= 0 /\ 1-pc_Plan_next^post35 <= 0 /\ -y^0+y_next^post35 <= 0 /\ fair^0-fair^post35 == 0 /\ executed_Drive^post35 == 0 /\ x^post35-x_next^post35 == 0 /\ pc_Plan^post35-pc_Plan_next^post35 == 0), cost: 1
   7: l2 -> l3 : n0^0'=n0^post7, x_next^0'=x_next^post7, fair^0'=fair^post7, y_next^0'=y_next^post7, pc_Plan^0'=pc_Plan^post7, pc_Drive^0'=pc_Drive^post7, is_aborted_next^0'=is_aborted_next^post7, x^0'=x^post7, executed_Drive^0'=executed_Drive^post7, pc_Loop^0'=pc_Loop^post7, n1^0'=n1^post7, y^0'=y^post7, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=pc_Drive_next^post7, (0 == 0 /\ -7+pc_Drive^post7 <= 0 /\ 7-pc_Drive^post7 <= 0 /\ -y_next^post7+y^post7 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ n0^0-n0^post7 == 0 /\ x^0-x_next^post7 <= 0 /\ 5-pc_Drive_next^post7 <= 0 /\ x^post7-x_next^post7 == 0 /\ -1+is_aborted_next^post7 <= 0 /\ executed_Drive^0-executed_Drive^post7 == 0 /\ -is_aborted_next^post7+is_aborted^post7 == 0 /\ -is_aborted_next^post7 <= 0 /\ -7+pc_Drive_next^post7 <= 0 /\ -x^0+x_next^post7 <= 0 /\ 1-pc_Plan_next^post7 <= 0 /\ -pc_Drive_next^post7+pc_Drive^post7 == 0 /\ -y_next^post7+y^0 <= 0 /\ fair^0-fair^post7 == 0 /\ -n1^post7+n1^0 == 0 /\ pc_Plan^post7-pc_Plan_next^post7 == 0 /\ -4+pc_Loop^post7 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ 1-pc_Drive_next^post7 <= 0 /\ y_next^post7-y^0 <= 0), cost: 1
  11: l2 -> l3 : n0^0'=n0^post11, x_next^0'=x_next^post11, fair^0'=fair^post11, y_next^0'=y_next^post11, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=pc_Drive^post11, is_aborted_next^0'=is_aborted_next^post11, x^0'=x^post11, executed_Drive^0'=executed_Drive^post11, pc_Loop^0'=pc_Loop^post11, n1^0'=n1^post11, y^0'=y^post11, is_aborted^0'=is_aborted^post11, pc_Plan_next^0'=pc_Plan_next^post11, pc_Drive_next^0'=pc_Drive_next^post11, (0 == 0 /\ -3+pc_Drive_next^post11 <= 0 /\ y_next^post11-y^0 <= 0 /\ pc_Drive^post11-pc_Drive_next^post11 == 0 /\ -is_aborted_next^post11+is_aborted^post11 == 0 /\ fair^0-fair^post11 == 0 /\ -2+pc_Drive^post11 <= 0 /\ -pc_Plan_next^post11+pc_Plan^post11 == 0 /\ -7+pc_Drive_next^post11 <= 0 /\ -is_aborted_next^post11 <= 0 /\ -y_next^post11+y^0 <= 0 /\ 1-pc_Plan_next^post11 <= 0 /\ n0^0-n0^post11 == 0 /\ 1-is_aborted_next^post11 <= 0 /\ -1+is_aborted_next^post11 <= 0 /\ executed_Drive^post11 == 0 /\ x_next^post11-x^0 <= 0 /\ x^post11-x_next^post11 == 0 /\ -4+pc_Loop^post11 == 0 /\ 2-pc_Drive^post11 <= 0 /\ y^post11-y_next^post11 == 0 /\ 1-pc_Drive_next^post11 <= 0 /\ -n1^post11+n1^0 == 0 /\ -x_next^post11+x^0 <= 0 /\ -7+pc_Plan_next^post11 <= 0), cost: 1
  12: l3 -> l0 : n0^0'=n0^post12, x_next^0'=x_next^post12, fair^0'=fair^post12, y_next^0'=y_next^post12, pc_Plan^0'=pc_Plan^post12, pc_Drive^0'=pc_Drive^post12, is_aborted_next^0'=is_aborted_next^post12, x^0'=x^post12, executed_Drive^0'=executed_Drive^post12, pc_Loop^0'=pc_Loop^post12, n1^0'=n1^post12, y^0'=y^post12, is_aborted^0'=is_aborted^post12, pc_Plan_next^0'=pc_Plan_next^post12, pc_Drive_next^0'=pc_Drive_next^post12, (0 == 0 /\ -1-x^0+x_next^post12 <= 0 /\ x^post12-x_next^post12 == 0 /\ 1-pc_Drive_next^post12 <= 0 /\ -pc_Drive_next^post12+pc_Drive^post12 == 0 /\ n1^0-n1^post12 == 0 /\ 1-y_next^post12+y^0 <= 0 /\ -7+pc_Plan_next^post12 <= 0 /\ 1-is_aborted^post12 <= 0 /\ 1+x^0-x_next^post12 <= 0 /\ -is_aborted_next^post12+is_aborted^post12 == 0 /\ fair^0-fair^post12 == 0 /\ -7+pc_Loop^post12 == 0 /\ -1+executed_Drive^post12 == 0 /\ -pc_Plan_next^post12+pc_Plan^post12 == 0 /\ -7+pc_Drive_next^post12 <= 0 /\ y^post12-y_next^post12 == 0 /\ -is_aborted_next^post12 <= 0 /\ n0^0-n0^post12 == 0 /\ 1-pc_Plan_next^post12 <= 0 /\ -4+pc_Drive_next^post12 <= 0 /\ 4-pc_Drive_next^post12 <= 0 /\ -1+y_next^post12-y^0 <= 0 /\ -1+is_aborted_next^post12 <= 0), cost: 1
  13: l3 -> l0 : n0^0'=n0^post13, x_next^0'=x_next^post13, fair^0'=fair^post13, y_next^0'=y_next^post13, pc_Plan^0'=pc_Plan^post13, pc_Drive^0'=pc_Drive^post13, is_aborted_next^0'=is_aborted_next^post13, x^0'=x^post13, executed_Drive^0'=executed_Drive^post13, pc_Loop^0'=pc_Loop^post13, n1^0'=n1^post13, y^0'=y^post13, is_aborted^0'=is_aborted^post13, pc_Plan_next^0'=pc_Plan_next^post13, pc_Drive_next^0'=pc_Drive_next^post13, (0 == 0 /\ y^post13-y_next^post13 == 0 /\ pc_Plan^post13-pc_Plan_next^post13 == 0 /\ 1-pc_Drive_next^post13 <= 0 /\ -x^0+x_next^post13 <= 0 /\ -7+pc_Plan_next^post13 <= 0 /\ n0^0-n0^post13 == 0 /\ executed_Drive^0-executed_Drive^post13 == 0 /\ -7+pc_Loop^post13 == 0 /\ 1-is_aborted^post13 <= 0 /\ x^0-x_next^post13 <= 0 /\ pc_Drive^post13-pc_Drive_next^post13 == 0 /\ -n1^post13+n1^0 == 0 /\ x^post13-x_next^post13 == 0 /\ -7+pc_Drive_next^post13 <= 0 /\ -is_aborted_next^post13 <= 0 /\ 1-pc_Plan_next^post13 <= 0 /\ -1+is_aborted_next^post13 <= 0 /\ 5-pc_Drive_next^post13 <= 0 /\ -y^0+y_next^post13 <= 0 /\ -is_aborted_next^post13+is_aborted^post13 == 0 /\ fair^0-fair^post13 == 0 /\ y^0-y_next^post13 <= 0), cost: 1
  14: l3 -> l0 : n0^0'=n0^post14, x_next^0'=x_next^post14, fair^0'=fair^post14, y_next^0'=y_next^post14, pc_Plan^0'=pc_Plan^post14, pc_Drive^0'=pc_Drive^post14, is_aborted_next^0'=is_aborted_next^post14, x^0'=x^post14, executed_Drive^0'=executed_Drive^post14, pc_Loop^0'=pc_Loop^post14, n1^0'=n1^post14, y^0'=y^post14, is_aborted^0'=is_aborted^post14, pc_Plan_next^0'=pc_Plan_next^post14, pc_Drive_next^0'=pc_Drive_next^post14, (0 == 0 /\ -7+pc_Drive_next^post14 <= 0 /\ -is_aborted_next^post14 <= 0 /\ x_next^post14-x^0 <= 0 /\ is_aborted^post14-is_aborted_next^post14 == 0 /\ 1-pc_Plan_next^post14 <= 0 /\ -1+is_aborted_next^post14 <= 0 /\ -3+pc_Drive_next^post14 <= 0 /\ -x_next^post14+x^0 <= 0 /\ fair^0-fair^post14 == 0 /\ -pc_Plan_next^post14+pc_Plan^post14 == 0 /\ 1-pc_Drive_next^post14 <= 0 /\ y_next^post14-y^0 <= 0 /\ n0^0-n0^post14 == 0 /\ -7+pc_Plan_next^post14 <= 0 /\ -7+pc_Loop^post14 == 0 /\ 1-is_aborted^post14 <= 0 /\ -executed_Drive^post14+executed_Drive^0 == 0 /\ x^post14-x_next^post14 == 0 /\ -y_next^post14+y^0 <= 0 /\ pc_Drive^post14-pc_Drive_next^post14 == 0 /\ y^post14-y_next^post14 == 0 /\ -n1^post14+n1^0 == 0), cost: 1
  15: l3 -> l0 : n0^0'=n0^post15, x_next^0'=x_next^post15, fair^0'=fair^post15, y_next^0'=y_next^post15, pc_Plan^0'=pc_Plan^post15, pc_Drive^0'=pc_Drive^post15, is_aborted_next^0'=is_aborted_next^post15, x^0'=x^post15, executed_Drive^0'=executed_Drive^post15, pc_Loop^0'=pc_Loop^post15, n1^0'=n1^post15, y^0'=y^post15, is_aborted^0'=is_aborted^post15, pc_Plan_next^0'=pc_Plan_next^post15, pc_Drive_next^0'=pc_Drive_next^post15, (0 == 0 /\ -is_aborted_next^post15 <= 0 /\ -n1^post15+n1^0 == 0 /\ -7+pc_Drive_next^post15 <= 0 /\ 1-pc_Plan_next^post15 <= 0 /\ -is_aborted_next^post15+is_aborted^post15 == 0 /\ -4+pc_Drive_next^post15 <= 0 /\ 4-pc_Drive_next^post15 <= 0 /\ -fair^post15+fair^0 == 0 /\ -1+is_aborted_next^post15 <= 0 /\ -1-x^0+x_next^post15 <= 0 /\ -y_next^post15+y^post15 == 0 /\ -1+y_next^post15-y^0 <= 0 /\ -7+pc_Plan_next^post15 <= 0 /\ 1-pc_Drive_next^post15 <= 0 /\ pc_Plan^post15-pc_Plan_next^post15 == 0 /\ is_aborted^post15 <= 0 /\ -pc_Drive_next^post15+pc_Drive^post15 == 0 /\ n0^0-n0^post15 == 0 /\ 1+x^0-x_next^post15 <= 0 /\ -7+pc_Loop^post15 == 0 /\ n0^0-x^post15 <= 0 /\ 1-y_next^post15+y^0 <= 0 /\ x^post15-x_next^post15 == 0 /\ -1+executed_Drive^post15 == 0 /\ n1^0-y^post15 <= 0), cost: 1
  16: l3 -> l0 : n0^0'=n0^post16, x_next^0'=x_next^post16, fair^0'=fair^post16, y_next^0'=y_next^post16, pc_Plan^0'=pc_Plan^post16, pc_Drive^0'=pc_Drive^post16, is_aborted_next^0'=is_aborted_next^post16, x^0'=x^post16, executed_Drive^0'=executed_Drive^post16, pc_Loop^0'=pc_Loop^post16, n1^0'=n1^post16, y^0'=y^post16, is_aborted^0'=is_aborted^post16, pc_Plan_next^0'=pc_Plan_next^post16, pc_Drive_next^0'=pc_Drive_next^post16, (0 == 0 /\ 1-pc_Drive_next^post16 <= 0 /\ -n1^post16+n1^0 == 0 /\ -x^0+x_next^post16 <= 0 /\ pc_Plan^post16-pc_Plan_next^post16 == 0 /\ executed_Drive^0-executed_Drive^post16 == 0 /\ -7+pc_Plan_next^post16 <= 0 /\ n0^0-n0^post16 == 0 /\ n0^0-x^post16 <= 0 /\ -7+pc_Loop^post16 == 0 /\ x^0-x_next^post16 <= 0 /\ pc_Drive^post16-pc_Drive_next^post16 == 0 /\ is_aborted^post16 <= 0 /\ x^post16-x_next^post16 == 0 /\ n1^0-y^post16 <= 0 /\ -is_aborted_next^post16 <= 0 /\ -7+pc_Drive_next^post16 <= 0 /\ 1-pc_Plan_next^post16 <= 0 /\ -is_aborted_next^post16+is_aborted^post16 == 0 /\ -y^0+y_next^post16 <= 0 /\ -1+is_aborted_next^post16 <= 0 /\ 5-pc_Drive_next^post16 <= 0 /\ y^0-y_next^post16 <= 0 /\ fair^0-fair^post16 == 0 /\ y^post16-y_next^post16 == 0), cost: 1
  17: l3 -> l0 : n0^0'=n0^post17, x_next^0'=x_next^post17, fair^0'=fair^post17, y_next^0'=y_next^post17, pc_Plan^0'=pc_Plan^post17, pc_Drive^0'=pc_Drive^post17, is_aborted_next^0'=is_aborted_next^post17, x^0'=x^post17, executed_Drive^0'=executed_Drive^post17, pc_Loop^0'=pc_Loop^post17, n1^0'=n1^post17, y^0'=y^post17, is_aborted^0'=is_aborted^post17, pc_Plan_next^0'=pc_Plan_next^post17, pc_Drive_next^0'=pc_Drive_next^post17, (0 == 0 /\ is_aborted^post17 <= 0 /\ n0^0-n0^post17 == 0 /\ -7+pc_Plan_next^post17 <= 0 /\ -3+pc_Drive_next^post17 <= 0 /\ -7+pc_Loop^post17 == 0 /\ n0^0-x^post17 <= 0 /\ -7+pc_Drive_next^post17 <= 0 /\ -y^post17+n1^0 <= 0 /\ -is_aborted_next^post17 <= 0 /\ -pc_Plan_next^post17+pc_Plan^post17 == 0 /\ y_next^post17-y^0 <= 0 /\ 1-pc_Plan_next^post17 <= 0 /\ -1+is_aborted_next^post17 <= 0 /\ -x_next^post17+x^post17 == 0 /\ -x_next^post17+x^0 <= 0 /\ n1^0-n1^post17 == 0 /\ pc_Drive^post17-pc_Drive_next^post17 == 0 /\ -y_next^post17+y^0 <= 0 /\ fair^0-fair^post17 == 0 /\ is_aborted^post17-is_aborted_next^post17 == 0 /\ y^post17-y_next^post17 == 0 /\ -executed_Drive^post17+executed_Drive^0 == 0 /\ 1-pc_Drive_next^post17 <= 0 /\ x_next^post17-x^0 <= 0), cost: 1
  18: l3 -> l4 : n0^0'=n0^post18, x_next^0'=x_next^post18, fair^0'=fair^post18, y_next^0'=y_next^post18, pc_Plan^0'=pc_Plan^post18, pc_Drive^0'=pc_Drive^post18, is_aborted_next^0'=is_aborted_next^post18, x^0'=x^post18, executed_Drive^0'=executed_Drive^post18, pc_Loop^0'=pc_Loop^post18, n1^0'=n1^post18, y^0'=y^post18, is_aborted^0'=is_aborted^post18, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=pc_Drive_next^post18, (0 == 0 /\ -is_aborted_next^post18 <= 0 /\ -1+is_aborted_next^post18 <= 0 /\ -1-x^0+x_next^post18 <= 0 /\ pc_Plan^post18-pc_Plan_next^post18 == 0 /\ -1+y_next^post18-y^0 <= 0 /\ -y_next^post18+y^post18 == 0 /\ 1-pc_Plan_next^post18 <= 0 /\ n1^0-n1^post18 == 0 /\ fair^0-fair^post18 == 0 /\ -pc_Drive_next^post18+pc_Drive^post18 == 0 /\ -is_aborted_next^post18+is_aborted^post18 == 0 /\ 1-pc_Drive_next^post18 <= 0 /\ n0^0-n0^post18 == 0 /\ is_aborted^post18 <= 0 /\ 1-n0^0+x^post18 <= 0 /\ 1+x^0-x_next^post18 <= 0 /\ 1-n1^0 <= 0 /\ x^post18-x_next^post18 == 0 /\ -2+pc_Loop^post18 == 0 /\ 1-n1^0+y^post18 <= 0 /\ 1-y_next^post18+y^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -4+pc_Drive_next^post18 <= 0 /\ 4-pc_Drive_next^post18 <= 0 /\ -7+pc_Drive_next^post18 <= 0 /\ 1-executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 == 0 /\ 1-n0^0 <= 0), cost: 1
  19: l3 -> l4 : n0^0'=n0^post19, x_next^0'=x_next^post19, fair^0'=fair^post19, y_next^0'=y_next^post19, pc_Plan^0'=pc_Plan^post19, pc_Drive^0'=pc_Drive^post19, is_aborted_next^0'=is_aborted_next^post19, x^0'=x^post19, executed_Drive^0'=executed_Drive^post19, pc_Loop^0'=pc_Loop^post19, n1^0'=n1^post19, y^0'=y^post19, is_aborted^0'=is_aborted^post19, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -1+is_aborted_next^post19 <= 0 /\ pc_Drive^post19-pc_Drive_next^post19 == 0 /\ 1+y^post19-n1^0 <= 0 /\ y^post19-y_next^post19 == 0 /\ 1-pc_Drive_next^post19 <= 0 /\ -n1^post19+n1^0 == 0 /\ -is_aborted_next^post19 <= 0 /\ -y_next^post19+y^0 <= 0 /\ x^post19-x_next^post19 == 0 /\ is_aborted^post19-is_aborted_next^post19 == 0 /\ is_aborted^post19 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ fair^0-fair^post19 == 0 /\ 1-n0^0+x^post19 <= 0 /\ y_next^post19-y^0 <= 0 /\ 5-pc_Drive_next^post19 <= 0 /\ n0^0-n0^post19 == 0 /\ executed_Drive^0-executed_Drive^post19 == 0 /\ -x_next^post19+x^0 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ pc_Plan^post19-pc_Plan_next^post19 == 0 /\ 1-n1^0 <= 0 /\ -2+pc_Loop^post19 == 0 /\ 1-pc_Plan_next^post19 <= 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post19-x^0 <= 0 /\ 1-n0^0 <= 0), cost: 1
  20: l3 -> l4 : n0^0'=n0^post20, x_next^0'=x_next^post20, fair^0'=fair^post20, y_next^0'=y_next^post20, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive^post20, is_aborted_next^0'=is_aborted_next^post20, x^0'=x^post20, executed_Drive^0'=executed_Drive^post20, pc_Loop^0'=pc_Loop^post20, n1^0'=n1^post20, y^0'=y^post20, is_aborted^0'=is_aborted^post20, pc_Plan_next^0'=pc_Plan_next^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ pc_Drive^post20-pc_Drive_next^post20 == 0 /\ -y_next^post20+y^0 <= 0 /\ 1+y^post20-n1^0 <= 0 /\ 1-pc_Drive_next^post20 <= 0 /\ -2+pc_Loop^post20 == 0 /\ -pc_Plan_next^post20+pc_Plan^post20 == 0 /\ -7+pc_Plan_next^post20 <= 0 /\ y_next^post20-y^0 <= 0 /\ 1+x^post20-n0^0 <= 0 /\ -is_aborted_next^post20+is_aborted^post20 == 0 /\ -executed_Drive^post20+executed_Drive^0 == 0 /\ -1+is_aborted_next^post20 <= 0 /\ -x_next^post20+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Drive_next^post20 <= 0 /\ -is_aborted_next^post20 <= 0 /\ y^post20-y_next^post20 == 0 /\ n1^0-n1^post20 == 0 /\ 1-pc_Plan_next^post20 <= 0 /\ x^post20-x_next^post20 == 0 /\ is_aborted^post20 <= 0 /\ n0^0-n0^post20 == 0 /\ fair^0-fair^post20 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post20-x^0 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1
  24: l4 -> l5 : n0^0'=n0^post24, x_next^0'=x_next^post24, fair^0'=fair^post24, y_next^0'=y_next^post24, pc_Plan^0'=pc_Plan^post24, pc_Drive^0'=pc_Drive^post24, is_aborted_next^0'=is_aborted_next^post24, x^0'=x^post24, executed_Drive^0'=executed_Drive^post24, pc_Loop^0'=pc_Loop^post24, n1^0'=n1^post24, y^0'=y^post24, is_aborted^0'=is_aborted^post24, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=pc_Drive_next^post24, (0 == 0 /\ -1-x^0+x_next^post24 <= 0 /\ -is_aborted_next^post24+is_aborted^post24 == 0 /\ -3+pc_Loop^post24 == 0 /\ is_aborted^post24 <= 0 /\ 1-pc_Drive_next^post24 <= 0 /\ -1-y^0+y_next^post24 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+executed_Drive^post24 == 0 /\ 1+x^0-x_next^post24 <= 0 /\ y^post24-y_next^post24 == 0 /\ -is_aborted_next^post24 <= 0 /\ fair^0-fair^post24 == 0 /\ pc_Drive^post24-pc_Drive_next^post24 == 0 /\ x^post24-x_next^post24 == 0 /\ -1+is_aborted_next^post24 <= 0 /\ pc_Plan^post24-pc_Plan_next^post24 == 0 /\ -7+pc_Drive_next^post24 <= 0 /\ 1+y^0-y_next^post24 <= 0 /\ 1-pc_Plan_next^post24 <= 0 /\ -4+pc_Drive_next^post24 <= 0 /\ 4-pc_Drive_next^post24 <= 0 /\ n0^0-n0^post24 == 0 /\ -n1^post24+n1^0 == 0), cost: 1
  25: l4 -> l5 : n0^0'=n0^post25, x_next^0'=x_next^post25, fair^0'=fair^post25, y_next^0'=y_next^post25, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive^post25, is_aborted_next^0'=is_aborted_next^post25, x^0'=x^post25, executed_Drive^0'=executed_Drive^post25, pc_Loop^0'=pc_Loop^post25, n1^0'=n1^post25, y^0'=y^post25, is_aborted^0'=is_aborted^post25, pc_Plan_next^0'=pc_Plan_next^post25, pc_Drive_next^0'=pc_Drive_next^post25, (0 == 0 /\ -3+pc_Loop^post25 == 0 /\ pc_Drive^post25-pc_Drive_next^post25 == 0 /\ y_next^post25-y^0 <= 0 /\ fair^0-fair^post25 == 0 /\ -pc_Plan_next^post25+pc_Plan^post25 == 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 1-pc_Plan_next^post25 <= 0 /\ n0^0-n0^post25 == 0 /\ 5-pc_Drive_next^post25 <= 0 /\ -y_next^post25+y^0 <= 0 /\ -is_aborted_next^post25 <= 0 /\ x_next^post25-x^0 <= 0 /\ y^post25-y_next^post25 == 0 /\ -is_aborted_next^post25+is_aborted^post25 == 0 /\ -1+is_aborted_next^post25 <= 0 /\ 1-pc_Drive_next^post25 <= 0 /\ -x_next^post25+x^post25 == 0 /\ -executed_Drive^post25+executed_Drive^0 == 0 /\ -x_next^post25+x^0 <= 0 /\ n1^0-n1^post25 == 0 /\ -7+pc_Plan_next^post25 <= 0 /\ is_aborted^post25 <= 0), cost: 1
  26: l4 -> l5 : n0^0'=n0^post26, x_next^0'=x_next^post26, fair^0'=fair^post26, y_next^0'=y_next^post26, pc_Plan^0'=pc_Plan^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=is_aborted_next^post26, x^0'=x^post26, executed_Drive^0'=executed_Drive^post26, pc_Loop^0'=pc_Loop^post26, n1^0'=n1^post26, y^0'=y^post26, is_aborted^0'=is_aborted^post26, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive_next^post26, (0 == 0 /\ -n1^post26+n1^0 == 0 /\ -pc_Drive_next^post26+pc_Drive^post26 == 0 /\ x^0-x_next^post26 <= 0 /\ -7+pc_Drive_next^post26 <= 0 /\ x^post26-x_next^post26 == 0 /\ -is_aborted_next^post26 <= 0 /\ pc_Plan^post26-pc_Plan_next^post26 == 0 /\ -x^0+x_next^post26 <= 0 /\ 1-pc_Plan_next^post26 <= 0 /\ -3+pc_Drive_next^post26 <= 0 /\ -1+is_aborted_next^post26 <= 0 /\ n0^0-n0^post26 == 0 /\ is_aborted^post26 <= 0 /\ -3+pc_Loop^post26 == 0 /\ y^0-y_next^post26 <= 0 /\ -fair^post26+fair^0 == 0 /\ y^post26-y_next^post26 == 0 /\ 1-pc_Drive_next^post26 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -executed_Drive^post26+executed_Drive^0 == 0 /\ -y^0+y_next^post26 <= 0 /\ -is_aborted_next^post26+is_aborted^post26 == 0), cost: 1
  27: l4 -> l0 : n0^0'=n0^post27, x_next^0'=x_next^post27, fair^0'=fair^post27, y_next^0'=y_next^post27, pc_Plan^0'=pc_Plan^post27, pc_Drive^0'=pc_Drive^post27, is_aborted_next^0'=is_aborted_next^post27, x^0'=x^post27, executed_Drive^0'=executed_Drive^post27, pc_Loop^0'=pc_Loop^post27, n1^0'=n1^post27, y^0'=y^post27, is_aborted^0'=is_aborted^post27, pc_Plan_next^0'=pc_Plan_next^post27, pc_Drive_next^0'=pc_Drive_next^post27, (0 == 0 /\ -1-x^0+x_next^post27 <= 0 /\ y^post27-y_next^post27 == 0 /\ x^post27-x_next^post27 == 0 /\ -n1^post27+n1^0 == 0 /\ 1+y^0-y_next^post27 <= 0 /\ 1-pc_Drive_next^post27 <= 0 /\ -7+pc_Plan_next^post27 <= 0 /\ -is_aborted_next^post27+is_aborted^post27 == 0 /\ 1-is_aborted^post27 <= 0 /\ 1+x^0-x_next^post27 <= 0 /\ pc_Drive^post27-pc_Drive_next^post27 == 0 /\ fair^0-fair^post27 == 0 /\ -1-y^0+y_next^post27 <= 0 /\ pc_Plan^post27-pc_Plan_next^post27 == 0 /\ -is_aborted_next^post27 <= 0 /\ -7+pc_Loop^post27 == 0 /\ -7+pc_Drive_next^post27 <= 0 /\ 1-pc_Plan_next^post27 <= 0 /\ -4+pc_Drive_next^post27 <= 0 /\ 4-pc_Drive_next^post27 <= 0 /\ -1+executed_Drive^post27 == 0 /\ -1+is_aborted_next^post27 <= 0 /\ n0^0-n0^post27 == 0), cost: 1
  28: l4 -> l0 : n0^0'=n0^post28, x_next^0'=x_next^post28, fair^0'=fair^post28, y_next^0'=y_next^post28, pc_Plan^0'=pc_Plan^post28, pc_Drive^0'=pc_Drive^post28, is_aborted_next^0'=is_aborted_next^post28, x^0'=x^post28, executed_Drive^0'=executed_Drive^post28, pc_Loop^0'=pc_Loop^post28, n1^0'=n1^post28, y^0'=y^post28, is_aborted^0'=is_aborted^post28, pc_Plan_next^0'=pc_Plan_next^post28, pc_Drive_next^0'=pc_Drive_next^post28, (0 == 0 /\ 1-pc_Drive_next^post28 <= 0 /\ -x_next^post28+x^0 <= 0 /\ -7+pc_Plan_next^post28 <= 0 /\ -7+pc_Loop^post28 == 0 /\ -executed_Drive^post28+executed_Drive^0 == 0 /\ 1-is_aborted^post28 <= 0 /\ -x_next^post28+x^post28 == 0 /\ -is_aborted_next^post28+is_aborted^post28 == 0 /\ x_next^post28-x^0 <= 0 /\ 5-pc_Drive_next^post28 <= 0 /\ fair^0-fair^post28 == 0 /\ -7+pc_Drive_next^post28 <= 0 /\ -y_next^post28+y^0 <= 0 /\ -pc_Drive_next^post28+pc_Drive^post28 == 0 /\ -is_aborted_next^post28 <= 0 /\ n1^0-n1^post28 == 0 /\ n0^0-n0^post28 == 0 /\ 1-pc_Plan_next^post28 <= 0 /\ y^post28-y_next^post28 == 0 /\ -pc_Plan_next^post28+pc_Plan^post28 == 0 /\ -1+is_aborted_next^post28 <= 0 /\ y_next^post28-y^0 <= 0), cost: 1
  29: l4 -> l0 : n0^0'=n0^post29, x_next^0'=x_next^post29, fair^0'=fair^post29, y_next^0'=y_next^post29, pc_Plan^0'=pc_Plan^post29, pc_Drive^0'=pc_Drive^post29, is_aborted_next^0'=is_aborted_next^post29, x^0'=x^post29, executed_Drive^0'=executed_Drive^post29, pc_Loop^0'=pc_Loop^post29, n1^0'=n1^post29, y^0'=y^post29, is_aborted^0'=is_aborted^post29, pc_Plan_next^0'=pc_Plan_next^post29, pc_Drive_next^0'=pc_Drive_next^post29, (0 == 0 /\ -7+pc_Loop^post29 == 0 /\ y^post29-y_next^post29 == 0 /\ -7+pc_Drive_next^post29 <= 0 /\ -pc_Drive_next^post29+pc_Drive^post29 == 0 /\ n0^0-n0^post29 == 0 /\ -is_aborted_next^post29 <= 0 /\ 1-pc_Plan_next^post29 <= 0 /\ executed_Drive^0-executed_Drive^post29 == 0 /\ -1+is_aborted_next^post29 <= 0 /\ -3+pc_Drive_next^post29 <= 0 /\ x^post29-x_next^post29 == 0 /\ -n1^post29+n1^0 == 0 /\ -x^0+x_next^post29 <= 0 /\ y^0-y_next^post29 <= 0 /\ pc_Plan^post29-pc_Plan_next^post29 == 0 /\ 1-pc_Drive_next^post29 <= 0 /\ -7+pc_Plan_next^post29 <= 0 /\ -fair^post29+fair^0 == 0 /\ x^0-x_next^post29 <= 0 /\ -y^0+y_next^post29 <= 0 /\ 1-is_aborted^post29 <= 0 /\ -is_aborted_next^post29+is_aborted^post29 == 0), cost: 1
  21: l5 -> l2 : n0^0'=n0^post21, x_next^0'=x_next^post21, fair^0'=fair^post21, y_next^0'=y_next^post21, pc_Plan^0'=pc_Plan^post21, pc_Drive^0'=pc_Drive^post21, is_aborted_next^0'=is_aborted_next^post21, x^0'=x^post21, executed_Drive^0'=executed_Drive^post21, pc_Loop^0'=pc_Loop^post21, n1^0'=n1^post21, y^0'=y^post21, is_aborted^0'=is_aborted^post21, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=pc_Drive_next^post21, (0 == 0 /\ -4+pc_Drive_next^post21 <= 0 /\ 4-pc_Drive_next^post21 <= 0 /\ -7+pc_Drive_next^post21 <= 0 /\ 1-pc_Plan_next^post21 <= 0 /\ n0^0-n0^post21 == 0 /\ -1-y^0+y_next^post21 <= 0 /\ -1-x^0+x_next^post21 <= 0 /\ -6+pc_Loop^post21 == 0 /\ pc_Plan^post21-pc_Plan_next^post21 == 0 /\ -1+executed_Drive^post21 == 0 /\ -pc_Drive_next^post21+pc_Drive^post21 == 0 /\ x^post21-x_next^post21 == 0 /\ 1-pc_Drive_next^post21 <= 0 /\ -is_aborted_next^post21+is_aborted^post21 == 0 /\ y^post21-y_next^post21 == 0 /\ -1+is_aborted_next^post21 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1+y^0-y_next^post21 <= 0 /\ 1+x^0-x_next^post21 <= 0 /\ -is_aborted_next^post21 <= 0 /\ 1-is_aborted^post21 <= 0 /\ -n1^post21+n1^0 == 0 /\ fair^0-fair^post21 == 0), cost: 1
  22: l5 -> l2 : n0^0'=n0^post22, x_next^0'=x_next^post22, fair^0'=fair^post22, y_next^0'=y_next^post22, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive^post22, is_aborted_next^0'=is_aborted_next^post22, x^0'=x^post22, executed_Drive^0'=executed_Drive^post22, pc_Loop^0'=pc_Loop^post22, n1^0'=n1^post22, y^0'=y^post22, is_aborted^0'=is_aborted^post22, pc_Plan_next^0'=pc_Plan_next^post22, pc_Drive_next^0'=pc_Drive_next^post22, (0 == 0 /\ y^post22-y_next^post22 == 0 /\ -pc_Plan_next^post22+pc_Plan^post22 == 0 /\ 1-is_aborted^post22 <= 0 /\ -executed_Drive^post22+executed_Drive^0 == 0 /\ fair^0-fair^post22 == 0 /\ x^post22-x_next^post22 == 0 /\ -1+is_aborted_next^post22 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ pc_Drive^post22-pc_Drive_next^post22 == 0 /\ -is_aborted_next^post22+is_aborted^post22 == 0 /\ -is_aborted_next^post22 <= 0 /\ 5-pc_Drive_next^post22 <= 0 /\ n0^0-n0^post22 == 0 /\ 1-pc_Plan_next^post22 <= 0 /\ -y_next^post22+y^0 <= 0 /\ x_next^post22-x^0 <= 0 /\ 1-pc_Drive_next^post22 <= 0 /\ y_next^post22-y^0 <= 0 /\ -x_next^post22+x^0 <= 0 /\ -n1^post22+n1^0 == 0 /\ -7+pc_Plan_next^post22 <= 0 /\ -6+pc_Loop^post22 == 0), cost: 1
  23: l5 -> l2 : n0^0'=n0^post23, x_next^0'=x_next^post23, fair^0'=fair^post23, y_next^0'=y_next^post23, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=is_aborted_next^post23, x^0'=x^post23, executed_Drive^0'=executed_Drive^post23, pc_Loop^0'=pc_Loop^post23, n1^0'=n1^post23, y^0'=y^post23, is_aborted^0'=is_aborted^post23, pc_Plan_next^0'=pc_Plan_next^post23, pc_Drive_next^0'=pc_Drive_next^post23, (0 == 0 /\ -pc_Drive_next^post23+pc_Drive^post23 == 0 /\ -is_aborted_next^post23 <= 0 /\ -is_aborted_next^post23+is_aborted^post23 == 0 /\ -1+is_aborted_next^post23 <= 0 /\ -y_next^post23+y^post23 == 0 /\ 1-pc_Drive_next^post23 <= 0 /\ -7+pc_Plan_next^post23 <= 0 /\ x^0-x_next^post23 <= 0 /\ -3+pc_Drive_next^post23 <= 0 /\ 1-is_aborted^post23 <= 0 /\ y_next^post23-y^0 <= 0 /\ x^post23-x_next^post23 == 0 /\ fair^0-fair^post23 == 0 /\ -x^0+x_next^post23 <= 0 /\ -7+pc_Drive_next^post23 <= 0 /\ -executed_Drive^post23+executed_Drive^0 == 0 /\ -y_next^post23+y^0 <= 0 /\ -6+pc_Loop^post23 == 0 /\ n0^0-n0^post23 == 0 /\ -pc_Plan_next^post23+pc_Plan^post23 == 0 /\ -n1^post23+n1^0 == 0 /\ 1-pc_Plan_next^post23 <= 0), cost: 1
  36: l6 -> l1 : n0^0'=n0^post36, x_next^0'=x_next^post36, fair^0'=fair^post36, y_next^0'=y_next^post36, pc_Plan^0'=pc_Plan^post36, pc_Drive^0'=pc_Drive^post36, is_aborted_next^0'=is_aborted_next^post36, x^0'=x^post36, executed_Drive^0'=executed_Drive^post36, pc_Loop^0'=pc_Loop^post36, n1^0'=n1^post36, y^0'=y^post36, is_aborted^0'=is_aborted^post36, pc_Plan_next^0'=pc_Plan_next^post36, pc_Drive_next^0'=pc_Drive_next^post36, (-is_aborted^post36+is_aborted^0 == 0 /\ -x^post36+x^0 == 0 /\ fair^0-fair^post36 == 0 /\ -pc_Drive^post36+pc_Drive^0 == 0 /\ -y^post36+y^0 == 0 /\ -executed_Drive^post36+executed_Drive^0 == 0 /\ is_aborted_next^0-is_aborted_next^post36 == 0 /\ pc_Loop^0-pc_Loop^post36 == 0 /\ x_next^0-x_next^post36 == 0 /\ y_next^0-y_next^post36 == 0 /\ pc_Plan^0-pc_Plan^post36 == 0 /\ -n0^post36+n0^0 == 0 /\ n1^0-n1^post36 == 0 /\ -pc_Drive_next^post36+pc_Drive_next^0 == 0 /\ -pc_Plan_next^post36+pc_Plan_next^0 == 0), cost: 1
  37: l7 -> l6 : n0^0'=n0^post37, x_next^0'=x_next^post37, fair^0'=fair^post37, y_next^0'=y_next^post37, pc_Plan^0'=pc_Plan^post37, pc_Drive^0'=pc_Drive^post37, is_aborted_next^0'=is_aborted_next^post37, x^0'=x^post37, executed_Drive^0'=executed_Drive^post37, pc_Loop^0'=pc_Loop^post37, n1^0'=n1^post37, y^0'=y^post37, is_aborted^0'=is_aborted^post37, pc_Plan_next^0'=pc_Plan_next^post37, pc_Drive_next^0'=pc_Drive_next^post37, (pc_Plan_next^0-pc_Plan_next^post37 == 0 /\ -is_aborted^post37+is_aborted^0 == 0 /\ pc_Plan^0-pc_Plan^post37 == 0 /\ -pc_Loop^post37+pc_Loop^0 == 0 /\ -y_next^post37+y_next^0 == 0 /\ n1^0-n1^post37 == 0 /\ x_next^0-x_next^post37 == 0 /\ -y^post37+y^0 == 0 /\ -executed_Drive^post37+executed_Drive^0 == 0 /\ fair^0-fair^post37 == 0 /\ n0^0-n0^post37 == 0 /\ pc_Drive^0-pc_Drive^post37 == 0 /\ is_aborted_next^0-is_aborted_next^post37 == 0 /\ -pc_Drive_next^post37+pc_Drive_next^0 == 0 /\ x^0-x^post37 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l7
  31: l1 -> l4 : n0^0'=n0^post31, x_next^0'=x_next^post31, fair^0'=fair^post31, y_next^0'=y_next^post31, pc_Plan^0'=pc_Plan^post31, pc_Drive^0'=pc_Drive^post31, is_aborted_next^0'=is_aborted_next^post31, x^0'=x^post31, executed_Drive^0'=executed_Drive^post31, pc_Loop^0'=pc_Loop^post31, n1^0'=n1^post31, y^0'=y^post31, is_aborted^0'=is_aborted^post31, pc_Plan_next^0'=pc_Plan_next^post31, pc_Drive_next^0'=pc_Drive_next^post31, (0 == 0 /\ n0^0-n0^post31 == 0 /\ -7+pc_Plan_next^post31 <= 0 /\ 3-pc_Plan^post31 <= 0 /\ -1+x_next^post31-x^0 <= 0 /\ -2+pc_Loop^post31 == 0 /\ 1-y_next^post31+y^0 <= 0 /\ -4+pc_Drive_next^post31 <= 0 /\ 4-pc_Drive_next^post31 <= 0 /\ -1+executed_Drive^post31 == 0 /\ -7+pc_Drive_next^post31 <= 0 /\ -is_aborted_next^post31 <= 0 /\ 1-pc_Plan_next^post31 <= 0 /\ -pc_Plan_next^post31+pc_Plan^post31 == 0 /\ -1+is_aborted_next^post31 <= 0 /\ -3+pc_Plan^post31 <= 0 /\ y^post31-y_next^post31 == 0 /\ -x_next^post31+x^post31 == 0 /\ 1-x_next^post31+x^0 <= 0 /\ -is_aborted_next^post31+is_aborted^post31 == 0 /\ -1+y_next^post31-y^0 <= 0 /\ pc_Drive^post31-pc_Drive_next^post31 == 0 /\ n1^0-n1^post31 == 0 /\ fair^0-fair^post31 == 0 /\ is_aborted^post31 <= 0 /\ 1-pc_Drive_next^post31 <= 0), cost: 1
  32: l1 -> l4 : n0^0'=n0^post32, x_next^0'=x_next^post32, fair^0'=fair^post32, y_next^0'=y_next^post32, pc_Plan^0'=pc_Plan^post32, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=is_aborted_next^post32, x^0'=x^post32, executed_Drive^0'=executed_Drive^post32, pc_Loop^0'=pc_Loop^post32, n1^0'=n1^post32, y^0'=y^post32, is_aborted^0'=is_aborted^post32, pc_Plan_next^0'=pc_Plan_next^post32, pc_Drive_next^0'=pc_Drive_next^post32, (0 == 0 /\ n0^0-n0^post32 == 0 /\ -7+pc_Plan_next^post32 <= 0 /\ x^0-x_next^post32 <= 0 /\ 3-pc_Plan^post32 <= 0 /\ -n1^post32+n1^0 == 0 /\ -2+pc_Loop^post32 == 0 /\ y^post32-y_next^post32 == 0 /\ 5-pc_Drive_next^post32 <= 0 /\ is_aborted^post32 <= 0 /\ -x^0+x_next^post32 <= 0 /\ -7+pc_Drive_next^post32 <= 0 /\ 1-pc_Plan_next^post32 <= 0 /\ -1+is_aborted_next^post32 <= 0 /\ y^0-y_next^post32 <= 0 /\ -3+pc_Plan^post32 <= 0 /\ -is_aborted_next^post32 <= 0 /\ x^post32-x_next^post32 == 0 /\ fair^0-fair^post32 == 0 /\ -pc_Drive_next^post32+pc_Drive^post32 == 0 /\ -is_aborted_next^post32+is_aborted^post32 == 0 /\ executed_Drive^post32 == 0 /\ -y^0+y_next^post32 <= 0 /\ pc_Plan^post32-pc_Plan_next^post32 == 0 /\ 1-pc_Drive_next^post32 <= 0), cost: 1
  33: l1 -> l4 : n0^0'=n0^post33, x_next^0'=x_next^post33, fair^0'=fair^post33, y_next^0'=y_next^post33, pc_Plan^0'=pc_Plan^post33, pc_Drive^0'=pc_Drive^post33, is_aborted_next^0'=is_aborted_next^post33, x^0'=x^post33, executed_Drive^0'=executed_Drive^post33, pc_Loop^0'=pc_Loop^post33, n1^0'=n1^post33, y^0'=y^post33, is_aborted^0'=is_aborted^post33, pc_Plan_next^0'=pc_Plan_next^post33, pc_Drive_next^0'=pc_Drive_next^post33, (0 == 0 /\ 1-pc_Plan_next^post33 <= 0 /\ is_aborted^post33 <= 0 /\ -1+is_aborted_next^post33 <= 0 /\ is_aborted^post33-is_aborted_next^post33 == 0 /\ -3+pc_Plan^post33 <= 0 /\ -is_aborted_next^post33 <= 0 /\ -y_next^post33+y^0 <= 0 /\ fair^0-fair^post33 == 0 /\ pc_Drive^post33-pc_Drive_next^post33 == 0 /\ -n1^post33+n1^0 == 0 /\ x^post33-x_next^post33 == 0 /\ 1-pc_Drive_next^post33 <= 0 /\ pc_Plan^post33-pc_Plan_next^post33 == 0 /\ y_next^post33-y^0 <= 0 /\ n0^0-n0^post33 == 0 /\ -x_next^post33+x^0 <= 0 /\ executed_Drive^post33 == 0 /\ -7+pc_Plan_next^post33 <= 0 /\ 3-pc_Plan^post33 <= 0 /\ -3+pc_Drive_next^post33 <= 0 /\ -2+pc_Loop^post33 == 0 /\ y^post33-y_next^post33 == 0 /\ x_next^post33-x^0 <= 0 /\ -7+pc_Drive_next^post33 <= 0), cost: 1
   7: l2 -> l3 : n0^0'=n0^post7, x_next^0'=x_next^post7, fair^0'=fair^post7, y_next^0'=y_next^post7, pc_Plan^0'=pc_Plan^post7, pc_Drive^0'=pc_Drive^post7, is_aborted_next^0'=is_aborted_next^post7, x^0'=x^post7, executed_Drive^0'=executed_Drive^post7, pc_Loop^0'=pc_Loop^post7, n1^0'=n1^post7, y^0'=y^post7, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=pc_Drive_next^post7, (0 == 0 /\ -7+pc_Drive^post7 <= 0 /\ 7-pc_Drive^post7 <= 0 /\ -y_next^post7+y^post7 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ n0^0-n0^post7 == 0 /\ x^0-x_next^post7 <= 0 /\ 5-pc_Drive_next^post7 <= 0 /\ x^post7-x_next^post7 == 0 /\ -1+is_aborted_next^post7 <= 0 /\ executed_Drive^0-executed_Drive^post7 == 0 /\ -is_aborted_next^post7+is_aborted^post7 == 0 /\ -is_aborted_next^post7 <= 0 /\ -7+pc_Drive_next^post7 <= 0 /\ -x^0+x_next^post7 <= 0 /\ 1-pc_Plan_next^post7 <= 0 /\ -pc_Drive_next^post7+pc_Drive^post7 == 0 /\ -y_next^post7+y^0 <= 0 /\ fair^0-fair^post7 == 0 /\ -n1^post7+n1^0 == 0 /\ pc_Plan^post7-pc_Plan_next^post7 == 0 /\ -4+pc_Loop^post7 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ 1-pc_Drive_next^post7 <= 0 /\ y_next^post7-y^0 <= 0), cost: 1
  11: l2 -> l3 : n0^0'=n0^post11, x_next^0'=x_next^post11, fair^0'=fair^post11, y_next^0'=y_next^post11, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=pc_Drive^post11, is_aborted_next^0'=is_aborted_next^post11, x^0'=x^post11, executed_Drive^0'=executed_Drive^post11, pc_Loop^0'=pc_Loop^post11, n1^0'=n1^post11, y^0'=y^post11, is_aborted^0'=is_aborted^post11, pc_Plan_next^0'=pc_Plan_next^post11, pc_Drive_next^0'=pc_Drive_next^post11, (0 == 0 /\ -3+pc_Drive_next^post11 <= 0 /\ y_next^post11-y^0 <= 0 /\ pc_Drive^post11-pc_Drive_next^post11 == 0 /\ -is_aborted_next^post11+is_aborted^post11 == 0 /\ fair^0-fair^post11 == 0 /\ -2+pc_Drive^post11 <= 0 /\ -pc_Plan_next^post11+pc_Plan^post11 == 0 /\ -7+pc_Drive_next^post11 <= 0 /\ -is_aborted_next^post11 <= 0 /\ -y_next^post11+y^0 <= 0 /\ 1-pc_Plan_next^post11 <= 0 /\ n0^0-n0^post11 == 0 /\ 1-is_aborted_next^post11 <= 0 /\ -1+is_aborted_next^post11 <= 0 /\ executed_Drive^post11 == 0 /\ x_next^post11-x^0 <= 0 /\ x^post11-x_next^post11 == 0 /\ -4+pc_Loop^post11 == 0 /\ 2-pc_Drive^post11 <= 0 /\ y^post11-y_next^post11 == 0 /\ 1-pc_Drive_next^post11 <= 0 /\ -n1^post11+n1^0 == 0 /\ -x_next^post11+x^0 <= 0 /\ -7+pc_Plan_next^post11 <= 0), cost: 1
  18: l3 -> l4 : n0^0'=n0^post18, x_next^0'=x_next^post18, fair^0'=fair^post18, y_next^0'=y_next^post18, pc_Plan^0'=pc_Plan^post18, pc_Drive^0'=pc_Drive^post18, is_aborted_next^0'=is_aborted_next^post18, x^0'=x^post18, executed_Drive^0'=executed_Drive^post18, pc_Loop^0'=pc_Loop^post18, n1^0'=n1^post18, y^0'=y^post18, is_aborted^0'=is_aborted^post18, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=pc_Drive_next^post18, (0 == 0 /\ -is_aborted_next^post18 <= 0 /\ -1+is_aborted_next^post18 <= 0 /\ -1-x^0+x_next^post18 <= 0 /\ pc_Plan^post18-pc_Plan_next^post18 == 0 /\ -1+y_next^post18-y^0 <= 0 /\ -y_next^post18+y^post18 == 0 /\ 1-pc_Plan_next^post18 <= 0 /\ n1^0-n1^post18 == 0 /\ fair^0-fair^post18 == 0 /\ -pc_Drive_next^post18+pc_Drive^post18 == 0 /\ -is_aborted_next^post18+is_aborted^post18 == 0 /\ 1-pc_Drive_next^post18 <= 0 /\ n0^0-n0^post18 == 0 /\ is_aborted^post18 <= 0 /\ 1-n0^0+x^post18 <= 0 /\ 1+x^0-x_next^post18 <= 0 /\ 1-n1^0 <= 0 /\ x^post18-x_next^post18 == 0 /\ -2+pc_Loop^post18 == 0 /\ 1-n1^0+y^post18 <= 0 /\ 1-y_next^post18+y^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -4+pc_Drive_next^post18 <= 0 /\ 4-pc_Drive_next^post18 <= 0 /\ -7+pc_Drive_next^post18 <= 0 /\ 1-executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 == 0 /\ 1-n0^0 <= 0), cost: 1
  19: l3 -> l4 : n0^0'=n0^post19, x_next^0'=x_next^post19, fair^0'=fair^post19, y_next^0'=y_next^post19, pc_Plan^0'=pc_Plan^post19, pc_Drive^0'=pc_Drive^post19, is_aborted_next^0'=is_aborted_next^post19, x^0'=x^post19, executed_Drive^0'=executed_Drive^post19, pc_Loop^0'=pc_Loop^post19, n1^0'=n1^post19, y^0'=y^post19, is_aborted^0'=is_aborted^post19, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -1+is_aborted_next^post19 <= 0 /\ pc_Drive^post19-pc_Drive_next^post19 == 0 /\ 1+y^post19-n1^0 <= 0 /\ y^post19-y_next^post19 == 0 /\ 1-pc_Drive_next^post19 <= 0 /\ -n1^post19+n1^0 == 0 /\ -is_aborted_next^post19 <= 0 /\ -y_next^post19+y^0 <= 0 /\ x^post19-x_next^post19 == 0 /\ is_aborted^post19-is_aborted_next^post19 == 0 /\ is_aborted^post19 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ fair^0-fair^post19 == 0 /\ 1-n0^0+x^post19 <= 0 /\ y_next^post19-y^0 <= 0 /\ 5-pc_Drive_next^post19 <= 0 /\ n0^0-n0^post19 == 0 /\ executed_Drive^0-executed_Drive^post19 == 0 /\ -x_next^post19+x^0 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ pc_Plan^post19-pc_Plan_next^post19 == 0 /\ 1-n1^0 <= 0 /\ -2+pc_Loop^post19 == 0 /\ 1-pc_Plan_next^post19 <= 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post19-x^0 <= 0 /\ 1-n0^0 <= 0), cost: 1
  20: l3 -> l4 : n0^0'=n0^post20, x_next^0'=x_next^post20, fair^0'=fair^post20, y_next^0'=y_next^post20, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive^post20, is_aborted_next^0'=is_aborted_next^post20, x^0'=x^post20, executed_Drive^0'=executed_Drive^post20, pc_Loop^0'=pc_Loop^post20, n1^0'=n1^post20, y^0'=y^post20, is_aborted^0'=is_aborted^post20, pc_Plan_next^0'=pc_Plan_next^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ pc_Drive^post20-pc_Drive_next^post20 == 0 /\ -y_next^post20+y^0 <= 0 /\ 1+y^post20-n1^0 <= 0 /\ 1-pc_Drive_next^post20 <= 0 /\ -2+pc_Loop^post20 == 0 /\ -pc_Plan_next^post20+pc_Plan^post20 == 0 /\ -7+pc_Plan_next^post20 <= 0 /\ y_next^post20-y^0 <= 0 /\ 1+x^post20-n0^0 <= 0 /\ -is_aborted_next^post20+is_aborted^post20 == 0 /\ -executed_Drive^post20+executed_Drive^0 == 0 /\ -1+is_aborted_next^post20 <= 0 /\ -x_next^post20+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Drive_next^post20 <= 0 /\ -is_aborted_next^post20 <= 0 /\ y^post20-y_next^post20 == 0 /\ n1^0-n1^post20 == 0 /\ 1-pc_Plan_next^post20 <= 0 /\ x^post20-x_next^post20 == 0 /\ is_aborted^post20 <= 0 /\ n0^0-n0^post20 == 0 /\ fair^0-fair^post20 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post20-x^0 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1
  24: l4 -> l5 : n0^0'=n0^post24, x_next^0'=x_next^post24, fair^0'=fair^post24, y_next^0'=y_next^post24, pc_Plan^0'=pc_Plan^post24, pc_Drive^0'=pc_Drive^post24, is_aborted_next^0'=is_aborted_next^post24, x^0'=x^post24, executed_Drive^0'=executed_Drive^post24, pc_Loop^0'=pc_Loop^post24, n1^0'=n1^post24, y^0'=y^post24, is_aborted^0'=is_aborted^post24, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=pc_Drive_next^post24, (0 == 0 /\ -1-x^0+x_next^post24 <= 0 /\ -is_aborted_next^post24+is_aborted^post24 == 0 /\ -3+pc_Loop^post24 == 0 /\ is_aborted^post24 <= 0 /\ 1-pc_Drive_next^post24 <= 0 /\ -1-y^0+y_next^post24 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+executed_Drive^post24 == 0 /\ 1+x^0-x_next^post24 <= 0 /\ y^post24-y_next^post24 == 0 /\ -is_aborted_next^post24 <= 0 /\ fair^0-fair^post24 == 0 /\ pc_Drive^post24-pc_Drive_next^post24 == 0 /\ x^post24-x_next^post24 == 0 /\ -1+is_aborted_next^post24 <= 0 /\ pc_Plan^post24-pc_Plan_next^post24 == 0 /\ -7+pc_Drive_next^post24 <= 0 /\ 1+y^0-y_next^post24 <= 0 /\ 1-pc_Plan_next^post24 <= 0 /\ -4+pc_Drive_next^post24 <= 0 /\ 4-pc_Drive_next^post24 <= 0 /\ n0^0-n0^post24 == 0 /\ -n1^post24+n1^0 == 0), cost: 1
  25: l4 -> l5 : n0^0'=n0^post25, x_next^0'=x_next^post25, fair^0'=fair^post25, y_next^0'=y_next^post25, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive^post25, is_aborted_next^0'=is_aborted_next^post25, x^0'=x^post25, executed_Drive^0'=executed_Drive^post25, pc_Loop^0'=pc_Loop^post25, n1^0'=n1^post25, y^0'=y^post25, is_aborted^0'=is_aborted^post25, pc_Plan_next^0'=pc_Plan_next^post25, pc_Drive_next^0'=pc_Drive_next^post25, (0 == 0 /\ -3+pc_Loop^post25 == 0 /\ pc_Drive^post25-pc_Drive_next^post25 == 0 /\ y_next^post25-y^0 <= 0 /\ fair^0-fair^post25 == 0 /\ -pc_Plan_next^post25+pc_Plan^post25 == 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 1-pc_Plan_next^post25 <= 0 /\ n0^0-n0^post25 == 0 /\ 5-pc_Drive_next^post25 <= 0 /\ -y_next^post25+y^0 <= 0 /\ -is_aborted_next^post25 <= 0 /\ x_next^post25-x^0 <= 0 /\ y^post25-y_next^post25 == 0 /\ -is_aborted_next^post25+is_aborted^post25 == 0 /\ -1+is_aborted_next^post25 <= 0 /\ 1-pc_Drive_next^post25 <= 0 /\ -x_next^post25+x^post25 == 0 /\ -executed_Drive^post25+executed_Drive^0 == 0 /\ -x_next^post25+x^0 <= 0 /\ n1^0-n1^post25 == 0 /\ -7+pc_Plan_next^post25 <= 0 /\ is_aborted^post25 <= 0), cost: 1
  26: l4 -> l5 : n0^0'=n0^post26, x_next^0'=x_next^post26, fair^0'=fair^post26, y_next^0'=y_next^post26, pc_Plan^0'=pc_Plan^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=is_aborted_next^post26, x^0'=x^post26, executed_Drive^0'=executed_Drive^post26, pc_Loop^0'=pc_Loop^post26, n1^0'=n1^post26, y^0'=y^post26, is_aborted^0'=is_aborted^post26, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive_next^post26, (0 == 0 /\ -n1^post26+n1^0 == 0 /\ -pc_Drive_next^post26+pc_Drive^post26 == 0 /\ x^0-x_next^post26 <= 0 /\ -7+pc_Drive_next^post26 <= 0 /\ x^post26-x_next^post26 == 0 /\ -is_aborted_next^post26 <= 0 /\ pc_Plan^post26-pc_Plan_next^post26 == 0 /\ -x^0+x_next^post26 <= 0 /\ 1-pc_Plan_next^post26 <= 0 /\ -3+pc_Drive_next^post26 <= 0 /\ -1+is_aborted_next^post26 <= 0 /\ n0^0-n0^post26 == 0 /\ is_aborted^post26 <= 0 /\ -3+pc_Loop^post26 == 0 /\ y^0-y_next^post26 <= 0 /\ -fair^post26+fair^0 == 0 /\ y^post26-y_next^post26 == 0 /\ 1-pc_Drive_next^post26 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -executed_Drive^post26+executed_Drive^0 == 0 /\ -y^0+y_next^post26 <= 0 /\ -is_aborted_next^post26+is_aborted^post26 == 0), cost: 1
  21: l5 -> l2 : n0^0'=n0^post21, x_next^0'=x_next^post21, fair^0'=fair^post21, y_next^0'=y_next^post21, pc_Plan^0'=pc_Plan^post21, pc_Drive^0'=pc_Drive^post21, is_aborted_next^0'=is_aborted_next^post21, x^0'=x^post21, executed_Drive^0'=executed_Drive^post21, pc_Loop^0'=pc_Loop^post21, n1^0'=n1^post21, y^0'=y^post21, is_aborted^0'=is_aborted^post21, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=pc_Drive_next^post21, (0 == 0 /\ -4+pc_Drive_next^post21 <= 0 /\ 4-pc_Drive_next^post21 <= 0 /\ -7+pc_Drive_next^post21 <= 0 /\ 1-pc_Plan_next^post21 <= 0 /\ n0^0-n0^post21 == 0 /\ -1-y^0+y_next^post21 <= 0 /\ -1-x^0+x_next^post21 <= 0 /\ -6+pc_Loop^post21 == 0 /\ pc_Plan^post21-pc_Plan_next^post21 == 0 /\ -1+executed_Drive^post21 == 0 /\ -pc_Drive_next^post21+pc_Drive^post21 == 0 /\ x^post21-x_next^post21 == 0 /\ 1-pc_Drive_next^post21 <= 0 /\ -is_aborted_next^post21+is_aborted^post21 == 0 /\ y^post21-y_next^post21 == 0 /\ -1+is_aborted_next^post21 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1+y^0-y_next^post21 <= 0 /\ 1+x^0-x_next^post21 <= 0 /\ -is_aborted_next^post21 <= 0 /\ 1-is_aborted^post21 <= 0 /\ -n1^post21+n1^0 == 0 /\ fair^0-fair^post21 == 0), cost: 1
  22: l5 -> l2 : n0^0'=n0^post22, x_next^0'=x_next^post22, fair^0'=fair^post22, y_next^0'=y_next^post22, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive^post22, is_aborted_next^0'=is_aborted_next^post22, x^0'=x^post22, executed_Drive^0'=executed_Drive^post22, pc_Loop^0'=pc_Loop^post22, n1^0'=n1^post22, y^0'=y^post22, is_aborted^0'=is_aborted^post22, pc_Plan_next^0'=pc_Plan_next^post22, pc_Drive_next^0'=pc_Drive_next^post22, (0 == 0 /\ y^post22-y_next^post22 == 0 /\ -pc_Plan_next^post22+pc_Plan^post22 == 0 /\ 1-is_aborted^post22 <= 0 /\ -executed_Drive^post22+executed_Drive^0 == 0 /\ fair^0-fair^post22 == 0 /\ x^post22-x_next^post22 == 0 /\ -1+is_aborted_next^post22 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ pc_Drive^post22-pc_Drive_next^post22 == 0 /\ -is_aborted_next^post22+is_aborted^post22 == 0 /\ -is_aborted_next^post22 <= 0 /\ 5-pc_Drive_next^post22 <= 0 /\ n0^0-n0^post22 == 0 /\ 1-pc_Plan_next^post22 <= 0 /\ -y_next^post22+y^0 <= 0 /\ x_next^post22-x^0 <= 0 /\ 1-pc_Drive_next^post22 <= 0 /\ y_next^post22-y^0 <= 0 /\ -x_next^post22+x^0 <= 0 /\ -n1^post22+n1^0 == 0 /\ -7+pc_Plan_next^post22 <= 0 /\ -6+pc_Loop^post22 == 0), cost: 1
  23: l5 -> l2 : n0^0'=n0^post23, x_next^0'=x_next^post23, fair^0'=fair^post23, y_next^0'=y_next^post23, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=is_aborted_next^post23, x^0'=x^post23, executed_Drive^0'=executed_Drive^post23, pc_Loop^0'=pc_Loop^post23, n1^0'=n1^post23, y^0'=y^post23, is_aborted^0'=is_aborted^post23, pc_Plan_next^0'=pc_Plan_next^post23, pc_Drive_next^0'=pc_Drive_next^post23, (0 == 0 /\ -pc_Drive_next^post23+pc_Drive^post23 == 0 /\ -is_aborted_next^post23 <= 0 /\ -is_aborted_next^post23+is_aborted^post23 == 0 /\ -1+is_aborted_next^post23 <= 0 /\ -y_next^post23+y^post23 == 0 /\ 1-pc_Drive_next^post23 <= 0 /\ -7+pc_Plan_next^post23 <= 0 /\ x^0-x_next^post23 <= 0 /\ -3+pc_Drive_next^post23 <= 0 /\ 1-is_aborted^post23 <= 0 /\ y_next^post23-y^0 <= 0 /\ x^post23-x_next^post23 == 0 /\ fair^0-fair^post23 == 0 /\ -x^0+x_next^post23 <= 0 /\ -7+pc_Drive_next^post23 <= 0 /\ -executed_Drive^post23+executed_Drive^0 == 0 /\ -y_next^post23+y^0 <= 0 /\ -6+pc_Loop^post23 == 0 /\ n0^0-n0^post23 == 0 /\ -pc_Plan_next^post23+pc_Plan^post23 == 0 /\ -n1^post23+n1^0 == 0 /\ 1-pc_Plan_next^post23 <= 0), cost: 1
  36: l6 -> l1 : n0^0'=n0^post36, x_next^0'=x_next^post36, fair^0'=fair^post36, y_next^0'=y_next^post36, pc_Plan^0'=pc_Plan^post36, pc_Drive^0'=pc_Drive^post36, is_aborted_next^0'=is_aborted_next^post36, x^0'=x^post36, executed_Drive^0'=executed_Drive^post36, pc_Loop^0'=pc_Loop^post36, n1^0'=n1^post36, y^0'=y^post36, is_aborted^0'=is_aborted^post36, pc_Plan_next^0'=pc_Plan_next^post36, pc_Drive_next^0'=pc_Drive_next^post36, (-is_aborted^post36+is_aborted^0 == 0 /\ -x^post36+x^0 == 0 /\ fair^0-fair^post36 == 0 /\ -pc_Drive^post36+pc_Drive^0 == 0 /\ -y^post36+y^0 == 0 /\ -executed_Drive^post36+executed_Drive^0 == 0 /\ is_aborted_next^0-is_aborted_next^post36 == 0 /\ pc_Loop^0-pc_Loop^post36 == 0 /\ x_next^0-x_next^post36 == 0 /\ y_next^0-y_next^post36 == 0 /\ pc_Plan^0-pc_Plan^post36 == 0 /\ -n0^post36+n0^0 == 0 /\ n1^0-n1^post36 == 0 /\ -pc_Drive_next^post36+pc_Drive_next^0 == 0 /\ -pc_Plan_next^post36+pc_Plan_next^0 == 0), cost: 1
  37: l7 -> l6 : n0^0'=n0^post37, x_next^0'=x_next^post37, fair^0'=fair^post37, y_next^0'=y_next^post37, pc_Plan^0'=pc_Plan^post37, pc_Drive^0'=pc_Drive^post37, is_aborted_next^0'=is_aborted_next^post37, x^0'=x^post37, executed_Drive^0'=executed_Drive^post37, pc_Loop^0'=pc_Loop^post37, n1^0'=n1^post37, y^0'=y^post37, is_aborted^0'=is_aborted^post37, pc_Plan_next^0'=pc_Plan_next^post37, pc_Drive_next^0'=pc_Drive_next^post37, (pc_Plan_next^0-pc_Plan_next^post37 == 0 /\ -is_aborted^post37+is_aborted^0 == 0 /\ pc_Plan^0-pc_Plan^post37 == 0 /\ -pc_Loop^post37+pc_Loop^0 == 0 /\ -y_next^post37+y_next^0 == 0 /\ n1^0-n1^post37 == 0 /\ x_next^0-x_next^post37 == 0 /\ -y^post37+y^0 == 0 /\ -executed_Drive^post37+executed_Drive^0 == 0 /\ fair^0-fair^post37 == 0 /\ n0^0-n0^post37 == 0 /\ pc_Drive^0-pc_Drive^post37 == 0 /\ is_aborted_next^0-is_aborted_next^post37 == 0 /\ -pc_Drive_next^post37+pc_Drive_next^0 == 0 /\ x^0-x^post37 == 0), cost: 1


Applied preprocessing
Original rule:
l2 -> l3 : n0^0'=n0^post7, x_next^0'=x_next^post7, fair^0'=fair^post7, y_next^0'=y_next^post7, pc_Plan^0'=pc_Plan^post7, pc_Drive^0'=pc_Drive^post7, is_aborted_next^0'=is_aborted_next^post7, x^0'=x^post7, executed_Drive^0'=executed_Drive^post7, pc_Loop^0'=pc_Loop^post7, n1^0'=n1^post7, y^0'=y^post7, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=pc_Drive_next^post7, (0 == 0 /\ -7+pc_Drive^post7 <= 0 /\ 7-pc_Drive^post7 <= 0 /\ -y_next^post7+y^post7 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ n0^0-n0^post7 == 0 /\ x^0-x_next^post7 <= 0 /\ 5-pc_Drive_next^post7 <= 0 /\ x^post7-x_next^post7 == 0 /\ -1+is_aborted_next^post7 <= 0 /\ executed_Drive^0-executed_Drive^post7 == 0 /\ -is_aborted_next^post7+is_aborted^post7 == 0 /\ -is_aborted_next^post7 <= 0 /\ -7+pc_Drive_next^post7 <= 0 /\ -x^0+x_next^post7 <= 0 /\ 1-pc_Plan_next^post7 <= 0 /\ -pc_Drive_next^post7+pc_Drive^post7 == 0 /\ -y_next^post7+y^0 <= 0 /\ fair^0-fair^post7 == 0 /\ -n1^post7+n1^0 == 0 /\ pc_Plan^post7-pc_Plan_next^post7 == 0 /\ -4+pc_Loop^post7 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ 1-pc_Drive_next^post7 <= 0 /\ y_next^post7-y^0 <= 0), cost: 1
New rule:
l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post7, pc_Drive^0'=7, is_aborted_next^0'=is_aborted^post7, pc_Loop^0'=4, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=7, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+executed_Drive^0 == 0), cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : n0^0'=n0^post11, x_next^0'=x_next^post11, fair^0'=fair^post11, y_next^0'=y_next^post11, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=pc_Drive^post11, is_aborted_next^0'=is_aborted_next^post11, x^0'=x^post11, executed_Drive^0'=executed_Drive^post11, pc_Loop^0'=pc_Loop^post11, n1^0'=n1^post11, y^0'=y^post11, is_aborted^0'=is_aborted^post11, pc_Plan_next^0'=pc_Plan_next^post11, pc_Drive_next^0'=pc_Drive_next^post11, (0 == 0 /\ -3+pc_Drive_next^post11 <= 0 /\ y_next^post11-y^0 <= 0 /\ pc_Drive^post11-pc_Drive_next^post11 == 0 /\ -is_aborted_next^post11+is_aborted^post11 == 0 /\ fair^0-fair^post11 == 0 /\ -2+pc_Drive^post11 <= 0 /\ -pc_Plan_next^post11+pc_Plan^post11 == 0 /\ -7+pc_Drive_next^post11 <= 0 /\ -is_aborted_next^post11 <= 0 /\ -y_next^post11+y^0 <= 0 /\ 1-pc_Plan_next^post11 <= 0 /\ n0^0-n0^post11 == 0 /\ 1-is_aborted_next^post11 <= 0 /\ -1+is_aborted_next^post11 <= 0 /\ executed_Drive^post11 == 0 /\ x_next^post11-x^0 <= 0 /\ x^post11-x_next^post11 == 0 /\ -4+pc_Loop^post11 == 0 /\ 2-pc_Drive^post11 <= 0 /\ y^post11-y_next^post11 == 0 /\ 1-pc_Drive_next^post11 <= 0 /\ -n1^post11+n1^0 == 0 /\ -x_next^post11+x^0 <= 0 /\ -7+pc_Plan_next^post11 <= 0), cost: 1
New rule:
l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=2, is_aborted_next^0'=1, executed_Drive^0'=0, pc_Loop^0'=4, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post11, pc_Drive_next^0'=2, (-1+pc_Plan^post11 >= 0 /\ -7+pc_Plan^post11 <= 0), cost: 1

Applied preprocessing
Original rule:
l3 -> l4 : n0^0'=n0^post18, x_next^0'=x_next^post18, fair^0'=fair^post18, y_next^0'=y_next^post18, pc_Plan^0'=pc_Plan^post18, pc_Drive^0'=pc_Drive^post18, is_aborted_next^0'=is_aborted_next^post18, x^0'=x^post18, executed_Drive^0'=executed_Drive^post18, pc_Loop^0'=pc_Loop^post18, n1^0'=n1^post18, y^0'=y^post18, is_aborted^0'=is_aborted^post18, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=pc_Drive_next^post18, (0 == 0 /\ -is_aborted_next^post18 <= 0 /\ -1+is_aborted_next^post18 <= 0 /\ -1-x^0+x_next^post18 <= 0 /\ pc_Plan^post18-pc_Plan_next^post18 == 0 /\ -1+y_next^post18-y^0 <= 0 /\ -y_next^post18+y^post18 == 0 /\ 1-pc_Plan_next^post18 <= 0 /\ n1^0-n1^post18 == 0 /\ fair^0-fair^post18 == 0 /\ -pc_Drive_next^post18+pc_Drive^post18 == 0 /\ -is_aborted_next^post18+is_aborted^post18 == 0 /\ 1-pc_Drive_next^post18 <= 0 /\ n0^0-n0^post18 == 0 /\ is_aborted^post18 <= 0 /\ 1-n0^0+x^post18 <= 0 /\ 1+x^0-x_next^post18 <= 0 /\ 1-n1^0 <= 0 /\ x^post18-x_next^post18 == 0 /\ -2+pc_Loop^post18 == 0 /\ 1-n1^0+y^post18 <= 0 /\ 1-y_next^post18+y^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -4+pc_Drive_next^post18 <= 0 /\ 4-pc_Drive_next^post18 <= 0 /\ -7+pc_Drive_next^post18 <= 0 /\ 1-executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 <= 0 /\ -1+executed_Drive^post18 == 0 /\ 1-n0^0 <= 0), cost: 1
New rule:
l3 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l3 -> l4 : n0^0'=n0^post19, x_next^0'=x_next^post19, fair^0'=fair^post19, y_next^0'=y_next^post19, pc_Plan^0'=pc_Plan^post19, pc_Drive^0'=pc_Drive^post19, is_aborted_next^0'=is_aborted_next^post19, x^0'=x^post19, executed_Drive^0'=executed_Drive^post19, pc_Loop^0'=pc_Loop^post19, n1^0'=n1^post19, y^0'=y^post19, is_aborted^0'=is_aborted^post19, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -1+is_aborted_next^post19 <= 0 /\ pc_Drive^post19-pc_Drive_next^post19 == 0 /\ 1+y^post19-n1^0 <= 0 /\ y^post19-y_next^post19 == 0 /\ 1-pc_Drive_next^post19 <= 0 /\ -n1^post19+n1^0 == 0 /\ -is_aborted_next^post19 <= 0 /\ -y_next^post19+y^0 <= 0 /\ x^post19-x_next^post19 == 0 /\ is_aborted^post19-is_aborted_next^post19 == 0 /\ is_aborted^post19 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ fair^0-fair^post19 == 0 /\ 1-n0^0+x^post19 <= 0 /\ y_next^post19-y^0 <= 0 /\ 5-pc_Drive_next^post19 <= 0 /\ n0^0-n0^post19 == 0 /\ executed_Drive^0-executed_Drive^post19 == 0 /\ -x_next^post19+x^0 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ pc_Plan^post19-pc_Plan_next^post19 == 0 /\ 1-n1^0 <= 0 /\ -2+pc_Loop^post19 == 0 /\ 1-pc_Plan_next^post19 <= 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post19-x^0 <= 0 /\ 1-n0^0 <= 0), cost: 1
New rule:
l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l3 -> l4 : n0^0'=n0^post20, x_next^0'=x_next^post20, fair^0'=fair^post20, y_next^0'=y_next^post20, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive^post20, is_aborted_next^0'=is_aborted_next^post20, x^0'=x^post20, executed_Drive^0'=executed_Drive^post20, pc_Loop^0'=pc_Loop^post20, n1^0'=n1^post20, y^0'=y^post20, is_aborted^0'=is_aborted^post20, pc_Plan_next^0'=pc_Plan_next^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ pc_Drive^post20-pc_Drive_next^post20 == 0 /\ -y_next^post20+y^0 <= 0 /\ 1+y^post20-n1^0 <= 0 /\ 1-pc_Drive_next^post20 <= 0 /\ -2+pc_Loop^post20 == 0 /\ -pc_Plan_next^post20+pc_Plan^post20 == 0 /\ -7+pc_Plan_next^post20 <= 0 /\ y_next^post20-y^0 <= 0 /\ 1+x^post20-n0^0 <= 0 /\ -is_aborted_next^post20+is_aborted^post20 == 0 /\ -executed_Drive^post20+executed_Drive^0 == 0 /\ -1+is_aborted_next^post20 <= 0 /\ -x_next^post20+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Drive_next^post20 <= 0 /\ -is_aborted_next^post20 <= 0 /\ y^post20-y_next^post20 == 0 /\ n1^0-n1^post20 == 0 /\ 1-pc_Plan_next^post20 <= 0 /\ x^post20-x_next^post20 == 0 /\ is_aborted^post20 <= 0 /\ n0^0-n0^post20 == 0 /\ fair^0-fair^post20 == 0 /\ 1-executed_Drive^0 <= 0 /\ -1+executed_Drive^0 <= 0 /\ x_next^post20-x^0 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1
New rule:
l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : n0^0'=n0^post21, x_next^0'=x_next^post21, fair^0'=fair^post21, y_next^0'=y_next^post21, pc_Plan^0'=pc_Plan^post21, pc_Drive^0'=pc_Drive^post21, is_aborted_next^0'=is_aborted_next^post21, x^0'=x^post21, executed_Drive^0'=executed_Drive^post21, pc_Loop^0'=pc_Loop^post21, n1^0'=n1^post21, y^0'=y^post21, is_aborted^0'=is_aborted^post21, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=pc_Drive_next^post21, (0 == 0 /\ -4+pc_Drive_next^post21 <= 0 /\ 4-pc_Drive_next^post21 <= 0 /\ -7+pc_Drive_next^post21 <= 0 /\ 1-pc_Plan_next^post21 <= 0 /\ n0^0-n0^post21 == 0 /\ -1-y^0+y_next^post21 <= 0 /\ -1-x^0+x_next^post21 <= 0 /\ -6+pc_Loop^post21 == 0 /\ pc_Plan^post21-pc_Plan_next^post21 == 0 /\ -1+executed_Drive^post21 == 0 /\ -pc_Drive_next^post21+pc_Drive^post21 == 0 /\ x^post21-x_next^post21 == 0 /\ 1-pc_Drive_next^post21 <= 0 /\ -is_aborted_next^post21+is_aborted^post21 == 0 /\ y^post21-y_next^post21 == 0 /\ -1+is_aborted_next^post21 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1+y^0-y_next^post21 <= 0 /\ 1+x^0-x_next^post21 <= 0 /\ -is_aborted_next^post21 <= 0 /\ 1-is_aborted^post21 <= 0 /\ -n1^post21+n1^0 == 0 /\ fair^0-fair^post21 == 0), cost: 1
New rule:
l5 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : n0^0'=n0^post22, x_next^0'=x_next^post22, fair^0'=fair^post22, y_next^0'=y_next^post22, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive^post22, is_aborted_next^0'=is_aborted_next^post22, x^0'=x^post22, executed_Drive^0'=executed_Drive^post22, pc_Loop^0'=pc_Loop^post22, n1^0'=n1^post22, y^0'=y^post22, is_aborted^0'=is_aborted^post22, pc_Plan_next^0'=pc_Plan_next^post22, pc_Drive_next^0'=pc_Drive_next^post22, (0 == 0 /\ y^post22-y_next^post22 == 0 /\ -pc_Plan_next^post22+pc_Plan^post22 == 0 /\ 1-is_aborted^post22 <= 0 /\ -executed_Drive^post22+executed_Drive^0 == 0 /\ fair^0-fair^post22 == 0 /\ x^post22-x_next^post22 == 0 /\ -1+is_aborted_next^post22 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ pc_Drive^post22-pc_Drive_next^post22 == 0 /\ -is_aborted_next^post22+is_aborted^post22 == 0 /\ -is_aborted_next^post22 <= 0 /\ 5-pc_Drive_next^post22 <= 0 /\ n0^0-n0^post22 == 0 /\ 1-pc_Plan_next^post22 <= 0 /\ -y_next^post22+y^0 <= 0 /\ x_next^post22-x^0 <= 0 /\ 1-pc_Drive_next^post22 <= 0 /\ y_next^post22-y^0 <= 0 /\ -x_next^post22+x^0 <= 0 /\ -n1^post22+n1^0 == 0 /\ -7+pc_Plan_next^post22 <= 0 /\ -6+pc_Loop^post22 == 0), cost: 1
New rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan^post22 <= 0), cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : n0^0'=n0^post23, x_next^0'=x_next^post23, fair^0'=fair^post23, y_next^0'=y_next^post23, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=is_aborted_next^post23, x^0'=x^post23, executed_Drive^0'=executed_Drive^post23, pc_Loop^0'=pc_Loop^post23, n1^0'=n1^post23, y^0'=y^post23, is_aborted^0'=is_aborted^post23, pc_Plan_next^0'=pc_Plan_next^post23, pc_Drive_next^0'=pc_Drive_next^post23, (0 == 0 /\ -pc_Drive_next^post23+pc_Drive^post23 == 0 /\ -is_aborted_next^post23 <= 0 /\ -is_aborted_next^post23+is_aborted^post23 == 0 /\ -1+is_aborted_next^post23 <= 0 /\ -y_next^post23+y^post23 == 0 /\ 1-pc_Drive_next^post23 <= 0 /\ -7+pc_Plan_next^post23 <= 0 /\ x^0-x_next^post23 <= 0 /\ -3+pc_Drive_next^post23 <= 0 /\ 1-is_aborted^post23 <= 0 /\ y_next^post23-y^0 <= 0 /\ x^post23-x_next^post23 == 0 /\ fair^0-fair^post23 == 0 /\ -x^0+x_next^post23 <= 0 /\ -7+pc_Drive_next^post23 <= 0 /\ -executed_Drive^post23+executed_Drive^0 == 0 /\ -y_next^post23+y^0 <= 0 /\ -6+pc_Loop^post23 == 0 /\ n0^0-n0^post23 == 0 /\ -pc_Plan_next^post23+pc_Plan^post23 == 0 /\ -n1^post23+n1^0 == 0 /\ 1-pc_Plan_next^post23 <= 0), cost: 1
New rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : n0^0'=n0^post24, x_next^0'=x_next^post24, fair^0'=fair^post24, y_next^0'=y_next^post24, pc_Plan^0'=pc_Plan^post24, pc_Drive^0'=pc_Drive^post24, is_aborted_next^0'=is_aborted_next^post24, x^0'=x^post24, executed_Drive^0'=executed_Drive^post24, pc_Loop^0'=pc_Loop^post24, n1^0'=n1^post24, y^0'=y^post24, is_aborted^0'=is_aborted^post24, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=pc_Drive_next^post24, (0 == 0 /\ -1-x^0+x_next^post24 <= 0 /\ -is_aborted_next^post24+is_aborted^post24 == 0 /\ -3+pc_Loop^post24 == 0 /\ is_aborted^post24 <= 0 /\ 1-pc_Drive_next^post24 <= 0 /\ -1-y^0+y_next^post24 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+executed_Drive^post24 == 0 /\ 1+x^0-x_next^post24 <= 0 /\ y^post24-y_next^post24 == 0 /\ -is_aborted_next^post24 <= 0 /\ fair^0-fair^post24 == 0 /\ pc_Drive^post24-pc_Drive_next^post24 == 0 /\ x^post24-x_next^post24 == 0 /\ -1+is_aborted_next^post24 <= 0 /\ pc_Plan^post24-pc_Plan_next^post24 == 0 /\ -7+pc_Drive_next^post24 <= 0 /\ 1+y^0-y_next^post24 <= 0 /\ 1-pc_Plan_next^post24 <= 0 /\ -4+pc_Drive_next^post24 <= 0 /\ 4-pc_Drive_next^post24 <= 0 /\ n0^0-n0^post24 == 0 /\ -n1^post24+n1^0 == 0), cost: 1
New rule:
l4 -> l5 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post24, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=3, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=4, (-7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : n0^0'=n0^post25, x_next^0'=x_next^post25, fair^0'=fair^post25, y_next^0'=y_next^post25, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive^post25, is_aborted_next^0'=is_aborted_next^post25, x^0'=x^post25, executed_Drive^0'=executed_Drive^post25, pc_Loop^0'=pc_Loop^post25, n1^0'=n1^post25, y^0'=y^post25, is_aborted^0'=is_aborted^post25, pc_Plan_next^0'=pc_Plan_next^post25, pc_Drive_next^0'=pc_Drive_next^post25, (0 == 0 /\ -3+pc_Loop^post25 == 0 /\ pc_Drive^post25-pc_Drive_next^post25 == 0 /\ y_next^post25-y^0 <= 0 /\ fair^0-fair^post25 == 0 /\ -pc_Plan_next^post25+pc_Plan^post25 == 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 1-pc_Plan_next^post25 <= 0 /\ n0^0-n0^post25 == 0 /\ 5-pc_Drive_next^post25 <= 0 /\ -y_next^post25+y^0 <= 0 /\ -is_aborted_next^post25 <= 0 /\ x_next^post25-x^0 <= 0 /\ y^post25-y_next^post25 == 0 /\ -is_aborted_next^post25+is_aborted^post25 == 0 /\ -1+is_aborted_next^post25 <= 0 /\ 1-pc_Drive_next^post25 <= 0 /\ -x_next^post25+x^post25 == 0 /\ -executed_Drive^post25+executed_Drive^0 == 0 /\ -x_next^post25+x^0 <= 0 /\ n1^0-n1^post25 == 0 /\ -7+pc_Plan_next^post25 <= 0 /\ is_aborted^post25 <= 0), cost: 1
New rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive_next^post25, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post25, pc_Drive_next^0'=pc_Drive_next^post25, (-1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0), cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : n0^0'=n0^post26, x_next^0'=x_next^post26, fair^0'=fair^post26, y_next^0'=y_next^post26, pc_Plan^0'=pc_Plan^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=is_aborted_next^post26, x^0'=x^post26, executed_Drive^0'=executed_Drive^post26, pc_Loop^0'=pc_Loop^post26, n1^0'=n1^post26, y^0'=y^post26, is_aborted^0'=is_aborted^post26, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive_next^post26, (0 == 0 /\ -n1^post26+n1^0 == 0 /\ -pc_Drive_next^post26+pc_Drive^post26 == 0 /\ x^0-x_next^post26 <= 0 /\ -7+pc_Drive_next^post26 <= 0 /\ x^post26-x_next^post26 == 0 /\ -is_aborted_next^post26 <= 0 /\ pc_Plan^post26-pc_Plan_next^post26 == 0 /\ -x^0+x_next^post26 <= 0 /\ 1-pc_Plan_next^post26 <= 0 /\ -3+pc_Drive_next^post26 <= 0 /\ -1+is_aborted_next^post26 <= 0 /\ n0^0-n0^post26 == 0 /\ is_aborted^post26 <= 0 /\ -3+pc_Loop^post26 == 0 /\ y^0-y_next^post26 <= 0 /\ -fair^post26+fair^0 == 0 /\ y^post26-y_next^post26 == 0 /\ 1-pc_Drive_next^post26 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -executed_Drive^post26+executed_Drive^0 == 0 /\ -y^0+y_next^post26 <= 0 /\ -is_aborted_next^post26+is_aborted^post26 == 0), cost: 1
New rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive^post26, (-1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : n0^0'=n0^post31, x_next^0'=x_next^post31, fair^0'=fair^post31, y_next^0'=y_next^post31, pc_Plan^0'=pc_Plan^post31, pc_Drive^0'=pc_Drive^post31, is_aborted_next^0'=is_aborted_next^post31, x^0'=x^post31, executed_Drive^0'=executed_Drive^post31, pc_Loop^0'=pc_Loop^post31, n1^0'=n1^post31, y^0'=y^post31, is_aborted^0'=is_aborted^post31, pc_Plan_next^0'=pc_Plan_next^post31, pc_Drive_next^0'=pc_Drive_next^post31, (0 == 0 /\ n0^0-n0^post31 == 0 /\ -7+pc_Plan_next^post31 <= 0 /\ 3-pc_Plan^post31 <= 0 /\ -1+x_next^post31-x^0 <= 0 /\ -2+pc_Loop^post31 == 0 /\ 1-y_next^post31+y^0 <= 0 /\ -4+pc_Drive_next^post31 <= 0 /\ 4-pc_Drive_next^post31 <= 0 /\ -1+executed_Drive^post31 == 0 /\ -7+pc_Drive_next^post31 <= 0 /\ -is_aborted_next^post31 <= 0 /\ 1-pc_Plan_next^post31 <= 0 /\ -pc_Plan_next^post31+pc_Plan^post31 == 0 /\ -1+is_aborted_next^post31 <= 0 /\ -3+pc_Plan^post31 <= 0 /\ y^post31-y_next^post31 == 0 /\ -x_next^post31+x^post31 == 0 /\ 1-x_next^post31+x^0 <= 0 /\ -is_aborted_next^post31+is_aborted^post31 == 0 /\ -1+y_next^post31-y^0 <= 0 /\ pc_Drive^post31-pc_Drive_next^post31 == 0 /\ n1^0-n1^post31 == 0 /\ fair^0-fair^post31 == 0 /\ is_aborted^post31 <= 0 /\ 1-pc_Drive_next^post31 <= 0), cost: 1
New rule:
l1 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : n0^0'=n0^post32, x_next^0'=x_next^post32, fair^0'=fair^post32, y_next^0'=y_next^post32, pc_Plan^0'=pc_Plan^post32, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=is_aborted_next^post32, x^0'=x^post32, executed_Drive^0'=executed_Drive^post32, pc_Loop^0'=pc_Loop^post32, n1^0'=n1^post32, y^0'=y^post32, is_aborted^0'=is_aborted^post32, pc_Plan_next^0'=pc_Plan_next^post32, pc_Drive_next^0'=pc_Drive_next^post32, (0 == 0 /\ n0^0-n0^post32 == 0 /\ -7+pc_Plan_next^post32 <= 0 /\ x^0-x_next^post32 <= 0 /\ 3-pc_Plan^post32 <= 0 /\ -n1^post32+n1^0 == 0 /\ -2+pc_Loop^post32 == 0 /\ y^post32-y_next^post32 == 0 /\ 5-pc_Drive_next^post32 <= 0 /\ is_aborted^post32 <= 0 /\ -x^0+x_next^post32 <= 0 /\ -7+pc_Drive_next^post32 <= 0 /\ 1-pc_Plan_next^post32 <= 0 /\ -1+is_aborted_next^post32 <= 0 /\ y^0-y_next^post32 <= 0 /\ -3+pc_Plan^post32 <= 0 /\ -is_aborted_next^post32 <= 0 /\ x^post32-x_next^post32 == 0 /\ fair^0-fair^post32 == 0 /\ -pc_Drive_next^post32+pc_Drive^post32 == 0 /\ -is_aborted_next^post32+is_aborted^post32 == 0 /\ executed_Drive^post32 == 0 /\ -y^0+y_next^post32 <= 0 /\ pc_Plan^post32-pc_Plan_next^post32 == 0 /\ 1-pc_Drive_next^post32 <= 0), cost: 1
New rule:
l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : n0^0'=n0^post33, x_next^0'=x_next^post33, fair^0'=fair^post33, y_next^0'=y_next^post33, pc_Plan^0'=pc_Plan^post33, pc_Drive^0'=pc_Drive^post33, is_aborted_next^0'=is_aborted_next^post33, x^0'=x^post33, executed_Drive^0'=executed_Drive^post33, pc_Loop^0'=pc_Loop^post33, n1^0'=n1^post33, y^0'=y^post33, is_aborted^0'=is_aborted^post33, pc_Plan_next^0'=pc_Plan_next^post33, pc_Drive_next^0'=pc_Drive_next^post33, (0 == 0 /\ 1-pc_Plan_next^post33 <= 0 /\ is_aborted^post33 <= 0 /\ -1+is_aborted_next^post33 <= 0 /\ is_aborted^post33-is_aborted_next^post33 == 0 /\ -3+pc_Plan^post33 <= 0 /\ -is_aborted_next^post33 <= 0 /\ -y_next^post33+y^0 <= 0 /\ fair^0-fair^post33 == 0 /\ pc_Drive^post33-pc_Drive_next^post33 == 0 /\ -n1^post33+n1^0 == 0 /\ x^post33-x_next^post33 == 0 /\ 1-pc_Drive_next^post33 <= 0 /\ pc_Plan^post33-pc_Plan_next^post33 == 0 /\ y_next^post33-y^0 <= 0 /\ n0^0-n0^post33 == 0 /\ -x_next^post33+x^0 <= 0 /\ executed_Drive^post33 == 0 /\ -7+pc_Plan_next^post33 <= 0 /\ 3-pc_Plan^post33 <= 0 /\ -3+pc_Drive_next^post33 <= 0 /\ -2+pc_Loop^post33 == 0 /\ y^post33-y_next^post33 == 0 /\ x_next^post33-x^0 <= 0 /\ -7+pc_Drive_next^post33 <= 0), cost: 1
New rule:
l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 1

Applied preprocessing
Original rule:
l6 -> l1 : n0^0'=n0^post36, x_next^0'=x_next^post36, fair^0'=fair^post36, y_next^0'=y_next^post36, pc_Plan^0'=pc_Plan^post36, pc_Drive^0'=pc_Drive^post36, is_aborted_next^0'=is_aborted_next^post36, x^0'=x^post36, executed_Drive^0'=executed_Drive^post36, pc_Loop^0'=pc_Loop^post36, n1^0'=n1^post36, y^0'=y^post36, is_aborted^0'=is_aborted^post36, pc_Plan_next^0'=pc_Plan_next^post36, pc_Drive_next^0'=pc_Drive_next^post36, (-is_aborted^post36+is_aborted^0 == 0 /\ -x^post36+x^0 == 0 /\ fair^0-fair^post36 == 0 /\ -pc_Drive^post36+pc_Drive^0 == 0 /\ -y^post36+y^0 == 0 /\ -executed_Drive^post36+executed_Drive^0 == 0 /\ is_aborted_next^0-is_aborted_next^post36 == 0 /\ pc_Loop^0-pc_Loop^post36 == 0 /\ x_next^0-x_next^post36 == 0 /\ y_next^0-y_next^post36 == 0 /\ pc_Plan^0-pc_Plan^post36 == 0 /\ -n0^post36+n0^0 == 0 /\ n1^0-n1^post36 == 0 /\ -pc_Drive_next^post36+pc_Drive_next^0 == 0 /\ -pc_Plan_next^post36+pc_Plan_next^0 == 0), cost: 1
New rule:
l6 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : n0^0'=n0^post37, x_next^0'=x_next^post37, fair^0'=fair^post37, y_next^0'=y_next^post37, pc_Plan^0'=pc_Plan^post37, pc_Drive^0'=pc_Drive^post37, is_aborted_next^0'=is_aborted_next^post37, x^0'=x^post37, executed_Drive^0'=executed_Drive^post37, pc_Loop^0'=pc_Loop^post37, n1^0'=n1^post37, y^0'=y^post37, is_aborted^0'=is_aborted^post37, pc_Plan_next^0'=pc_Plan_next^post37, pc_Drive_next^0'=pc_Drive_next^post37, (pc_Plan_next^0-pc_Plan_next^post37 == 0 /\ -is_aborted^post37+is_aborted^0 == 0 /\ pc_Plan^0-pc_Plan^post37 == 0 /\ -pc_Loop^post37+pc_Loop^0 == 0 /\ -y_next^post37+y_next^0 == 0 /\ n1^0-n1^post37 == 0 /\ x_next^0-x_next^post37 == 0 /\ -y^post37+y^0 == 0 /\ -executed_Drive^post37+executed_Drive^0 == 0 /\ fair^0-fair^post37 == 0 /\ n0^0-n0^post37 == 0 /\ pc_Drive^0-pc_Drive^post37 == 0 /\ is_aborted_next^0-is_aborted_next^post37 == 0 /\ -pc_Drive_next^post37+pc_Drive_next^0 == 0 /\ x^0-x^post37 == 0), cost: 1
New rule:
l7 -> l6 : TRUE, cost: 1

Simplified rules
Start location: l7
  49: l1 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 1
  50: l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 1
  51: l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 1
  38: l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post7, pc_Drive^0'=7, is_aborted_next^0'=is_aborted^post7, pc_Loop^0'=4, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=7, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+executed_Drive^0 == 0), cost: 1
  39: l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=2, is_aborted_next^0'=1, executed_Drive^0'=0, pc_Loop^0'=4, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post11, pc_Drive_next^0'=2, (-1+pc_Plan^post11 >= 0 /\ -7+pc_Plan^post11 <= 0), cost: 1
  40: l3 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 1
  41: l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 1
  42: l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1
  46: l4 -> l5 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post24, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=3, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=4, (-7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 1
  47: l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive_next^post25, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post25, pc_Drive_next^0'=pc_Drive_next^post25, (-1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0), cost: 1
  48: l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive^post26, (-1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 1
  43: l5 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 1
  44: l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan^post22 <= 0), cost: 1
  45: l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 1
  52: l6 -> l1 : TRUE, cost: 1
  53: l7 -> l6 : TRUE, cost: 1


Eliminating location l6 by chaining:

Applied chaining
First rule:
l7 -> l6 : TRUE, cost: 1
Second rule:
l6 -> l1 : TRUE, cost: 1
New rule:
l7 -> l1 : TRUE, cost: 2

Applied deletion
Removed the following rules: 52 53

Eliminated locations on linear paths
Start location: l7
  49: l1 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 1
  50: l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 1
  51: l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 1
  38: l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post7, pc_Drive^0'=7, is_aborted_next^0'=is_aborted^post7, pc_Loop^0'=4, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=7, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+executed_Drive^0 == 0), cost: 1
  39: l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=2, is_aborted_next^0'=1, executed_Drive^0'=0, pc_Loop^0'=4, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post11, pc_Drive_next^0'=2, (-1+pc_Plan^post11 >= 0 /\ -7+pc_Plan^post11 <= 0), cost: 1
  40: l3 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 1
  41: l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 1
  42: l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1
  46: l4 -> l5 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post24, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=3, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=4, (-7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 1
  47: l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive_next^post25, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post25, pc_Drive_next^0'=pc_Drive_next^post25, (-1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0), cost: 1
  48: l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive^post26, (-1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 1
  43: l5 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 1
  44: l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan^post22 <= 0), cost: 1
  45: l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 1
  54: l7 -> l1 : TRUE, cost: 2


Eliminating location l1 by chaining:

Applied chaining
First rule:
l7 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 1
New rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3

Applied chaining
First rule:
l7 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 1
New rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3

Applied chaining
First rule:
l7 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 1
New rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3

Applied deletion
Removed the following rules: 49 50 51 54

Eliminating location l5 by chaining:

Applied chaining
First rule:
l4 -> l5 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post24, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=3, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=4, (-7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=2+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post24, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=3, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=4, (-7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan^post22 <= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post24, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=3, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post24, pc_Drive_next^0'=4, (-7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive_next^post25, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post25, pc_Drive_next^0'=pc_Drive_next^post25, (-1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive_next^post25, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post25, pc_Drive_next^0'=pc_Drive_next^post25, (-1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan^post22 <= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post25, pc_Drive^0'=pc_Drive_next^post25, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post25, pc_Drive_next^0'=pc_Drive_next^post25, (-1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive^post26, (-1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive^post26, (-1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan^post22 <= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 2

Applied chaining
First rule:
l4 -> l5 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post26, pc_Drive^0'=pc_Drive^post26, is_aborted_next^0'=0, pc_Loop^0'=3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post26, pc_Drive_next^0'=pc_Drive^post26, (-1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 1
Second rule:
l5 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 1
New rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2

Applied deletion
Removed the following rules: 43 44 45 46 47 48

Eliminating location l3 by chaining:

Applied chaining
First rule:
l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post7, pc_Drive^0'=7, is_aborted_next^0'=is_aborted^post7, pc_Loop^0'=4, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=7, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+executed_Drive^0 == 0), cost: 1
Second rule:
l3 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 1
New rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2

Applied chaining
First rule:
l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post7, pc_Drive^0'=7, is_aborted_next^0'=is_aborted^post7, pc_Loop^0'=4, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=7, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+executed_Drive^0 == 0), cost: 1
Second rule:
l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 1
New rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2

Applied chaining
First rule:
l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post7, pc_Drive^0'=7, is_aborted_next^0'=is_aborted^post7, pc_Loop^0'=4, is_aborted^0'=is_aborted^post7, pc_Plan_next^0'=pc_Plan_next^post7, pc_Drive_next^0'=7, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+executed_Drive^0 == 0), cost: 1
Second rule:
l3 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 1
New rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2

Applied chaining
First rule:
l2 -> l3 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post11, pc_Drive^0'=2, is_aborted_next^0'=1, executed_Drive^0'=0, pc_Loop^0'=4, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post11, pc_Drive_next^0'=2, (-1+pc_Plan^post11 >= 0 /\ -7+pc_Plan^post11 <= 0), cost: 1
Second rule:
l3 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 1
New rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2

Applied deletion
Removed the following rules: 38 39 40 41 42

Eliminated locations on tree-shaped paths
Start location: l7
  67: l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
  68: l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
  69: l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
  70: l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
  58: l4 -> l2 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=2+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
  59: l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
  60: l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
  61: l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
  62: l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0), cost: 2
  63: l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
  64: l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
  65: l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 2
  66: l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
  55: l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
  56: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
  57: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3


Eliminating location l2 by chaining:

Applied chaining
First rule:
l4 -> l2 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=2+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=2+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=2+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=2+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 == 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post21, pc_Drive^0'=4, is_aborted_next^0'=1, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=6, y^0'=1+y^0, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan_next^post21, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post22, pc_Drive^0'=pc_Drive_next^post22, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post22, pc_Drive_next^0'=pc_Drive_next^post22, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied chaining
First rule:
l4 -> l2 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post23, pc_Drive^0'=pc_Drive^post23, is_aborted_next^0'=1, pc_Loop^0'=6, is_aborted^0'=1, pc_Plan_next^0'=pc_Plan^post23, pc_Drive_next^0'=pc_Drive^post23, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0), cost: 2
Second rule:
l2 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 2
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied deletion
Removed the following rules: 58 59 60 61 62 63 64 65 66 67 68 69 70

Eliminated locations on tree-shaped paths
Start location: l7
  71: l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  72: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  73: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
  74: l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  75: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  76: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  77: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
  78: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  79: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  80: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  81: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
  82: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
  83: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
  84: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
  85: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
  86: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
  87: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
  88: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
  89: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
  90: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
  91: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
  92: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
  93: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
  94: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ 1-n0^0 <= 0), cost: 4
  95: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
  96: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
  97: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
  98: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
  99: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
 100: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
 101: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
 102: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
 103: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
 104: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
 105: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
 106: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ 1-n0^0 <= 0), cost: 4
  55: l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
  56: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
  57: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3


Applied simplification
Original rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 4-n1^0+y^0 <= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 4-n1^0+y^0 <= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 4-n1^0+y^0 <= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ 2-n1^0+y^0 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -7+pc_Plan_next^post24 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+pc_Plan_next^post24 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ 3-n0^0+x^0 <= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post25 >= 0 /\ -7+pc_Drive_next^post25 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post25 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan^post25 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan_next^post21 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post21 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+pc_Plan^post11 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -7+pc_Plan_next^post21 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -1+pc_Plan^post22 >= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan^post22 >= 0 /\ -7+pc_Drive_next^post22 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ -5+pc_Drive_next^post22 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post26 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post22 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan^post23 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ -7+pc_Plan_next^post7 <= 0 /\ -1+is_aborted^post7 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ is_aborted^post7 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Plan_next^post7 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-7+pc_Plan^post23 <= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ -1+pc_Plan^post11 >= 0 /\ -1+pc_Plan_next^post26 >= 0 /\ 2-n0^0+x^0 <= 0 /\ -3+pc_Drive^post26 <= 0 /\ -1+pc_Drive^post23 >= 0 /\ -1+pc_Drive^post26 >= 0 /\ -3+pc_Drive^post23 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post26 <= 0 /\ -7+pc_Plan^post11 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+pc_Plan^post23 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4

Simplified simple loops
Start location: l7
 107: l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 4-n1^0+y^0 <= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
 108: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4
 109: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
 110: l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
 111: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4
 112: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
 113: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
 114: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
 115: l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
 116: l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
  55: l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
  56: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
  57: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3


Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=3+x^0, y_next^0'=3+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 4-n1^0+y^0 <= 0 /\ 4-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_EAbGCa.txt

Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (7-pc_Plan_next^post19 >= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jkmaFo.txt

Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 3-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: 4*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KLHImO.txt

Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=2+x^0, y_next^0'=2+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=2+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 3-n0^0+x^0 <= 0 /\ 3-n1^0+y^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: 4*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_eKHnkO.txt

Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0+n3, y_next^0'=y^0+n3, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=x^0+n3, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-1+n0^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -1+n1^0-y^0-n3 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NIEHaI.txt

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n3, y_next^0'=y^0+n3, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=x^0+n3, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-1+n0^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -1+n1^0-y^0-n3 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n3
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 >= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n3, y_next^0'=y^0+n3, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=x^0+n3, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n3, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-1+n0^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -1+n1^0-y^0-n3 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n3
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0

Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0+n4, y_next^0'=y^0+n4, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+n4, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n4, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -1+n4 >= 0 /\ -1+n1^0-y^0-n4 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-n4 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: 4*n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jCFdlK.txt

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n4, y_next^0'=y^0+n4, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+n4, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n4, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -1+n4 >= 0 /\ -1+n1^0-y^0-n4 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-n4 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: 4*n4
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n4, y_next^0'=y^0+n4, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+n4, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n4, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -1+n4 >= 0 /\ -1+n1^0-y^0-n4 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-n4 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: 4*n4
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0

Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0+n5, y_next^0'=y^0+n5, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+n5, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n5, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n5 >= 0 /\ -1+n1^0-y^0-n5 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0-x^0-n5 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: 4*n5
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lCfmdK.txt

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n5, y_next^0'=y^0+n5, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+n5, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n5, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n5 >= 0 /\ -1+n1^0-y^0-n5 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0-x^0-n5 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: 4*n5
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n5, y_next^0'=y^0+n5, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+n5, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+n5, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n5 >= 0 /\ -1+n1^0-y^0-n5 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0-x^0-n5 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: 4*n5
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0

Applied nonterm
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> [8] : (7-pc_Plan_next^post19 >= 0 /\ -1+n6 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_EcEcKJ.txt

Applied nonterm
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n7 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lNddCg.txt

Applied acceleration
Original rule:
l4 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ 2-n1^0+y^0 <= 0 /\ 2-n0^0+x^0 <= 0 /\ 1-n1^0 <= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0+n8, y_next^0'=n8+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+n8, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=n8+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1-n8+n1^0-y^0 >= 0 /\ -1+n0^0-x^0-n8 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0 /\ -1+n8 >= 0), cost: 4*n8
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NceNiI.txt

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n8, y_next^0'=n8+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+n8, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=n8+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1-n8+n1^0-y^0 >= 0 /\ -1+n0^0-x^0-n8 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0 /\ -1+n8 >= 0), cost: 4*n8
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0

Applied instantiation
Original rule:
l4 -> l4 : x_next^0'=x^0+n8, y_next^0'=n8+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+n8, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=n8+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1-n8+n1^0-y^0 >= 0 /\ -1+n0^0-x^0-n8 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0 /\ -1+n8 >= 0), cost: 4*n8
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0

Applied chaining
First rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
Second rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 8

Applied nonterm
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 8
New rule:
l4 -> [8] : (7-pc_Plan_next^post19 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_eDOCPe.txt

Applied chaining
First rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
Second rule:
l4 -> [8] : (7-pc_Plan_next^post19 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l4 -> [8] : (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ 1-n1^0 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+executed_Drive^0 == 0 /\ -1+n19 >= 0 /\ 1-n0^0 <= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 1-n1^0 <= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ 1-n0^0 <= 0), cost: 4
Second rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
New rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 8

Applied nonterm
Original rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 8
New rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LHGpcC.txt

Applied chaining
First rule:
l4 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 1-n1^0 <= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 1-n0^0 <= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4
Second rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0), cost: NONTERM
New rule:
l4 -> [8] : (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ 1-n1^0 <= 0 /\ -1+n1^0 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 7-pc_Plan^post20 >= 0 /\ 1-n0^0 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: 4*n
New rule:
l4 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (7-pc_Plan_next^post19 >= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n0
New rule:
l4 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n0

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: 4*n1
New rule:
l4 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4*n1

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: 4*n2
New rule:
l4 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n2

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 >= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n0^0-4*x^0

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n1^0-4*y^0

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0

Applied simplification
Original rule:
l4 -> [8] : (7-pc_Plan_next^post19 >= 0 /\ -1+n6 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -1+n6 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n7 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n7 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0

Applied simplification
Original rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (0 >= 0 /\ n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ 7-pc_Plan_next^post18 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0

Applied simplification
Original rule:
l4 -> [8] : (7-pc_Plan_next^post19 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l4 -> [8] : (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ 7-pc_Plan_next^post19 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ 7-pc_Drive_next^post19 >= 0 /\ 1-n1^0 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+executed_Drive^0 == 0 /\ -1+n19 >= 0 /\ 1-n0^0 <= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ 7-pc_Plan^post20 >= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0), cost: NONTERM
New rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM

Applied simplification
Original rule:
l4 -> [8] : (1-n0^0+x^0 <= 0 /\ 1-n1^0+y^0 <= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ 3-pc_Drive_next^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ 1-n1^0 <= 0 /\ -1+n1^0 >= 0 /\ 1-executed_Drive^0 >= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ 7-pc_Plan^post20 >= 0 /\ 1-n0^0 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM
New rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 107 108 109 110 111 112 113 114 115 116

Accelerated simple loops
Start location: l7
 135: l4 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n
 136: l4 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n0
 137: l4 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4*n1
 138: l4 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n2
 139: l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
 140: l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
 141: l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n0^0-4*x^0
 142: l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n1^0-4*y^0
 143: l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
 144: l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
 145: l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -1+n6 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
 146: l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n7 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM
 147: l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
 148: l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
 149: l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
 150: l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
 151: l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM
 152: l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM
  55: l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
  56: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
  57: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3


Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n
New rule:
l7 -> l4 : x_next^0'=1+3*n+x^0, y_next^0'=1+3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-2-3*n+n1^0-y^0 >= 0 /\ -1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n
New rule:
l7 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n
New rule:
l7 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n0
New rule:
l7 -> l4 : x_next^0'=1+2*n0+x^0, y_next^0'=1+2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-2-2*n0+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -2+n0^0-2*n0-x^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 3+4*n0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n0
New rule:
l7 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 3+4*n0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 4*n0
New rule:
l7 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 3+4*n0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4*n1
New rule:
l7 -> l4 : x_next^0'=1+x^0+2*n1, y_next^0'=1+2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n0^0-x^0-2*n1 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -2-2*n1+n1^0-y^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 3+4*n1

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4*n1
New rule:
l7 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 3+4*n1

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 4*n1
New rule:
l7 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 3+4*n1

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n2
New rule:
l7 -> l4 : x_next^0'=1+x^0+2*n2, y_next^0'=1+y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-2+n0^0-x^0-2*n2 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -2+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n2

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n2
New rule:
l7 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n2

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 4*n2
New rule:
l7 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n2

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -3+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -5+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -1+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -1+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -3+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -5+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -1+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -1+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -3+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -5+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -1+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -1+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -5+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -1+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -1+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -3+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -5+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -3+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -5+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -1+n6 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n7 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM
New rule:
l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -3+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -5+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -1+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n0^0-4*x^0
New rule:
l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -1+4*n0^0-4*x^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -3+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -5+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -1+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
Second rule:
l4 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -4+4*n1^0-4*y^0
New rule:
l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -1+4*n1^0-4*y^0

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> [8] : (-7+pc_Plan_next^post19 <= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+executed_Drive^0 == 0 /\ -1+n19 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
New rule:
l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+executed_Drive^0 <= 0 /\ -1+executed_Drive^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM
New rule:
l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
Second rule:
l4 -> [8] : (-1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0 >= 0 /\ -1+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+executed_Drive^0 == 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -1+n28 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: NONTERM
New rule:
l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152

Chained accelerated rules with incoming rules
Start location: l7
  55: l7 -> l4 : x_next^0'=1+x^0, y_next^0'=1+y^0, pc_Plan^0'=3, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=4, (0 == 0 /\ -3 <= 0 /\ -2 <= 0 /\ -4 <= 0 /\ -1 <= 0), cost: 3
  56: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive^post32, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive^post32, (-7+pc_Drive^post32 <= 0 /\ -5+pc_Drive^post32 >= 0), cost: 3
  57: l7 -> l4 : x_next^0'=x^0, y_next^0'=y^0, pc_Plan^0'=3, pc_Drive^0'=pc_Drive_next^post33, is_aborted_next^0'=0, executed_Drive^0'=0, pc_Loop^0'=2, is_aborted^0'=0, pc_Plan_next^0'=3, pc_Drive_next^0'=pc_Drive_next^post33, (-1+pc_Drive_next^post33 >= 0 /\ -3+pc_Drive_next^post33 <= 0), cost: 3
 153: l7 -> l4 : x_next^0'=1+3*n+x^0, y_next^0'=1+3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-2-3*n+n1^0-y^0 >= 0 /\ -1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n
 154: l7 -> l4 : x_next^0'=3*n+x^0, y_next^0'=3*n+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=3*n+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=3*n+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+n >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n0^0-3*n-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1-3*n+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n
 155: l7 -> l4 : x_next^0'=1+2*n0+x^0, y_next^0'=1+2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=1+2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-2-2*n0+n1^0-y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -2+n0^0-2*n0-x^0 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 3+4*n0
 156: l7 -> l4 : x_next^0'=2*n0+x^0, y_next^0'=2*n0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=2*n0+x^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -1+n0^0-2*n0-x^0 >= 0 /\ -1+n0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1-2*n0+n1^0-y^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: 3+4*n0
 157: l7 -> l4 : x_next^0'=1+x^0+2*n1, y_next^0'=1+2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=1+x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n0^0-x^0-2*n1 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -2-2*n1+n1^0-y^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 3+4*n1
 158: l7 -> l4 : x_next^0'=x^0+2*n1, y_next^0'=2*n1+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=x^0+2*n1, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=2*n1+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+n1 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1-2*n1+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n0^0-x^0-2*n1 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: 3+4*n1
 159: l7 -> l4 : x_next^0'=1+x^0+2*n2, y_next^0'=1+y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=1+x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=1+y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-2+n0^0-x^0-2*n2 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -2+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n2
 160: l7 -> l4 : x_next^0'=x^0+2*n2, y_next^0'=y^0+2*n2, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=x^0+2*n2, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=y^0+2*n2, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -1+n2 >= 0 /\ -1+n1^0-y^0-2*n2 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0-x^0-2*n2 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: 3+4*n2
 161: l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -3+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -5+4*n0^0-4*x^0
 162: l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (-7+pc_Plan_next^post19 <= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -1+4*n0^0-4*x^0
 163: l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -3+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -5+4*n1^0-4*y^0
 164: l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post19, pc_Drive^0'=pc_Drive_next^post19, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post19, pc_Drive_next^0'=pc_Drive_next^post19, (n0^0-x^0-n1^0+y^0 >= 0 /\ -7+pc_Plan_next^post19 <= 0 /\ -2+n1^0-y^0 >= 0 /\ -5+pc_Drive_next^post19 >= 0 /\ -7+pc_Drive_next^post19 <= 0 /\ -1+n1^0 >= 0 /\ -1+pc_Plan_next^post19 >= 0 /\ -1+n0^0 >= 0), cost: -1+4*n1^0-4*y^0
 165: l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -3+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -5+4*n0^0-4*x^0
 166: l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (-1+pc_Drive_next^post20 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -1+4*n0^0-4*x^0
 167: l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -3+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -5+4*n1^0-4*y^0
 168: l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan^post20, pc_Drive^0'=pc_Drive_next^post20, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan^post20, pc_Drive_next^0'=pc_Drive_next^post20, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Drive_next^post20 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+pc_Plan^post20 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan^post20 <= 0 /\ -1+n0^0 >= 0 /\ -3+pc_Drive_next^post20 <= 0), cost: -1+4*n1^0-4*y^0
 169: l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -3+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -5+4*n0^0-4*x^0
 170: l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -3+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -5+4*n1^0-4*y^0
 171: l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM
 172: l7 -> l4 : x_next^0'=-1+n0^0, y_next^0'=-1+n0^0-x^0+y^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+n0^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n0^0-x^0+y^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (-1+pc_Plan_next^post18 >= 0 /\ -n0^0+x^0+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -1+4*n0^0-4*x^0
 173: l7 -> l4 : x_next^0'=-1+x^0+n1^0-y^0, y_next^0'=-1+n1^0, pc_Plan^0'=pc_Plan_next^post18, pc_Drive^0'=4, is_aborted_next^0'=0, x^0'=-1+x^0+n1^0-y^0, executed_Drive^0'=1, pc_Loop^0'=2, y^0'=-1+n1^0, is_aborted^0'=0, pc_Plan_next^0'=pc_Plan_next^post18, pc_Drive_next^0'=4, (n0^0-x^0-n1^0+y^0 >= 0 /\ -1+pc_Plan_next^post18 >= 0 /\ -2+n1^0-y^0 >= 0 /\ -1+n1^0 >= 0 /\ -7+pc_Plan_next^post18 <= 0 /\ -1+n0^0 >= 0), cost: -1+4*n1^0-4*y^0


Removed unreachable locations and irrelevant leafs
Start location: l7
 171: l7 -> [8] : (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 171 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-2+n1^0-y^0 >= 0 /\ -2+n0^0-x^0 >= 0 /\ -1+n1^0 >= 0 /\ -1+n0^0 >= 0)
