WORST_CASE(Omega(0),?)

Initial ITS
Start location: l7
   0: l0 -> l1 : i^0'=i^post0, x^0'=x^post0, __const_10^0'=__const_10^post0, j^0'=j^post0, (x^0-x^post0 == 0 /\ i^0-i^post0 == 0 /\ j^0-j^post0 == 0 /\ __const_10^0-__const_10^post0 == 0 /\ -i^0+x^0 <= 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, x^0'=x^post1, __const_10^0'=__const_10^post1, j^0'=j^post1, (__const_10^0-__const_10^post1 == 0 /\ -1-i^0+i^post1 == 0 /\ -2+j^post1-j^0 == 0 /\ x^0-x^post1 == 0 /\ 1+i^0-x^0 <= 0), cost: 1
   6: l1 -> l5 : i^0'=i^post6, x^0'=x^post6, __const_10^0'=__const_10^post6, j^0'=j^post6, (1-2*x^0+j^0 <= 0 /\ i^0-i^post6 == 0 /\ __const_10^0-__const_10^post6 == 0 /\ x^0-x^post6 == 0 /\ -j^post6+j^0 == 0), cost: 1
   7: l1 -> l5 : i^0'=i^post7, x^0'=x^post7, __const_10^0'=__const_10^post7, j^0'=j^post7, (-j^post7+j^0 == 0 /\ 2*x^0-j^0 <= 0 /\ -__const_10^post7+__const_10^0 == 0 /\ -x^post7+x^0 == 0 /\ i^0-i^post7 == 0), cost: 1
   4: l2 -> l0 : i^0'=i^post4, x^0'=x^post4, __const_10^0'=__const_10^post4, j^0'=j^post4, (-__const_10^post4+__const_10^0 == 0 /\ -j^post4+j^0 == 0 /\ -x^post4+x^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
   2: l3 -> l2 : i^0'=i^post2, x^0'=x^post2, __const_10^0'=__const_10^post2, j^0'=j^post2, (-x^post2+x^0 == 0 /\ 2-x^0 <= 0 /\ -__const_10^post2+__const_10^0 == 0 /\ i^post2 == 0 /\ -j^post2+j^0 == 0), cost: 1
   3: l3 -> l4 : i^0'=i^post3, x^0'=x^post3, __const_10^0'=__const_10^post3, j^0'=j^post3, (-__const_10^post3+__const_10^0 == 0 /\ -1+x^0 <= 0 /\ -j^post3+j^0 == 0 /\ -x^post3+x^0 == 0 /\ i^0-i^post3 == 0), cost: 1
   5: l5 -> l4 : i^0'=i^post5, x^0'=x^post5, __const_10^0'=__const_10^post5, j^0'=j^post5, (x^0-x^post5 == 0 /\ j^0-j^post5 == 0 /\ i^0-i^post5 == 0 /\ __const_10^0-__const_10^post5 == 0), cost: 1
   8: l6 -> l3 : i^0'=i^post8, x^0'=x^post8, __const_10^0'=__const_10^post8, j^0'=j^post8, (x^post8-__const_10^0 == 0 /\ j^post8 == 0 /\ -__const_10^post8+__const_10^0 == 0 /\ -i^post8+i^0 == 0), cost: 1
   9: l7 -> l6 : i^0'=i^post9, x^0'=x^post9, __const_10^0'=__const_10^post9, j^0'=j^post9, (-j^post9+j^0 == 0 /\ x^0-x^post9 == 0 /\ i^0-i^post9 == 0 /\ __const_10^0-__const_10^post9 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l7
   1: l0 -> l2 : i^0'=i^post1, x^0'=x^post1, __const_10^0'=__const_10^post1, j^0'=j^post1, (__const_10^0-__const_10^post1 == 0 /\ -1-i^0+i^post1 == 0 /\ -2+j^post1-j^0 == 0 /\ x^0-x^post1 == 0 /\ 1+i^0-x^0 <= 0), cost: 1
   4: l2 -> l0 : i^0'=i^post4, x^0'=x^post4, __const_10^0'=__const_10^post4, j^0'=j^post4, (-__const_10^post4+__const_10^0 == 0 /\ -j^post4+j^0 == 0 /\ -x^post4+x^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
   2: l3 -> l2 : i^0'=i^post2, x^0'=x^post2, __const_10^0'=__const_10^post2, j^0'=j^post2, (-x^post2+x^0 == 0 /\ 2-x^0 <= 0 /\ -__const_10^post2+__const_10^0 == 0 /\ i^post2 == 0 /\ -j^post2+j^0 == 0), cost: 1
   8: l6 -> l3 : i^0'=i^post8, x^0'=x^post8, __const_10^0'=__const_10^post8, j^0'=j^post8, (x^post8-__const_10^0 == 0 /\ j^post8 == 0 /\ -__const_10^post8+__const_10^0 == 0 /\ -i^post8+i^0 == 0), cost: 1
   9: l7 -> l6 : i^0'=i^post9, x^0'=x^post9, __const_10^0'=__const_10^post9, j^0'=j^post9, (-j^post9+j^0 == 0 /\ x^0-x^post9 == 0 /\ i^0-i^post9 == 0 /\ __const_10^0-__const_10^post9 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : i^0'=i^post1, x^0'=x^post1, __const_10^0'=__const_10^post1, j^0'=j^post1, (__const_10^0-__const_10^post1 == 0 /\ -1-i^0+i^post1 == 0 /\ -2+j^post1-j^0 == 0 /\ x^0-x^post1 == 0 /\ 1+i^0-x^0 <= 0), cost: 1
New rule:
l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1+i^0-x^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : i^0'=i^post2, x^0'=x^post2, __const_10^0'=__const_10^post2, j^0'=j^post2, (-x^post2+x^0 == 0 /\ 2-x^0 <= 0 /\ -__const_10^post2+__const_10^0 == 0 /\ i^post2 == 0 /\ -j^post2+j^0 == 0), cost: 1
New rule:
l3 -> l2 : i^0'=0, -2+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : i^0'=i^post4, x^0'=x^post4, __const_10^0'=__const_10^post4, j^0'=j^post4, (-__const_10^post4+__const_10^0 == 0 /\ -j^post4+j^0 == 0 /\ -x^post4+x^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l3 : i^0'=i^post8, x^0'=x^post8, __const_10^0'=__const_10^post8, j^0'=j^post8, (x^post8-__const_10^0 == 0 /\ j^post8 == 0 /\ -__const_10^post8+__const_10^0 == 0 /\ -i^post8+i^0 == 0), cost: 1
New rule:
l6 -> l3 : x^0'=__const_10^0, j^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : i^0'=i^post9, x^0'=x^post9, __const_10^0'=__const_10^post9, j^0'=j^post9, (-j^post9+j^0 == 0 /\ x^0-x^post9 == 0 /\ i^0-i^post9 == 0 /\ __const_10^0-__const_10^post9 == 0), cost: 1
New rule:
l7 -> l6 : TRUE, cost: 1

Simplified rules
Start location: l7
  10: l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1+i^0-x^0 <= 0, cost: 1
  12: l2 -> l0 : TRUE, cost: 1
  11: l3 -> l2 : i^0'=0, -2+x^0 >= 0, cost: 1
  13: l6 -> l3 : x^0'=__const_10^0, j^0'=0, TRUE, cost: 1
  14: l7 -> l6 : TRUE, cost: 1


Eliminating location l6 by chaining:

Applied chaining
First rule:
l7 -> l6 : TRUE, cost: 1
Second rule:
l6 -> l3 : x^0'=__const_10^0, j^0'=0, TRUE, cost: 1
New rule:
l7 -> l3 : x^0'=__const_10^0, j^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminating location l3 by chaining:

Applied chaining
First rule:
l7 -> l3 : x^0'=__const_10^0, j^0'=0, TRUE, cost: 2
Second rule:
l3 -> l2 : i^0'=0, -2+x^0 >= 0, cost: 1
New rule:
l7 -> l2 : i^0'=0, x^0'=__const_10^0, j^0'=0, -2+__const_10^0 >= 0, cost: 3

Applied deletion
Removed the following rules: 11 15

Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1+i^0-x^0 <= 0, cost: 1
New rule:
l2 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1+i^0-x^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 10 12

Eliminated locations on linear paths
Start location: l7
  17: l2 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1+i^0-x^0 <= 0, cost: 2
  16: l7 -> l2 : i^0'=0, x^0'=__const_10^0, j^0'=0, -2+__const_10^0 >= 0, cost: 3


Applied acceleration
Original rule:
l2 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1+i^0-x^0 <= 0, cost: 2
New rule:
l2 -> l2 : i^0'=i^0+n, j^0'=j^0+2*n, (-i^0+x^0-n >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LcmfHH.txt

Applied instantiation
Original rule:
l2 -> l2 : i^0'=i^0+n, j^0'=j^0+2*n, (-i^0+x^0-n >= 0 /\ n >= 0), cost: 2*n
New rule:
l2 -> l2 : i^0'=x^0, j^0'=-2*i^0+2*x^0+j^0, (0 >= 0 /\ -i^0+x^0 >= 0), cost: -2*i^0+2*x^0

Applied simplification
Original rule:
l2 -> l2 : i^0'=x^0, j^0'=-2*i^0+2*x^0+j^0, (0 >= 0 /\ -i^0+x^0 >= 0), cost: -2*i^0+2*x^0
New rule:
l2 -> l2 : i^0'=x^0, j^0'=-2*i^0+2*x^0+j^0, -i^0+x^0 >= 0, cost: -2*i^0+2*x^0

Applied deletion
Removed the following rules: 17

Accelerated simple loops
Start location: l7
  19: l2 -> l2 : i^0'=x^0, j^0'=-2*i^0+2*x^0+j^0, -i^0+x^0 >= 0, cost: -2*i^0+2*x^0
  16: l7 -> l2 : i^0'=0, x^0'=__const_10^0, j^0'=0, -2+__const_10^0 >= 0, cost: 3


Applied chaining
First rule:
l7 -> l2 : i^0'=0, x^0'=__const_10^0, j^0'=0, -2+__const_10^0 >= 0, cost: 3
Second rule:
l2 -> l2 : i^0'=x^0, j^0'=-2*i^0+2*x^0+j^0, -i^0+x^0 >= 0, cost: -2*i^0+2*x^0
New rule:
l7 -> l2 : i^0'=__const_10^0, x^0'=__const_10^0, j^0'=2*__const_10^0, -2+__const_10^0 >= 0, cost: 3+2*__const_10^0

Applied deletion
Removed the following rules: 19

Chained accelerated rules with incoming rules
Start location: l7
  16: l7 -> l2 : i^0'=0, x^0'=__const_10^0, j^0'=0, -2+__const_10^0 >= 0, cost: 3
  20: l7 -> l2 : i^0'=__const_10^0, x^0'=__const_10^0, j^0'=2*__const_10^0, -2+__const_10^0 >= 0, cost: 3+2*__const_10^0


Removed unreachable locations and irrelevant leafs
Start location: l7
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

