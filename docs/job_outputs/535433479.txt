WORST_CASE(Omega(0),?)

Initial ITS
Start location: l4
   0: l0 -> l1 : n^0'=n^post0, e^0'=e^post0, (-1+e^post0-e^0 == 0 /\ -100+n^0 <= 0 /\ -11+n^post0-n^0 == 0 /\ 1-e^0 <= 0), cost: 1
   2: l0 -> l2 : n^0'=n^post2, e^0'=e^post2, (10-n^0+n^post2 == 0 /\ 1-e^0+e^post2 == 0 /\ 1-e^0 <= 0 /\ 101-n^0 <= 0), cost: 1
   1: l1 -> l0 : n^0'=n^post1, e^0'=e^post1, (e^0-e^post1 == 0 /\ n^0-n^post1 == 0), cost: 1
   3: l2 -> l0 : n^0'=n^post3, e^0'=e^post3, (n^0-n^post3 == 0 /\ -e^post3+e^0 == 0), cost: 1
   4: l3 -> l0 : n^0'=n^post4, e^0'=e^post4, (0 == 0 /\ -1+e^post4 == 0), cost: 1
   5: l4 -> l3 : n^0'=n^post5, e^0'=e^post5, (n^0-n^post5 == 0 /\ -e^post5+e^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : n^0'=n^post0, e^0'=e^post0, (-1+e^post0-e^0 == 0 /\ -100+n^0 <= 0 /\ -11+n^post0-n^0 == 0 /\ 1-e^0 <= 0), cost: 1
New rule:
l0 -> l1 : n^0'=11+n^0, e^0'=1+e^0, (-100+n^0 <= 0 /\ -1+e^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : n^0'=n^post1, e^0'=e^post1, (e^0-e^post1 == 0 /\ n^0-n^post1 == 0), cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : n^0'=n^post2, e^0'=e^post2, (10-n^0+n^post2 == 0 /\ 1-e^0+e^post2 == 0 /\ 1-e^0 <= 0 /\ 101-n^0 <= 0), cost: 1
New rule:
l0 -> l2 : n^0'=-10+n^0, e^0'=-1+e^0, (-101+n^0 >= 0 /\ -1+e^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : n^0'=n^post3, e^0'=e^post3, (n^0-n^post3 == 0 /\ -e^post3+e^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : n^0'=n^post4, e^0'=e^post4, (0 == 0 /\ -1+e^post4 == 0), cost: 1
New rule:
l3 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : n^0'=n^post5, e^0'=e^post5, (n^0-n^post5 == 0 /\ -e^post5+e^0 == 0), cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l4
   6: l0 -> l1 : n^0'=11+n^0, e^0'=1+e^0, (-100+n^0 <= 0 /\ -1+e^0 >= 0), cost: 1
   8: l0 -> l2 : n^0'=-10+n^0, e^0'=-1+e^0, (-101+n^0 >= 0 /\ -1+e^0 >= 0), cost: 1
   7: l1 -> l0 : TRUE, cost: 1
   9: l2 -> l0 : TRUE, cost: 1
  10: l3 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 1
  11: l4 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 1
New rule:
l4 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : n^0'=11+n^0, e^0'=1+e^0, (-100+n^0 <= 0 /\ -1+e^0 >= 0), cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : n^0'=11+n^0, e^0'=1+e^0, (-100+n^0 <= 0 /\ -1+e^0 >= 0), cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminating location l2 by chaining:

Applied chaining
First rule:
l0 -> l2 : n^0'=-10+n^0, e^0'=-1+e^0, (-101+n^0 >= 0 /\ -1+e^0 >= 0), cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : n^0'=-10+n^0, e^0'=-1+e^0, (-101+n^0 >= 0 /\ -1+e^0 >= 0), cost: 2

Applied deletion
Removed the following rules: 8 9

Eliminated locations on linear paths
Start location: l4
  13: l0 -> l0 : n^0'=11+n^0, e^0'=1+e^0, (-100+n^0 <= 0 /\ -1+e^0 >= 0), cost: 2
  14: l0 -> l0 : n^0'=-10+n^0, e^0'=-1+e^0, (-101+n^0 >= 0 /\ -1+e^0 >= 0), cost: 2
  12: l4 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 2


Applied acceleration
Original rule:
l0 -> l0 : n^0'=11+n^0, e^0'=1+e^0, (-100+n^0 <= 0 /\ -1+e^0 >= 0), cost: 2
New rule:
l0 -> l0 : n^0'=n^0+11*n, e^0'=e^0+n, (111-n^0-11*n >= 0 /\ n >= 0 /\ -1+e^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_OiDoDm.txt

Applied acceleration
Original rule:
l0 -> l0 : n^0'=-10+n^0, e^0'=-1+e^0, (-101+n^0 >= 0 /\ -1+e^0 >= 0), cost: 2
New rule:
l0 -> l0 : n^0'=n^0-10*n0, e^0'=-n0+e^0, (n0 >= 0 /\ -91+n^0-10*n0 >= 0 /\ -n0+e^0 >= 0), cost: 2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FdADPo.txt

Applied instantiation
Original rule:
l0 -> l0 : n^0'=n^0-10*n0, e^0'=-n0+e^0, (n0 >= 0 /\ -91+n^0-10*n0 >= 0 /\ -n0+e^0 >= 0), cost: 2*n0
New rule:
l0 -> l0 : n^0'=n^0-10*e^0, e^0'=0, (0 >= 0 /\ -91+n^0-10*e^0 >= 0 /\ e^0 >= 0), cost: 2*e^0

Applied simplification
Original rule:
l0 -> l0 : n^0'=n^0-10*e^0, e^0'=0, (0 >= 0 /\ -91+n^0-10*e^0 >= 0 /\ e^0 >= 0), cost: 2*e^0
New rule:
l0 -> l0 : n^0'=n^0-10*e^0, e^0'=0, (-91+n^0-10*e^0 >= 0 /\ e^0 >= 0), cost: 2*e^0

Applied deletion
Removed the following rules: 13 14

Accelerated simple loops
Start location: l4
  15: l0 -> l0 : n^0'=n^0+11*n, e^0'=e^0+n, (111-n^0-11*n >= 0 /\ n >= 0 /\ -1+e^0 >= 0), cost: 2*n
  17: l0 -> l0 : n^0'=n^0-10*e^0, e^0'=0, (-91+n^0-10*e^0 >= 0 /\ e^0 >= 0), cost: 2*e^0
  12: l4 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 2


Applied chaining
First rule:
l4 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 2
Second rule:
l0 -> l0 : n^0'=n^0+11*n, e^0'=e^0+n, (111-n^0-11*n >= 0 /\ n >= 0 /\ -1+e^0 >= 0), cost: 2*n
New rule:
l4 -> l0 : n^0'=n^post4+11*n, e^0'=1+n, (111-n^post4-11*n >= 0 /\ n >= 0), cost: 2+2*n

Applied chaining
First rule:
l4 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 2
Second rule:
l0 -> l0 : n^0'=n^0-10*e^0, e^0'=0, (-91+n^0-10*e^0 >= 0 /\ e^0 >= 0), cost: 2*e^0
New rule:
l4 -> l0 : n^0'=-10+n^post4, e^0'=0, -101+n^post4 >= 0, cost: 4

Applied deletion
Removed the following rules: 15 17

Chained accelerated rules with incoming rules
Start location: l4
  12: l4 -> l0 : n^0'=n^post4, e^0'=1, 0 == 0, cost: 2
  18: l4 -> l0 : n^0'=n^post4+11*n, e^0'=1+n, (111-n^post4-11*n >= 0 /\ n >= 0), cost: 2+2*n
  19: l4 -> l0 : n^0'=-10+n^post4, e^0'=0, -101+n^post4 >= 0, cost: 4


Removed unreachable locations and irrelevant leafs
Start location: l4
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

