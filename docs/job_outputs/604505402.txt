NO

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=arg2P0, arg1'=arg1P0, (-arg1P0 == 0 /\ -arg2P0 == 0), cost: 1
   1: f124_0_main_GT -> f124_0_main_GT : arg2'=arg2P1, arg1'=arg1P1, (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ 1+arg1-arg1P1 == 0 /\ 1+arg2 > 0 /\ arg2-arg2P1 == 0 /\ -1+arg2-arg1 >= 0), cost: 1
   2: f124_0_main_GT -> f124_0_main_GT : arg2'=arg2P2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ arg2-arg1 == 0 /\ 1+arg2 > 0 /\ 2+arg2-arg2P2 == 0 /\ 1+arg1-arg1P2 == 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=arg2P0, arg1'=arg1P0, (-arg1P0 == 0 /\ -arg2P0 == 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=arg2P1, arg1'=arg1P1, (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ 1+arg1-arg1P1 == 0 /\ 1+arg2 > 0 /\ arg2-arg2P1 == 0 /\ -1+arg2-arg1 >= 0), cost: 1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=1+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=arg2P2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ arg2-arg1 == 0 /\ 1+arg2 > 0 /\ 2+arg2-arg2P2 == 0 /\ 1+arg1-arg1P2 == 0), cost: 1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
   5: f124_0_main_GT -> f124_0_main_GT : arg1'=1+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 >= 0), cost: 1
   6: f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied acceleration
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=1+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 >= 0), cost: 1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg1+n, (1+arg1 > 0 /\ n >= 0 /\ arg2-arg1-n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BFEdiA.txt

Applied instantiation
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg1+n, (1+arg1 > 0 /\ n >= 0 /\ arg2-arg1-n >= 0), cost: n
New rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
Second rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=1+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 >= 0), cost: 1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=2+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 2

Applied nonterm
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=2+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 2
New rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ n1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lcLAHK.txt

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=1+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 >= 0), cost: 1
Second rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ n1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ n1 >= 0 /\ 1+arg2 > 0 /\ 1-arg2+arg1 >= 0 /\ -1+arg2-arg1 >= 0), cost: NONTERM

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=1+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 >= 0), cost: 1
Second rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=2+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 == 0), cost: 2

Applied nonterm
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=2+arg1, (1+arg1 > 0 /\ -1+arg2-arg1 == 0), cost: 2
New rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ n2 >= 0 /\ 1-arg2+arg1 >= 0 /\ -1+arg2-arg1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mPIDbO.txt

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
Second rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ n2 >= 0 /\ 1-arg2+arg1 >= 0 /\ -1+arg2-arg1 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ arg2-arg1 == 0 /\ 2+arg1 > 0 /\ 1+arg2 > 0 /\ n2 >= 0 /\ -arg2+arg1 >= 0), cost: NONTERM

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
Second rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=2+arg2, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 2+arg2-arg1

Applied nonterm
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=2+arg2, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 2+arg2-arg1
New rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GnoiJd.txt

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
Second rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg1 >= 0 /\ 1+arg2 > 0 /\ -1+n3 >= 0), cost: NONTERM

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
Second rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg2, (1+arg1 > 0 /\ arg2-arg1 >= 0), cost: 1+arg2-arg1

Applied nonterm
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg2, (1+arg1 > 0 /\ arg2-arg1 >= 0), cost: 1+arg2-arg1
New rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ -1+n4 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ahDcij.txt

Applied chaining
First rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
Second rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ -1+n4 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2-arg1 >= 0 /\ 2+arg1 > 0 /\ 1+arg2 > 0 /\ -1+n4 >= 0), cost: NONTERM

Applied simplification
Original rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
New rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1

Applied simplification
Original rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ n1 >= 0 /\ 1+arg2 > 0 /\ 1-arg2+arg1 >= 0 /\ -1+arg2-arg1 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ n1 >= 0 /\ 1-arg2+arg1 >= 0 /\ -1+arg2-arg1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ arg2-arg1 == 0 /\ 2+arg1 > 0 /\ 1+arg2 > 0 /\ n2 >= 0 /\ -arg2+arg1 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2 > 0 /\ n2 >= 0), cost: NONTERM

Applied simplification
Original rule:
f124_0_main_GT -> [3] : (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg1 >= 0 /\ 1+arg2 > 0 /\ -1+n3 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM

Applied simplification
Original rule:
f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2-arg1 >= 0 /\ 2+arg1 > 0 /\ 1+arg2 > 0 /\ -1+n4 >= 0), cost: NONTERM
New rule:
f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2 > 0 /\ -1+n4 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 5

Accelerated simple loops
Start location: __init
   4: f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
   6: f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
   8: f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ n1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0), cost: NONTERM
  10: f124_0_main_GT -> [3] : (1+arg1 > 0 /\ n2 >= 0 /\ 1-arg2+arg1 >= 0 /\ -1+arg2-arg1 >= 0), cost: NONTERM
  12: f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
  14: f124_0_main_GT -> [3] : (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ -1+n4 >= 0), cost: NONTERM
  16: f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
  17: f124_0_main_GT -> [3] : (1+arg1 > 0 /\ n1 >= 0 /\ 1-arg2+arg1 >= 0 /\ -1+arg2-arg1 >= 0), cost: NONTERM
  18: f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2 > 0 /\ n2 >= 0), cost: NONTERM
  19: f124_0_main_GT -> [3] : (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
  20: f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2 > 0 /\ -1+n4 >= 0), cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> f124_0_main_GT : arg2'=2+arg2, arg1'=1+arg1, (arg2-arg1 == 0 /\ 1+arg2 > 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=2, arg1'=1, (0 == 0 /\ 1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ n1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : 0 == 0, cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> [3] : (arg2-arg1 >= 0 /\ 1+arg2 > 0 /\ -arg2+arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : 0 == 0, cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ -1+n4 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : 0 == 0, cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> f124_0_main_GT : arg1'=arg2, (1+arg1 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
New rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, 0 == 0, cost: 1

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2 > 0 /\ n2 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : (0 == 0 /\ 1 > 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> [3] : (1+arg1 > 0 /\ arg2-arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : 0 == 0, cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
Second rule:
f124_0_main_GT -> [3] : (arg2-arg1 == 0 /\ 1+arg2 > 0 /\ -1+n4 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : (0 == 0 /\ 1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 6 8 10 12 14 16 17 18 19 20

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, TRUE, cost: 1
  21: f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=2, arg1'=1, (0 == 0 /\ 1 > 0), cost: 2
  22: f1_0_main_ConstantStackPush -> [3] : 0 == 0, cost: NONTERM
  23: f1_0_main_ConstantStackPush -> f124_0_main_GT : arg2'=0, arg1'=0, 0 == 0, cost: 1
  24: f1_0_main_ConstantStackPush -> [3] : (0 == 0 /\ 1 > 0), cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  22: f1_0_main_ConstantStackPush -> [3] : 0 == 0, cost: NONTERM
  24: f1_0_main_ConstantStackPush -> [3] : (0 == 0 /\ 1 > 0), cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> [3] : 0 == 0, cost: NONTERM
New rule:
__init -> [3] : 0 == 0, cost: NONTERM

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> [3] : (0 == 0 /\ 1 > 0), cost: NONTERM
New rule:
__init -> [3] : (0 == 0 /\ 1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 3 22 24

Eliminated locations on tree-shaped paths
Start location: __init
  25: __init -> [3] : 0 == 0, cost: NONTERM
  26: __init -> [3] : (0 == 0 /\ 1 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 25 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  0 == 0
