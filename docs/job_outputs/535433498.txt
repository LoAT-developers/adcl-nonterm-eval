WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0 /\ -arg3P0 == 0), cost: 1
   1: f262_0_take_GE -> f262_0_take_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4P1+arg4 == 0 /\ 1-arg1P1+arg1 >= 0 /\ arg2 > 0 /\ arg1P1 > 0 /\ 1-arg3P1+arg3 == 0 /\ 2+arg4-arg1 <= 0 /\ arg2-arg2P1 >= 0 /\ arg5-arg5P1 == 0 /\ -arg5+arg3 < 0 /\ arg1 > 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: 1
   2: __init -> f1_0_main_Load : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0 /\ -arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0), cost: 1

Applied preprocessing
Original rule:
f262_0_take_GE -> f262_0_take_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4P1+arg4 == 0 /\ 1-arg1P1+arg1 >= 0 /\ arg2 > 0 /\ arg1P1 > 0 /\ 1-arg3P1+arg3 == 0 /\ 2+arg4-arg1 <= 0 /\ arg2-arg2P1 >= 0 /\ arg5-arg5P1 == 0 /\ -arg5+arg3 < 0 /\ arg1 > 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: 1
New rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=1+arg4, arg1'=arg1P1, arg3'=1+arg3, (1-arg1P1+arg1 >= 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ 2+arg4-arg1 <= 0 /\ arg2-arg2P1 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: 1

Simplified rules
Start location: __init
   3: f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0), cost: 1
   4: f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=1+arg4, arg1'=arg1P1, arg3'=1+arg3, (1-arg1P1+arg1 >= 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ 2+arg4-arg1 <= 0 /\ arg2-arg2P1 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: 1
   2: __init -> f1_0_main_Load : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Applied acceleration
Original rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=1+arg4, arg1'=arg1P1, arg3'=1+arg3, (1-arg1P1+arg1 >= 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ 2+arg4-arg1 <= 0 /\ arg2-arg2P1 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: 1
New rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=n+arg4, arg1'=arg1P1, arg3'=n+arg3, (-1+arg1P1-n-arg4 >= 0 /\ 1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg1P1 > 0 /\ -1+n >= 0 /\ arg2-arg2P1 >= 0 /\ 1+arg5-n-arg3 > 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_koaFpF.txt

Applied instantiation
Original rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=n+arg4, arg1'=arg1P1, arg3'=n+arg3, (-1+arg1P1-n-arg4 >= 0 /\ 1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg1P1 > 0 /\ -1+n >= 0 /\ arg2-arg2P1 >= 0 /\ 1+arg5-n-arg3 > 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: n
New rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=arg5+arg4-arg3, arg1'=arg1P1, arg3'=arg5, (1-arg1P1+arg1 >= 0 /\ 1 > 0 /\ arg1P1-arg2P1 >= 0 /\ arg1P1 > 0 /\ arg2-arg2P1 >= 0 /\ -1-arg5+arg1P1-arg4+arg3 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ -1+arg5-arg3 >= 0 /\ 1+arg4 > 0), cost: arg5-arg3

Applied instantiation
Original rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=n+arg4, arg1'=arg1P1, arg3'=n+arg3, (-1+arg1P1-n-arg4 >= 0 /\ 1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg1P1 > 0 /\ -1+n >= 0 /\ arg2-arg2P1 >= 0 /\ 1+arg5-n-arg3 > 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: n
New rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=-1+arg1P1, arg1'=arg1P1, arg3'=-1+arg1P1-arg4+arg3, (0 >= 0 /\ 1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg1P1 > 0 /\ arg2-arg2P1 >= 0 /\ 2+arg5-arg1P1+arg4-arg3 > 0 /\ -2+arg1P1-arg4 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: -1+arg1P1-arg4

Applied simplification
Original rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=arg5+arg4-arg3, arg1'=arg1P1, arg3'=arg5, (1-arg1P1+arg1 >= 0 /\ 1 > 0 /\ arg1P1-arg2P1 >= 0 /\ arg1P1 > 0 /\ arg2-arg2P1 >= 0 /\ -1-arg5+arg1P1-arg4+arg3 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ -1+arg5-arg3 >= 0 /\ 1+arg4 > 0), cost: arg5-arg3
New rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=arg5+arg4-arg3, arg1'=arg1P1, arg3'=arg5, (1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg2-arg2P1 >= 0 /\ -1-arg5+arg1P1-arg4+arg3 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ -1+arg5-arg3 >= 0 /\ 1+arg4 > 0), cost: arg5-arg3

Applied simplification
Original rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=-1+arg1P1, arg1'=arg1P1, arg3'=-1+arg1P1-arg4+arg3, (0 >= 0 /\ 1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg1P1 > 0 /\ arg2-arg2P1 >= 0 /\ 2+arg5-arg1P1+arg4-arg3 > 0 /\ -2+arg1P1-arg4 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: -1+arg1P1-arg4
New rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=-1+arg1P1, arg1'=arg1P1, arg3'=-1+arg1P1-arg4+arg3, (1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg2-arg2P1 >= 0 /\ 2+arg5-arg1P1+arg4-arg3 > 0 /\ -2+arg1P1-arg4 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: -1+arg1P1-arg4

Applied deletion
Removed the following rules: 4

Accelerated simple loops
Start location: __init
   3: f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0), cost: 1
   7: f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=arg5+arg4-arg3, arg1'=arg1P1, arg3'=arg5, (1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg2-arg2P1 >= 0 /\ -1-arg5+arg1P1-arg4+arg3 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ -1+arg5-arg3 >= 0 /\ 1+arg4 > 0), cost: arg5-arg3
   8: f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=-1+arg1P1, arg1'=arg1P1, arg3'=-1+arg1P1-arg4+arg3, (1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg2-arg2P1 >= 0 /\ 2+arg5-arg1P1+arg4-arg3 > 0 /\ -2+arg1P1-arg4 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: -1+arg1P1-arg4
   2: __init -> f1_0_main_Load : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0), cost: 1
Second rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=arg5+arg4-arg3, arg1'=arg1P1, arg3'=arg5, (1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg2-arg2P1 >= 0 /\ -1-arg5+arg1P1-arg4+arg3 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ -1+arg5-arg3 >= 0 /\ 1+arg4 > 0), cost: arg5-arg3
New rule:
f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P1, arg4'=arg4P0+arg5P0, arg1'=arg1P1, arg3'=arg5P0, (arg1P1-arg2P1 >= 0 /\ -1+arg5P0 >= 0 /\ -arg1+arg2P1 <= 0 /\ -1+arg2 > 0 /\ arg2P1 > 0 /\ 1+arg4P0 > 0 /\ -1+arg1P1-arg4P0-arg5P0 >= 0), cost: 1+arg5P0

Applied chaining
First rule:
f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0), cost: 1
Second rule:
f262_0_take_GE -> f262_0_take_GE : arg2'=arg2P1, arg4'=-1+arg1P1, arg1'=arg1P1, arg3'=-1+arg1P1-arg4+arg3, (1-arg1P1+arg1 >= 0 /\ arg1P1-arg2P1 >= 0 /\ arg2-arg2P1 >= 0 /\ 2+arg5-arg1P1+arg4-arg3 > 0 /\ -2+arg1P1-arg4 >= 0 /\ arg2P1 > 0 /\ arg1-arg2P1 >= 0 /\ 1+arg4 > 0), cost: -1+arg1P1-arg4
New rule:
f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P1, arg4'=-1+arg1P1, arg1'=arg1P1, arg3'=-1+arg1P1-arg4P0, (2-arg1P1+arg4P0+arg5P0 > 0 /\ arg1P1-arg2P1 >= 0 /\ -2+arg1P1-arg4P0 >= 0 /\ -arg1+arg2P1 <= 0 /\ -1+arg2 > 0 /\ arg2P1 > 0 /\ 1+arg4P0 > 0), cost: arg1P1-arg4P0

Applied deletion
Removed the following rules: 7 8

Chained accelerated rules with incoming rules
Start location: __init
   3: f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=0, (arg2P0 > 0 /\ arg2P0-arg1 <= 0 /\ 1+arg5P0 > 0 /\ -1+arg2 > 0 /\ arg1P0 > 0 /\ 1+arg4P0 > 0), cost: 1
   9: f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P1, arg4'=arg4P0+arg5P0, arg1'=arg1P1, arg3'=arg5P0, (arg1P1-arg2P1 >= 0 /\ -1+arg5P0 >= 0 /\ -arg1+arg2P1 <= 0 /\ -1+arg2 > 0 /\ arg2P1 > 0 /\ 1+arg4P0 > 0 /\ -1+arg1P1-arg4P0-arg5P0 >= 0), cost: 1+arg5P0
  10: f1_0_main_Load -> f262_0_take_GE : arg5'=arg5P0, arg2'=arg2P1, arg4'=-1+arg1P1, arg1'=arg1P1, arg3'=-1+arg1P1-arg4P0, (2-arg1P1+arg4P0+arg5P0 > 0 /\ arg1P1-arg2P1 >= 0 /\ -2+arg1P1-arg4P0 >= 0 /\ -arg1+arg2P1 <= 0 /\ -1+arg2 > 0 /\ arg2P1 > 0 /\ 1+arg4P0 > 0), cost: arg1P1-arg4P0
   2: __init -> f1_0_main_Load : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

