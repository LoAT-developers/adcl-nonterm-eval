unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2
   0: f1_0_main_Load -> f115_0_main_EQ : arg1'=arg1p1, arg2'=arg2p1, (arg1p1 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   1: f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1p2, arg2'=arg2p2, (-arg1p2+arg1 == 0 /\ arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
   3: f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1p4, arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0 /\ arg1-arg1p4 == 0 /\ -x11+arg1 > 0), cost: 1
   2: f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=arg1p3, arg2'=arg2p3, (-2+arg1-2*x8 < 0 /\ -1-arg1p3+arg1 == 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0), cost: 1
   4: f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=arg1p5, arg2'=arg2p5, (arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg1'=arg1p6, arg2'=arg2p6, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2
   1: f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1p2, arg2'=arg2p2, (-arg1p2+arg1 == 0 /\ arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
   3: f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1p4, arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0 /\ arg1-arg1p4 == 0 /\ -x11+arg1 > 0), cost: 1
   2: f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=arg1p3, arg2'=arg2p3, (-2+arg1-2*x8 < 0 /\ -1-arg1p3+arg1 == 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0), cost: 1
   4: f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=arg1p5, arg2'=arg2p5, (arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0), cost: 1
   6: __init -> f115_0_main_EQ : arg1'=arg1p1, arg2'=arg2p1, (arg1p1 > 0 /\ 1+arg2p6 > 0 /\ arg1p6 > 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p6, arg2'=arg2p6, T, cost: 1
	Second rule:
	f1_0_main_Load -> f115_0_main_EQ : arg1'=arg1p1, arg2'=arg2p1, (arg1p1 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	__init -> f115_0_main_EQ : arg1'=arg1p1, arg2'=arg2p1, (arg1p1 > 0 /\ 1+arg2p6 > 0 /\ arg1p6 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 5

Simplified Transitions

Start location: __init
Program variables: arg1 arg2
   7: f115_0_main_EQ -> f115_0_main_EQ\' : arg2'=arg2p2, (arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
   9: f115_0_main_EQ -> f115_0_main_EQ\' : arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0), cost: 1
   4: f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=arg1p5, arg2'=arg2p5, (arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0), cost: 1
   8: f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=-1+arg1, arg2'=arg2p3, (-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0), cost: 1
  10: __init -> f115_0_main_EQ : arg1'=arg1p1, arg2'=arg2p1, (arg1p1 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1p2, arg2'=arg2p2, (-arg1p2+arg1 == 0 /\ arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
	New rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p2, (0 == 0 /\ arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
	
		propagated equality arg1p2 = arg1
		
	Simplified Guard

	Original rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p2, (0 == 0 /\ arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
	New rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p2, (arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p2, (arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
	New rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg2'=arg2p2, (arg1 > 0 /\ -1+arg1-2*x6 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=arg1p3, arg2'=arg2p3, (-2+arg1-2*x8 < 0 /\ -1-arg1p3+arg1 == 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0), cost: 1
	New rule:
	f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=-1+arg1, arg2'=arg2p3, (0 == 0 /\ -2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0), cost: 1
	
		propagated equality arg1p3 = -1+arg1
		
	Simplified Guard

	Original rule:
	f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=-1+arg1, arg2'=arg2p3, (0 == 0 /\ -2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0), cost: 1
	New rule:
	f115_0_main_EQ\' -> f115_0_main_EQ : arg1'=-1+arg1, arg2'=arg2p3, (-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1p4, arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0 /\ arg1-arg1p4 == 0 /\ -x11+arg1 > 0), cost: 1
	New rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p4, (0 == 0 /\ arg1-2*x10 == 0 /\ arg1 > 0 /\ -x11+arg1 > 0), cost: 1
	
		propagated equality arg1p4 = arg1
		
	Simplified Guard

	Original rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p4, (0 == 0 /\ arg1-2*x10 == 0 /\ arg1 > 0 /\ -x11+arg1 > 0), cost: 1
	New rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0 /\ -x11+arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0 /\ -x11+arg1 > 0), cost: 1
	New rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg1'=arg1, arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f115_0_main_EQ -> f115_0_main_EQ\' : arg2'=arg2p4, (arg1-2*x10 == 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f115_0_main_EQ : arg1'=arg1p1, arg2'=arg2p1, (arg1p1 > 0 /\ 1+arg2p6 > 0 /\ arg1p6 > 0), cost: 1
	New rule:
	__init -> f115_0_main_EQ : arg1'=arg1p1, arg2'=arg2p1, (arg1p1 > 0), cost: 1

Step with 10

	Trace

	10[(arg1p1 > 0)]
	
	Blocked

	[{}, {}]

Step with 7

	Trace

	10[(arg1p1 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)]
	
	Blocked

	[{}, {}, {}]

Step with 8

	Trace

	10[(arg1p1 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)], 8[(-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0)]
	
	Blocked

	[{}, {}, {4[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	10[(arg1p1 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)], 8[(-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {4[T]}, {7[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 4

	Trace

	10[(arg1p1 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)], 8[(-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)], 4[(arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0)]
	
	Blocked

	[{}, {}, {4[T]}, {7[T]}, {8[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	10[(arg1p1 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)], 8[(-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {4[T]}, {7[T]}, {4[T], 8[T]}]

Backtrack

	Trace

	10[(arg1p1 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)], 8[(-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0)]
	
	Blocked

	[{}, {}, {4[T]}, {7[T], 9[T]}]

Backtrack

	Trace

	10[(arg1p1 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)]
	
	Blocked

	[{}, {}, {4[T], 8[T]}]

Backtrack

	Trace

	10[(arg1p1 > 0)]
	
	Blocked

	[{}, {7[T]}]

Step with 9

	Trace

	10[(arg1p1 > 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {7[T]}, {}]

Step with 4

	Trace

	10[(arg1p1 > 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)], 4[(arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0)]
	
	Blocked

	[{}, {7[T]}, {}, {}]

Step with 7

	Trace

	10[(arg1p1 > 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)], 4[(arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)]
	
	Blocked

	[{}, {7[T]}, {}, {9[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 8

	Trace

	10[(arg1p1 > 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)], 4[(arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)], 8[(-2+arg1-2*x8 < 0 /\ arg1-2*x8 >= 0 /\ arg1 > 0 /\ -1+arg1-2*x8 == 0)]
	
	Blocked

	[{}, {7[T]}, {}, {9[T]}, {4[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	10[(arg1p1 > 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)], 4[(arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0)], 7[(arg1 > 0 /\ -1+arg1-2*x6 == 0)]
	
	Blocked

	[{}, {7[T]}, {}, {9[T]}, {4[T], 8[T]}]

Backtrack

	Trace

	10[(arg1p1 > 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)], 4[(arg1-2*arg1p5 >= 0 /\ -2+arg1-2*arg1p5 < 0 /\ arg1 > 0 /\ -2-2*x14+arg1 < 0 /\ -2*x14+arg1 >= 0 /\ -2*x14+arg1 == 0 /\ arg1-arg1p5 > 0)]
	
	Blocked

	[{}, {7[T]}, {}, {7[T], 9[T]}]

Backtrack

	Trace

	10[(arg1p1 > 0)], 9[(arg1-2*x10 == 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {7[T]}, {4[T]}]

Backtrack

	Trace

	10[(arg1p1 > 0)]
	
	Blocked

	[{}, {7[T], 9[T]}]

Backtrack

	Trace

	Blocked

	[{10[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
